ARM GAS  /tmp/ccZ1oEf9.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB144:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_host.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccZ1oEf9.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** DMA2D_HandleTypeDef hdma2d;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c3;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** LTDC_HandleTypeDef hltdc;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi5;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** UART_HandleTypeDef huart1;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** SDRAM_HandleTypeDef hsdram1;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE BEGIN PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  65:Core/Src/main.c **** void SystemClock_Config(void);
  66:Core/Src/main.c **** static void MX_GPIO_Init(void);
  67:Core/Src/main.c **** static void MX_CRC_Init(void);
  68:Core/Src/main.c **** static void MX_DMA2D_Init(void);
  69:Core/Src/main.c **** static void MX_FMC_Init(void);
  70:Core/Src/main.c **** static void MX_I2C3_Init(void);
  71:Core/Src/main.c **** static void MX_LTDC_Init(void);
  72:Core/Src/main.c **** static void MX_SPI5_Init(void);
  73:Core/Src/main.c **** static void MX_TIM1_Init(void);
  74:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  75:Core/Src/main.c **** void MX_USB_HOST_Process(void);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE END PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  82:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** const uint8_t tx_buffer [] = "Transmit \r\n";
  85:Core/Src/main.c **** uint8_t rx_buffer [1];
  86:Core/Src/main.c **** uint8_t rx_done = 0;
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccZ1oEf9.s 			page 3


  89:Core/Src/main.c **** /* USER CODE END 0 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /**
  92:Core/Src/main.c ****   * @brief  The application entry point.
  93:Core/Src/main.c ****   * @retval int
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   MX_CRC_Init();
 120:Core/Src/main.c ****   MX_DMA2D_Init();
 121:Core/Src/main.c ****   MX_FMC_Init();
 122:Core/Src/main.c ****   MX_I2C3_Init();
 123:Core/Src/main.c ****   MX_LTDC_Init();
 124:Core/Src/main.c ****   MX_SPI5_Init();
 125:Core/Src/main.c ****   MX_TIM1_Init();
 126:Core/Src/main.c ****   MX_USART1_UART_Init();
 127:Core/Src/main.c ****   MX_USB_HOST_Init();
 128:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   for (int i = 0; i < 30; ++i)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 133:Core/Src/main.c **** 	  HAL_Delay(200);
 134:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_SET);
 135:Core/Src/main.c **** 	  HAL_Delay(200);
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE END 2 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Infinite loop */
 141:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 142:Core/Src/main.c ****   while (1)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** 	  //memset(rx_buffer, 0, sizeof(rx_buffer));
ARM GAS  /tmp/ccZ1oEf9.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 	   if (HAL_UART_Receive(&huart1, rx_buffer, 1, 5000) == HAL_OK){
 150:Core/Src/main.c **** 		   HAL_UART_Transmit(&huart1, rx_buffer, sizeof(rx_buffer), 5000);
 151:Core/Src/main.c **** 	   }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** 	  //HAL_FLASHEx_Erase(rx_buffer, SectorError);
 155:Core/Src/main.c ****     /* USER CODE END WHILE */
 156:Core/Src/main.c ****     MX_USB_HOST_Process();
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c ****   /* USER CODE END 3 */
 161:Core/Src/main.c **** }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief System Clock Configuration
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void SystemClock_Config(void)
 168:Core/Src/main.c **** {
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 175:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 178:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 181:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 188:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 196:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
ARM GAS  /tmp/ccZ1oEf9.s 			page 5


 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     Error_Handler();
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c **** }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /**
 209:Core/Src/main.c ****   * @brief CRC Initialization Function
 210:Core/Src/main.c ****   * @param None
 211:Core/Src/main.c ****   * @retval None
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c **** static void MX_CRC_Init(void)
 214:Core/Src/main.c **** {
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 223:Core/Src/main.c ****   hcrc.Instance = CRC;
 224:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****   * @brief DMA2D Initialization Function
 236:Core/Src/main.c ****   * @param None
 237:Core/Src/main.c ****   * @retval None
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c **** static void MX_DMA2D_Init(void)
 240:Core/Src/main.c **** {
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 0 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 0 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 1 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 1 */
 249:Core/Src/main.c ****   hdma2d.Instance = DMA2D;
 250:Core/Src/main.c ****   hdma2d.Init.Mode = DMA2D_M2M;
 251:Core/Src/main.c ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 252:Core/Src/main.c ****   hdma2d.Init.OutputOffset = 0;
 253:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
 254:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 255:Core/Src/main.c ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 256:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 257:Core/Src/main.c ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 258:Core/Src/main.c ****   {
 259:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccZ1oEf9.s 			page 6


 260:Core/Src/main.c ****   }
 261:Core/Src/main.c ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 262:Core/Src/main.c ****   {
 263:Core/Src/main.c ****     Error_Handler();
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 2 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** }
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /**
 272:Core/Src/main.c ****   * @brief I2C3 Initialization Function
 273:Core/Src/main.c ****   * @param None
 274:Core/Src/main.c ****   * @retval None
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c **** static void MX_I2C3_Init(void)
 277:Core/Src/main.c **** {
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 0 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END I2C3_Init 0 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 1 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE END I2C3_Init 1 */
 286:Core/Src/main.c ****   hi2c3.Instance = I2C3;
 287:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 100000;
 288:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 289:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 290:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 291:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 292:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 293:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 294:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 295:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     Error_Handler();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /** Configure Analogue filter
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /** Configure Digital filter
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     Error_Handler();
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 2 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END I2C3_Init 2 */
 316:Core/Src/main.c **** 
ARM GAS  /tmp/ccZ1oEf9.s 			page 7


 317:Core/Src/main.c **** }
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /**
 320:Core/Src/main.c ****   * @brief LTDC Initialization Function
 321:Core/Src/main.c ****   * @param None
 322:Core/Src/main.c ****   * @retval None
 323:Core/Src/main.c ****   */
 324:Core/Src/main.c **** static void MX_LTDC_Init(void)
 325:Core/Src/main.c **** {
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 0 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END LTDC_Init 0 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   LTDC_LayerCfgTypeDef pLayerCfg = {0};
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 1 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END LTDC_Init 1 */
 336:Core/Src/main.c ****   hltdc.Instance = LTDC;
 337:Core/Src/main.c ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 338:Core/Src/main.c ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 339:Core/Src/main.c ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 340:Core/Src/main.c ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 341:Core/Src/main.c ****   hltdc.Init.HorizontalSync = 9;
 342:Core/Src/main.c ****   hltdc.Init.VerticalSync = 1;
 343:Core/Src/main.c ****   hltdc.Init.AccumulatedHBP = 29;
 344:Core/Src/main.c ****   hltdc.Init.AccumulatedVBP = 3;
 345:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveW = 269;
 346:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveH = 323;
 347:Core/Src/main.c ****   hltdc.Init.TotalWidth = 279;
 348:Core/Src/main.c ****   hltdc.Init.TotalHeigh = 327;
 349:Core/Src/main.c ****   hltdc.Init.Backcolor.Blue = 0;
 350:Core/Src/main.c ****   hltdc.Init.Backcolor.Green = 0;
 351:Core/Src/main.c ****   hltdc.Init.Backcolor.Red = 0;
 352:Core/Src/main.c ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 353:Core/Src/main.c ****   {
 354:Core/Src/main.c ****     Error_Handler();
 355:Core/Src/main.c ****   }
 356:Core/Src/main.c ****   pLayerCfg.WindowX0 = 0;
 357:Core/Src/main.c ****   pLayerCfg.WindowX1 = 240;
 358:Core/Src/main.c ****   pLayerCfg.WindowY0 = 0;
 359:Core/Src/main.c ****   pLayerCfg.WindowY1 = 320;
 360:Core/Src/main.c ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 361:Core/Src/main.c ****   pLayerCfg.Alpha = 255;
 362:Core/Src/main.c ****   pLayerCfg.Alpha0 = 0;
 363:Core/Src/main.c ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 364:Core/Src/main.c ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 365:Core/Src/main.c ****   pLayerCfg.FBStartAdress = 0xD0000000;
 366:Core/Src/main.c ****   pLayerCfg.ImageWidth = 240;
 367:Core/Src/main.c ****   pLayerCfg.ImageHeight = 320;
 368:Core/Src/main.c ****   pLayerCfg.Backcolor.Blue = 0;
 369:Core/Src/main.c ****   pLayerCfg.Backcolor.Green = 0;
 370:Core/Src/main.c ****   pLayerCfg.Backcolor.Red = 0;
 371:Core/Src/main.c ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccZ1oEf9.s 			page 8


 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 2 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE END LTDC_Init 2 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** }
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /**
 382:Core/Src/main.c ****   * @brief SPI5 Initialization Function
 383:Core/Src/main.c ****   * @param None
 384:Core/Src/main.c ****   * @retval None
 385:Core/Src/main.c ****   */
 386:Core/Src/main.c **** static void MX_SPI5_Init(void)
 387:Core/Src/main.c **** {
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE BEGIN SPI5_Init 0 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END SPI5_Init 0 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE BEGIN SPI5_Init 1 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE END SPI5_Init 1 */
 396:Core/Src/main.c ****   /* SPI5 parameter configuration*/
 397:Core/Src/main.c ****   hspi5.Instance = SPI5;
 398:Core/Src/main.c ****   hspi5.Init.Mode = SPI_MODE_MASTER;
 399:Core/Src/main.c ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 400:Core/Src/main.c ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 401:Core/Src/main.c ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 402:Core/Src/main.c ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 403:Core/Src/main.c ****   hspi5.Init.NSS = SPI_NSS_SOFT;
 404:Core/Src/main.c ****   hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 405:Core/Src/main.c ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 406:Core/Src/main.c ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 407:Core/Src/main.c ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 408:Core/Src/main.c ****   hspi5.Init.CRCPolynomial = 10;
 409:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 410:Core/Src/main.c ****   {
 411:Core/Src/main.c ****     Error_Handler();
 412:Core/Src/main.c ****   }
 413:Core/Src/main.c ****   /* USER CODE BEGIN SPI5_Init 2 */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE END SPI5_Init 2 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** }
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** /**
 420:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 421:Core/Src/main.c ****   * @param None
 422:Core/Src/main.c ****   * @retval None
 423:Core/Src/main.c ****   */
 424:Core/Src/main.c **** static void MX_TIM1_Init(void)
 425:Core/Src/main.c **** {
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 430:Core/Src/main.c **** 
ARM GAS  /tmp/ccZ1oEf9.s 			page 9


 431:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 432:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 437:Core/Src/main.c ****   htim1.Instance = TIM1;
 438:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 439:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 440:Core/Src/main.c ****   htim1.Init.Period = 65535;
 441:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 442:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 443:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 444:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 445:Core/Src/main.c ****   {
 446:Core/Src/main.c ****     Error_Handler();
 447:Core/Src/main.c ****   }
 448:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 449:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 450:Core/Src/main.c ****   {
 451:Core/Src/main.c ****     Error_Handler();
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 454:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 455:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** }
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** /**
 466:Core/Src/main.c ****   * @brief USART1 Initialization Function
 467:Core/Src/main.c ****   * @param None
 468:Core/Src/main.c ****   * @retval None
 469:Core/Src/main.c ****   */
 470:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 471:Core/Src/main.c **** {
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 480:Core/Src/main.c ****   huart1.Instance = USART1;
 481:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 482:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 483:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 484:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 485:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 486:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 487:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /tmp/ccZ1oEf9.s 			page 10


 488:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 489:Core/Src/main.c ****   {
 490:Core/Src/main.c ****     Error_Handler();
 491:Core/Src/main.c ****   }
 492:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** }
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** /* FMC initialization function */
 499:Core/Src/main.c **** static void MX_FMC_Init(void)
 500:Core/Src/main.c **** {
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 0 */
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   /* USER CODE END FMC_Init 0 */
 505:Core/Src/main.c **** 
 506:Core/Src/main.c ****   FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 1 */
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE END FMC_Init 1 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /** Perform the SDRAM1 memory initialization sequence
 513:Core/Src/main.c ****   */
 514:Core/Src/main.c ****   hsdram1.Instance = FMC_SDRAM_DEVICE;
 515:Core/Src/main.c ****   /* hsdram1.Init */
 516:Core/Src/main.c ****   hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 517:Core/Src/main.c ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 518:Core/Src/main.c ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 519:Core/Src/main.c ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 520:Core/Src/main.c ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 521:Core/Src/main.c ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 522:Core/Src/main.c ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 523:Core/Src/main.c ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 524:Core/Src/main.c ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 525:Core/Src/main.c ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 526:Core/Src/main.c ****   /* SdramTiming */
 527:Core/Src/main.c ****   SdramTiming.LoadToActiveDelay = 2;
 528:Core/Src/main.c ****   SdramTiming.ExitSelfRefreshDelay = 7;
 529:Core/Src/main.c ****   SdramTiming.SelfRefreshTime = 4;
 530:Core/Src/main.c ****   SdramTiming.RowCycleDelay = 7;
 531:Core/Src/main.c ****   SdramTiming.WriteRecoveryTime = 3;
 532:Core/Src/main.c ****   SdramTiming.RPDelay = 2;
 533:Core/Src/main.c ****   SdramTiming.RCDDelay = 2;
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 536:Core/Src/main.c ****   {
 537:Core/Src/main.c ****     Error_Handler( );
 538:Core/Src/main.c ****   }
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 2 */
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /* USER CODE END FMC_Init 2 */
 543:Core/Src/main.c **** }
 544:Core/Src/main.c **** 
ARM GAS  /tmp/ccZ1oEf9.s 			page 11


 545:Core/Src/main.c **** /**
 546:Core/Src/main.c ****   * @brief GPIO Initialization Function
 547:Core/Src/main.c ****   * @param None
 548:Core/Src/main.c ****   * @retval None
 549:Core/Src/main.c ****   */
 550:Core/Src/main.c **** static void MX_GPIO_Init(void)
 551:Core/Src/main.c **** {
  28              		.loc 1 551 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 56
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 32
  35              		.cfi_offset 4, -32
  36              		.cfi_offset 5, -28
  37              		.cfi_offset 6, -24
  38              		.cfi_offset 7, -20
  39              		.cfi_offset 8, -16
  40              		.cfi_offset 9, -12
  41              		.cfi_offset 10, -8
  42              		.cfi_offset 14, -4
  43 0004 8EB0     		sub	sp, sp, #56
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 88
 552:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 552 3 view .LVU1
  47              		.loc 1 552 20 is_stmt 0 view .LVU2
  48 0006 0024     		movs	r4, #0
  49 0008 0994     		str	r4, [sp, #36]
  50 000a 0A94     		str	r4, [sp, #40]
  51 000c 0B94     		str	r4, [sp, #44]
  52 000e 0C94     		str	r4, [sp, #48]
  53 0010 0D94     		str	r4, [sp, #52]
 553:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 554:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 557:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 557 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 557 3 view .LVU4
  57 0012 0194     		str	r4, [sp, #4]
  58              		.loc 1 557 3 view .LVU5
  59 0014 5D4B     		ldr	r3, .L3
  60 0016 1A6B     		ldr	r2, [r3, #48]
  61 0018 42F00402 		orr	r2, r2, #4
  62 001c 1A63     		str	r2, [r3, #48]
  63              		.loc 1 557 3 view .LVU6
  64 001e 1A6B     		ldr	r2, [r3, #48]
  65 0020 02F00402 		and	r2, r2, #4
  66 0024 0192     		str	r2, [sp, #4]
  67              		.loc 1 557 3 view .LVU7
  68 0026 019A     		ldr	r2, [sp, #4]
  69              	.LBE4:
  70              		.loc 1 557 3 view .LVU8
 558:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
ARM GAS  /tmp/ccZ1oEf9.s 			page 12


  71              		.loc 1 558 3 view .LVU9
  72              	.LBB5:
  73              		.loc 1 558 3 view .LVU10
  74 0028 0294     		str	r4, [sp, #8]
  75              		.loc 1 558 3 view .LVU11
  76 002a 1A6B     		ldr	r2, [r3, #48]
  77 002c 42F02002 		orr	r2, r2, #32
  78 0030 1A63     		str	r2, [r3, #48]
  79              		.loc 1 558 3 view .LVU12
  80 0032 1A6B     		ldr	r2, [r3, #48]
  81 0034 02F02002 		and	r2, r2, #32
  82 0038 0292     		str	r2, [sp, #8]
  83              		.loc 1 558 3 view .LVU13
  84 003a 029A     		ldr	r2, [sp, #8]
  85              	.LBE5:
  86              		.loc 1 558 3 view .LVU14
 559:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  87              		.loc 1 559 3 view .LVU15
  88              	.LBB6:
  89              		.loc 1 559 3 view .LVU16
  90 003c 0394     		str	r4, [sp, #12]
  91              		.loc 1 559 3 view .LVU17
  92 003e 1A6B     		ldr	r2, [r3, #48]
  93 0040 42F08002 		orr	r2, r2, #128
  94 0044 1A63     		str	r2, [r3, #48]
  95              		.loc 1 559 3 view .LVU18
  96 0046 1A6B     		ldr	r2, [r3, #48]
  97 0048 02F08002 		and	r2, r2, #128
  98 004c 0392     		str	r2, [sp, #12]
  99              		.loc 1 559 3 view .LVU19
 100 004e 039A     		ldr	r2, [sp, #12]
 101              	.LBE6:
 102              		.loc 1 559 3 view .LVU20
 560:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 103              		.loc 1 560 3 view .LVU21
 104              	.LBB7:
 105              		.loc 1 560 3 view .LVU22
 106 0050 0494     		str	r4, [sp, #16]
 107              		.loc 1 560 3 view .LVU23
 108 0052 1A6B     		ldr	r2, [r3, #48]
 109 0054 42F00102 		orr	r2, r2, #1
 110 0058 1A63     		str	r2, [r3, #48]
 111              		.loc 1 560 3 view .LVU24
 112 005a 1A6B     		ldr	r2, [r3, #48]
 113 005c 02F00102 		and	r2, r2, #1
 114 0060 0492     		str	r2, [sp, #16]
 115              		.loc 1 560 3 view .LVU25
 116 0062 049A     		ldr	r2, [sp, #16]
 117              	.LBE7:
 118              		.loc 1 560 3 view .LVU26
 561:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 119              		.loc 1 561 3 view .LVU27
 120              	.LBB8:
 121              		.loc 1 561 3 view .LVU28
 122 0064 0594     		str	r4, [sp, #20]
 123              		.loc 1 561 3 view .LVU29
 124 0066 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccZ1oEf9.s 			page 13


 125 0068 42F00202 		orr	r2, r2, #2
 126 006c 1A63     		str	r2, [r3, #48]
 127              		.loc 1 561 3 view .LVU30
 128 006e 1A6B     		ldr	r2, [r3, #48]
 129 0070 02F00202 		and	r2, r2, #2
 130 0074 0592     		str	r2, [sp, #20]
 131              		.loc 1 561 3 view .LVU31
 132 0076 059A     		ldr	r2, [sp, #20]
 133              	.LBE8:
 134              		.loc 1 561 3 view .LVU32
 562:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 135              		.loc 1 562 3 view .LVU33
 136              	.LBB9:
 137              		.loc 1 562 3 view .LVU34
 138 0078 0694     		str	r4, [sp, #24]
 139              		.loc 1 562 3 view .LVU35
 140 007a 1A6B     		ldr	r2, [r3, #48]
 141 007c 42F04002 		orr	r2, r2, #64
 142 0080 1A63     		str	r2, [r3, #48]
 143              		.loc 1 562 3 view .LVU36
 144 0082 1A6B     		ldr	r2, [r3, #48]
 145 0084 02F04002 		and	r2, r2, #64
 146 0088 0692     		str	r2, [sp, #24]
 147              		.loc 1 562 3 view .LVU37
 148 008a 069A     		ldr	r2, [sp, #24]
 149              	.LBE9:
 150              		.loc 1 562 3 view .LVU38
 563:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 151              		.loc 1 563 3 view .LVU39
 152              	.LBB10:
 153              		.loc 1 563 3 view .LVU40
 154 008c 0794     		str	r4, [sp, #28]
 155              		.loc 1 563 3 view .LVU41
 156 008e 1A6B     		ldr	r2, [r3, #48]
 157 0090 42F01002 		orr	r2, r2, #16
 158 0094 1A63     		str	r2, [r3, #48]
 159              		.loc 1 563 3 view .LVU42
 160 0096 1A6B     		ldr	r2, [r3, #48]
 161 0098 02F01002 		and	r2, r2, #16
 162 009c 0792     		str	r2, [sp, #28]
 163              		.loc 1 563 3 view .LVU43
 164 009e 079A     		ldr	r2, [sp, #28]
 165              	.LBE10:
 166              		.loc 1 563 3 view .LVU44
 564:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 167              		.loc 1 564 3 view .LVU45
 168              	.LBB11:
 169              		.loc 1 564 3 view .LVU46
 170 00a0 0894     		str	r4, [sp, #32]
 171              		.loc 1 564 3 view .LVU47
 172 00a2 1A6B     		ldr	r2, [r3, #48]
 173 00a4 42F00802 		orr	r2, r2, #8
 174 00a8 1A63     		str	r2, [r3, #48]
 175              		.loc 1 564 3 view .LVU48
 176 00aa 1B6B     		ldr	r3, [r3, #48]
 177 00ac 03F00803 		and	r3, r3, #8
 178 00b0 0893     		str	r3, [sp, #32]
ARM GAS  /tmp/ccZ1oEf9.s 			page 14


 179              		.loc 1 564 3 view .LVU49
 180 00b2 089B     		ldr	r3, [sp, #32]
 181              	.LBE11:
 182              		.loc 1 564 3 view .LVU50
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 567:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 183              		.loc 1 567 3 view .LVU51
 184 00b4 364F     		ldr	r7, .L3+4
 185 00b6 2246     		mov	r2, r4
 186 00b8 1621     		movs	r1, #22
 187 00ba 3846     		mov	r0, r7
 188 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL0:
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 570:Core/Src/main.c ****   HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 190              		.loc 1 570 3 view .LVU52
 191 00c0 DFF8D880 		ldr	r8, .L3+16
 192 00c4 2246     		mov	r2, r4
 193 00c6 8021     		movs	r1, #128
 194 00c8 4046     		mov	r0, r8
 195 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL1:
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 573:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 197              		.loc 1 573 3 view .LVU53
 198 00ce 314E     		ldr	r6, .L3+8
 199 00d0 2246     		mov	r2, r4
 200 00d2 4FF44051 		mov	r1, #12288
 201 00d6 3046     		mov	r0, r6
 202 00d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 203              	.LVL2:
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 576:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 204              		.loc 1 576 3 view .LVU54
 205 00dc DFF8C090 		ldr	r9, .L3+20
 206 00e0 2246     		mov	r2, r4
 207 00e2 4FF4C041 		mov	r1, #24576
 208 00e6 4846     		mov	r0, r9
 209 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 210              	.LVL3:
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
 579:Core/Src/main.c ****   GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 211              		.loc 1 579 3 view .LVU55
 212              		.loc 1 579 23 is_stmt 0 view .LVU56
 213 00ec 1623     		movs	r3, #22
 214 00ee 0993     		str	r3, [sp, #36]
 580:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 215              		.loc 1 580 3 is_stmt 1 view .LVU57
 216              		.loc 1 580 24 is_stmt 0 view .LVU58
 217 00f0 0125     		movs	r5, #1
 218 00f2 0A95     		str	r5, [sp, #40]
 581:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccZ1oEf9.s 			page 15


 219              		.loc 1 581 3 is_stmt 1 view .LVU59
 220              		.loc 1 581 24 is_stmt 0 view .LVU60
 221 00f4 0B94     		str	r4, [sp, #44]
 582:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 222              		.loc 1 582 3 is_stmt 1 view .LVU61
 223              		.loc 1 582 25 is_stmt 0 view .LVU62
 224 00f6 0C94     		str	r4, [sp, #48]
 583:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 225              		.loc 1 583 3 is_stmt 1 view .LVU63
 226 00f8 09A9     		add	r1, sp, #36
 227 00fa 3846     		mov	r0, r7
 228 00fc FFF7FEFF 		bl	HAL_GPIO_Init
 229              	.LVL4:
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
 586:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 230              		.loc 1 586 3 view .LVU64
 231              		.loc 1 586 23 is_stmt 0 view .LVU65
 232 0100 48F20703 		movw	r3, #32775
 233 0104 0993     		str	r3, [sp, #36]
 587:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 234              		.loc 1 587 3 is_stmt 1 view .LVU66
 235              		.loc 1 587 24 is_stmt 0 view .LVU67
 236 0106 4FF4901A 		mov	r10, #1179648
 237 010a CDF828A0 		str	r10, [sp, #40]
 588:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 238              		.loc 1 588 3 is_stmt 1 view .LVU68
 239              		.loc 1 588 24 is_stmt 0 view .LVU69
 240 010e 0B94     		str	r4, [sp, #44]
 589:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 241              		.loc 1 589 3 is_stmt 1 view .LVU70
 242 0110 09A9     		add	r1, sp, #36
 243 0112 4046     		mov	r0, r8
 244 0114 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL5:
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   /*Configure GPIO pin : ACP_RST_Pin */
 592:Core/Src/main.c ****   GPIO_InitStruct.Pin = ACP_RST_Pin;
 246              		.loc 1 592 3 view .LVU71
 247              		.loc 1 592 23 is_stmt 0 view .LVU72
 248 0118 8023     		movs	r3, #128
 249 011a 0993     		str	r3, [sp, #36]
 593:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 250              		.loc 1 593 3 is_stmt 1 view .LVU73
 251              		.loc 1 593 24 is_stmt 0 view .LVU74
 252 011c 0A95     		str	r5, [sp, #40]
 594:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 594 3 is_stmt 1 view .LVU75
 254              		.loc 1 594 24 is_stmt 0 view .LVU76
 255 011e 0B94     		str	r4, [sp, #44]
 595:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 256              		.loc 1 595 3 is_stmt 1 view .LVU77
 257              		.loc 1 595 25 is_stmt 0 view .LVU78
 258 0120 0C94     		str	r4, [sp, #48]
 596:Core/Src/main.c ****   HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 259              		.loc 1 596 3 is_stmt 1 view .LVU79
 260 0122 09A9     		add	r1, sp, #36
ARM GAS  /tmp/ccZ1oEf9.s 			page 16


 261 0124 4046     		mov	r0, r8
 262 0126 FFF7FEFF 		bl	HAL_GPIO_Init
 263              	.LVL6:
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_OC_Pin */
 599:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 264              		.loc 1 599 3 view .LVU80
 265              		.loc 1 599 23 is_stmt 0 view .LVU81
 266 012a 2023     		movs	r3, #32
 267 012c 0993     		str	r3, [sp, #36]
 600:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 268              		.loc 1 600 3 is_stmt 1 view .LVU82
 269              		.loc 1 600 24 is_stmt 0 view .LVU83
 270 012e CDF828A0 		str	r10, [sp, #40]
 601:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 601 3 is_stmt 1 view .LVU84
 272              		.loc 1 601 24 is_stmt 0 view .LVU85
 273 0132 0B94     		str	r4, [sp, #44]
 602:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 274              		.loc 1 602 3 is_stmt 1 view .LVU86
 275 0134 09A9     		add	r1, sp, #36
 276 0136 3846     		mov	r0, r7
 277 0138 FFF7FEFF 		bl	HAL_GPIO_Init
 278              	.LVL7:
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /*Configure GPIO pin : BOOT1_Pin */
 605:Core/Src/main.c ****   GPIO_InitStruct.Pin = BOOT1_Pin;
 279              		.loc 1 605 3 view .LVU87
 280              		.loc 1 605 23 is_stmt 0 view .LVU88
 281 013c 0423     		movs	r3, #4
 282 013e 0993     		str	r3, [sp, #36]
 606:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 283              		.loc 1 606 3 is_stmt 1 view .LVU89
 284              		.loc 1 606 24 is_stmt 0 view .LVU90
 285 0140 0A94     		str	r4, [sp, #40]
 607:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 286              		.loc 1 607 3 is_stmt 1 view .LVU91
 287              		.loc 1 607 24 is_stmt 0 view .LVU92
 288 0142 0B94     		str	r4, [sp, #44]
 608:Core/Src/main.c ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 289              		.loc 1 608 3 is_stmt 1 view .LVU93
 290 0144 09A9     		add	r1, sp, #36
 291 0146 1448     		ldr	r0, .L3+12
 292 0148 FFF7FEFF 		bl	HAL_GPIO_Init
 293              	.LVL8:
 609:Core/Src/main.c **** 
 610:Core/Src/main.c ****   /*Configure GPIO pin : TE_Pin */
 611:Core/Src/main.c ****   GPIO_InitStruct.Pin = TE_Pin;
 294              		.loc 1 611 3 view .LVU94
 295              		.loc 1 611 23 is_stmt 0 view .LVU95
 296 014c 4FF40063 		mov	r3, #2048
 297 0150 0993     		str	r3, [sp, #36]
 612:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 298              		.loc 1 612 3 is_stmt 1 view .LVU96
 299              		.loc 1 612 24 is_stmt 0 view .LVU97
 300 0152 0A94     		str	r4, [sp, #40]
 613:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccZ1oEf9.s 			page 17


 301              		.loc 1 613 3 is_stmt 1 view .LVU98
 302              		.loc 1 613 24 is_stmt 0 view .LVU99
 303 0154 0B94     		str	r4, [sp, #44]
 614:Core/Src/main.c ****   HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 304              		.loc 1 614 3 is_stmt 1 view .LVU100
 305 0156 09A9     		add	r1, sp, #36
 306 0158 3046     		mov	r0, r6
 307 015a FFF7FEFF 		bl	HAL_GPIO_Init
 308              	.LVL9:
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
 617:Core/Src/main.c ****   GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 309              		.loc 1 617 3 view .LVU101
 310              		.loc 1 617 23 is_stmt 0 view .LVU102
 311 015e 4FF44053 		mov	r3, #12288
 312 0162 0993     		str	r3, [sp, #36]
 618:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 313              		.loc 1 618 3 is_stmt 1 view .LVU103
 314              		.loc 1 618 24 is_stmt 0 view .LVU104
 315 0164 0A95     		str	r5, [sp, #40]
 619:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 316              		.loc 1 619 3 is_stmt 1 view .LVU105
 317              		.loc 1 619 24 is_stmt 0 view .LVU106
 318 0166 0B94     		str	r4, [sp, #44]
 620:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 319              		.loc 1 620 3 is_stmt 1 view .LVU107
 320              		.loc 1 620 25 is_stmt 0 view .LVU108
 321 0168 0C94     		str	r4, [sp, #48]
 621:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 322              		.loc 1 621 3 is_stmt 1 view .LVU109
 323 016a 09A9     		add	r1, sp, #36
 324 016c 3046     		mov	r0, r6
 325 016e FFF7FEFF 		bl	HAL_GPIO_Init
 326              	.LVL10:
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****   /*Configure GPIO pins : LD3_Pin LD4_Pin */
 624:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD3_Pin|LD4_Pin;
 327              		.loc 1 624 3 view .LVU110
 328              		.loc 1 624 23 is_stmt 0 view .LVU111
 329 0172 4FF4C043 		mov	r3, #24576
 330 0176 0993     		str	r3, [sp, #36]
 625:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 625 3 is_stmt 1 view .LVU112
 332              		.loc 1 625 24 is_stmt 0 view .LVU113
 333 0178 0A95     		str	r5, [sp, #40]
 626:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 334              		.loc 1 626 3 is_stmt 1 view .LVU114
 335              		.loc 1 626 24 is_stmt 0 view .LVU115
 336 017a 0B94     		str	r4, [sp, #44]
 627:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 337              		.loc 1 627 3 is_stmt 1 view .LVU116
 338              		.loc 1 627 25 is_stmt 0 view .LVU117
 339 017c 0C94     		str	r4, [sp, #48]
 628:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 340              		.loc 1 628 3 is_stmt 1 view .LVU118
 341 017e 09A9     		add	r1, sp, #36
 342 0180 4846     		mov	r0, r9
ARM GAS  /tmp/ccZ1oEf9.s 			page 18


 343 0182 FFF7FEFF 		bl	HAL_GPIO_Init
 344              	.LVL11:
 629:Core/Src/main.c **** 
 630:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 631:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 632:Core/Src/main.c **** }
 345              		.loc 1 632 1 is_stmt 0 view .LVU119
 346 0186 0EB0     		add	sp, sp, #56
 347              	.LCFI2:
 348              		.cfi_def_cfa_offset 32
 349              		@ sp needed
 350 0188 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 351              	.L4:
 352              		.align	2
 353              	.L3:
 354 018c 00380240 		.word	1073887232
 355 0190 00080240 		.word	1073874944
 356 0194 000C0240 		.word	1073875968
 357 0198 00040240 		.word	1073873920
 358 019c 00000240 		.word	1073872896
 359 01a0 00180240 		.word	1073879040
 360              		.cfi_endproc
 361              	.LFE144:
 363              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 364              		.align	1
 365              		.global	HAL_TIM_PeriodElapsedCallback
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 370              	HAL_TIM_PeriodElapsedCallback:
 371              	.LVL12:
 372              	.LFB145:
 633:Core/Src/main.c **** 
 634:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 635:Core/Src/main.c **** 
 636:Core/Src/main.c **** /* USER CODE END 4 */
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** /**
 639:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 640:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 641:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 642:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 643:Core/Src/main.c ****   * @param  htim : TIM handle
 644:Core/Src/main.c ****   * @retval None
 645:Core/Src/main.c ****   */
 646:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 647:Core/Src/main.c **** {
 373              		.loc 1 647 1 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		.loc 1 647 1 is_stmt 0 view .LVU121
 378 0000 08B5     		push	{r3, lr}
 379              	.LCFI3:
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 3, -8
 382              		.cfi_offset 14, -4
ARM GAS  /tmp/ccZ1oEf9.s 			page 19


 648:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 649:Core/Src/main.c **** 
 650:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 651:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 383              		.loc 1 651 3 is_stmt 1 view .LVU122
 384              		.loc 1 651 11 is_stmt 0 view .LVU123
 385 0002 0268     		ldr	r2, [r0]
 386              		.loc 1 651 6 view .LVU124
 387 0004 034B     		ldr	r3, .L9
 388 0006 9A42     		cmp	r2, r3
 389 0008 00D0     		beq	.L8
 390              	.LVL13:
 391              	.L5:
 652:Core/Src/main.c ****     HAL_IncTick();
 653:Core/Src/main.c ****   }
 654:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 655:Core/Src/main.c **** 
 656:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 657:Core/Src/main.c **** }
 392              		.loc 1 657 1 view .LVU125
 393 000a 08BD     		pop	{r3, pc}
 394              	.LVL14:
 395              	.L8:
 652:Core/Src/main.c ****     HAL_IncTick();
 396              		.loc 1 652 5 is_stmt 1 view .LVU126
 397 000c FFF7FEFF 		bl	HAL_IncTick
 398              	.LVL15:
 399              		.loc 1 657 1 is_stmt 0 view .LVU127
 400 0010 FBE7     		b	.L5
 401              	.L10:
 402 0012 00BF     		.align	2
 403              	.L9:
 404 0014 00100040 		.word	1073745920
 405              		.cfi_endproc
 406              	.LFE145:
 408              		.section	.text.Error_Handler,"ax",%progbits
 409              		.align	1
 410              		.global	Error_Handler
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 415              	Error_Handler:
 416              	.LFB146:
 658:Core/Src/main.c **** 
 659:Core/Src/main.c **** /**
 660:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 661:Core/Src/main.c ****   * @retval None
 662:Core/Src/main.c ****   */
 663:Core/Src/main.c **** void Error_Handler(void)
 664:Core/Src/main.c **** {
 417              		.loc 1 664 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ Volatile: function does not return.
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 665:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /tmp/ccZ1oEf9.s 			page 20


 666:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 667:Core/Src/main.c ****   __disable_irq();
 423              		.loc 1 667 3 view .LVU129
 424              	.LBB12:
 425              	.LBI12:
 426              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccZ1oEf9.s 			page 21


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/ccZ1oEf9.s 			page 22


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccZ1oEf9.s 			page 23


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccZ1oEf9.s 			page 24


 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccZ1oEf9.s 			page 25


 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccZ1oEf9.s 			page 26


 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  /tmp/ccZ1oEf9.s 			page 27


 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
ARM GAS  /tmp/ccZ1oEf9.s 			page 28


 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  /tmp/ccZ1oEf9.s 			page 29


 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
ARM GAS  /tmp/ccZ1oEf9.s 			page 30


 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccZ1oEf9.s 			page 31


 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccZ1oEf9.s 			page 32


 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccZ1oEf9.s 			page 33


 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
ARM GAS  /tmp/ccZ1oEf9.s 			page 34


 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccZ1oEf9.s 			page 35


 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccZ1oEf9.s 			page 36


 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 427              		.loc 2 960 27 view .LVU130
 428              	.LBB13:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccZ1oEf9.s 			page 37


 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 429              		.loc 2 962 3 view .LVU131
 430              		.syntax unified
 431              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 432 0000 72B6     		cpsid i
 433              	@ 0 "" 2
 434              		.thumb
 435              		.syntax unified
 436              	.L12:
 437              	.LBE13:
 438              	.LBE12:
 668:Core/Src/main.c ****   while (1)
 439              		.loc 1 668 3 discriminator 1 view .LVU132
 669:Core/Src/main.c ****   {
 670:Core/Src/main.c ****   }
 440              		.loc 1 670 3 discriminator 1 view .LVU133
 668:Core/Src/main.c ****   while (1)
 441              		.loc 1 668 9 discriminator 1 view .LVU134
 442 0002 FEE7     		b	.L12
 443              		.cfi_endproc
 444              	.LFE146:
 446              		.section	.text.MX_CRC_Init,"ax",%progbits
 447              		.align	1
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 452              	MX_CRC_Init:
 453              	.LFB136:
 214:Core/Src/main.c **** 
 454              		.loc 1 214 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458 0000 08B5     		push	{r3, lr}
 459              	.LCFI4:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 3, -8
 462              		.cfi_offset 14, -4
 223:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 463              		.loc 1 223 3 view .LVU136
 223:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 464              		.loc 1 223 17 is_stmt 0 view .LVU137
 465 0002 0448     		ldr	r0, .L17
 466 0004 044B     		ldr	r3, .L17+4
 467 0006 0360     		str	r3, [r0]
 224:Core/Src/main.c ****   {
 468              		.loc 1 224 3 is_stmt 1 view .LVU138
 224:Core/Src/main.c ****   {
 469              		.loc 1 224 7 is_stmt 0 view .LVU139
 470 0008 FFF7FEFF 		bl	HAL_CRC_Init
 471              	.LVL16:
 224:Core/Src/main.c ****   {
 472              		.loc 1 224 6 view .LVU140
 473 000c 00B9     		cbnz	r0, .L16
 232:Core/Src/main.c **** 
 474              		.loc 1 232 1 view .LVU141
 475 000e 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccZ1oEf9.s 			page 38


 476              	.L16:
 226:Core/Src/main.c ****   }
 477              		.loc 1 226 5 is_stmt 1 view .LVU142
 478 0010 FFF7FEFF 		bl	Error_Handler
 479              	.LVL17:
 480              	.L18:
 481              		.align	2
 482              	.L17:
 483 0014 00000000 		.word	hcrc
 484 0018 00300240 		.word	1073885184
 485              		.cfi_endproc
 486              	.LFE136:
 488              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 489              		.align	1
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 494              	MX_DMA2D_Init:
 495              	.LFB137:
 240:Core/Src/main.c **** 
 496              		.loc 1 240 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500 0000 08B5     		push	{r3, lr}
 501              	.LCFI5:
 502              		.cfi_def_cfa_offset 8
 503              		.cfi_offset 3, -8
 504              		.cfi_offset 14, -4
 249:Core/Src/main.c ****   hdma2d.Init.Mode = DMA2D_M2M;
 505              		.loc 1 249 3 view .LVU144
 249:Core/Src/main.c ****   hdma2d.Init.Mode = DMA2D_M2M;
 506              		.loc 1 249 19 is_stmt 0 view .LVU145
 507 0002 0C48     		ldr	r0, .L25
 508 0004 0C4B     		ldr	r3, .L25+4
 509 0006 0360     		str	r3, [r0]
 250:Core/Src/main.c ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 510              		.loc 1 250 3 is_stmt 1 view .LVU146
 250:Core/Src/main.c ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 511              		.loc 1 250 20 is_stmt 0 view .LVU147
 512 0008 0023     		movs	r3, #0
 513 000a 4360     		str	r3, [r0, #4]
 251:Core/Src/main.c ****   hdma2d.Init.OutputOffset = 0;
 514              		.loc 1 251 3 is_stmt 1 view .LVU148
 251:Core/Src/main.c ****   hdma2d.Init.OutputOffset = 0;
 515              		.loc 1 251 25 is_stmt 0 view .LVU149
 516 000c 8360     		str	r3, [r0, #8]
 252:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
 517              		.loc 1 252 3 is_stmt 1 view .LVU150
 252:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
 518              		.loc 1 252 28 is_stmt 0 view .LVU151
 519 000e C360     		str	r3, [r0, #12]
 253:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 520              		.loc 1 253 3 is_stmt 1 view .LVU152
 253:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 521              		.loc 1 253 34 is_stmt 0 view .LVU153
 522 0010 8362     		str	r3, [r0, #40]
ARM GAS  /tmp/ccZ1oEf9.s 			page 39


 254:Core/Src/main.c ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 523              		.loc 1 254 3 is_stmt 1 view .LVU154
 254:Core/Src/main.c ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 524              		.loc 1 254 37 is_stmt 0 view .LVU155
 525 0012 C362     		str	r3, [r0, #44]
 255:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 526              		.loc 1 255 3 is_stmt 1 view .LVU156
 255:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 527              		.loc 1 255 32 is_stmt 0 view .LVU157
 528 0014 0363     		str	r3, [r0, #48]
 256:Core/Src/main.c ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 529              		.loc 1 256 3 is_stmt 1 view .LVU158
 256:Core/Src/main.c ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 530              		.loc 1 256 33 is_stmt 0 view .LVU159
 531 0016 4363     		str	r3, [r0, #52]
 257:Core/Src/main.c ****   {
 532              		.loc 1 257 3 is_stmt 1 view .LVU160
 257:Core/Src/main.c ****   {
 533              		.loc 1 257 7 is_stmt 0 view .LVU161
 534 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 535              	.LVL18:
 257:Core/Src/main.c ****   {
 536              		.loc 1 257 6 view .LVU162
 537 001c 28B9     		cbnz	r0, .L23
 261:Core/Src/main.c ****   {
 538              		.loc 1 261 3 is_stmt 1 view .LVU163
 261:Core/Src/main.c ****   {
 539              		.loc 1 261 7 is_stmt 0 view .LVU164
 540 001e 0121     		movs	r1, #1
 541 0020 0448     		ldr	r0, .L25
 542 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 543              	.LVL19:
 261:Core/Src/main.c ****   {
 544              		.loc 1 261 6 view .LVU165
 545 0026 10B9     		cbnz	r0, .L24
 269:Core/Src/main.c **** 
 546              		.loc 1 269 1 view .LVU166
 547 0028 08BD     		pop	{r3, pc}
 548              	.L23:
 259:Core/Src/main.c ****   }
 549              		.loc 1 259 5 is_stmt 1 view .LVU167
 550 002a FFF7FEFF 		bl	Error_Handler
 551              	.LVL20:
 552              	.L24:
 263:Core/Src/main.c ****   }
 553              		.loc 1 263 5 view .LVU168
 554 002e FFF7FEFF 		bl	Error_Handler
 555              	.LVL21:
 556              	.L26:
 557 0032 00BF     		.align	2
 558              	.L25:
 559 0034 00000000 		.word	hdma2d
 560 0038 00B00240 		.word	1073917952
 561              		.cfi_endproc
 562              	.LFE137:
 564              		.section	.text.MX_FMC_Init,"ax",%progbits
 565              		.align	1
ARM GAS  /tmp/ccZ1oEf9.s 			page 40


 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	MX_FMC_Init:
 571              	.LFB143:
 500:Core/Src/main.c **** 
 572              		.loc 1 500 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 32
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 00B5     		push	{lr}
 577              	.LCFI6:
 578              		.cfi_def_cfa_offset 4
 579              		.cfi_offset 14, -4
 580 0002 89B0     		sub	sp, sp, #36
 581              	.LCFI7:
 582              		.cfi_def_cfa_offset 40
 506:Core/Src/main.c **** 
 583              		.loc 1 506 3 view .LVU170
 506:Core/Src/main.c **** 
 584              		.loc 1 506 27 is_stmt 0 view .LVU171
 585 0004 0023     		movs	r3, #0
 586 0006 0193     		str	r3, [sp, #4]
 587 0008 0293     		str	r3, [sp, #8]
 588 000a 0393     		str	r3, [sp, #12]
 589 000c 0493     		str	r3, [sp, #16]
 590 000e 0593     		str	r3, [sp, #20]
 591 0010 0693     		str	r3, [sp, #24]
 592 0012 0793     		str	r3, [sp, #28]
 514:Core/Src/main.c ****   /* hsdram1.Init */
 593              		.loc 1 514 3 is_stmt 1 view .LVU172
 514:Core/Src/main.c ****   /* hsdram1.Init */
 594              		.loc 1 514 20 is_stmt 0 view .LVU173
 595 0014 1448     		ldr	r0, .L31
 596 0016 154A     		ldr	r2, .L31+4
 597 0018 0260     		str	r2, [r0]
 516:Core/Src/main.c ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 598              		.loc 1 516 3 is_stmt 1 view .LVU174
 516:Core/Src/main.c ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 599              		.loc 1 516 23 is_stmt 0 view .LVU175
 600 001a 0122     		movs	r2, #1
 601 001c 4260     		str	r2, [r0, #4]
 517:Core/Src/main.c ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 602              		.loc 1 517 3 is_stmt 1 view .LVU176
 517:Core/Src/main.c ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 603              		.loc 1 517 33 is_stmt 0 view .LVU177
 604 001e 8360     		str	r3, [r0, #8]
 518:Core/Src/main.c ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 605              		.loc 1 518 3 is_stmt 1 view .LVU178
 518:Core/Src/main.c ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 606              		.loc 1 518 30 is_stmt 0 view .LVU179
 607 0020 0421     		movs	r1, #4
 608 0022 C160     		str	r1, [r0, #12]
 519:Core/Src/main.c ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 609              		.loc 1 519 3 is_stmt 1 view .LVU180
 519:Core/Src/main.c ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 610              		.loc 1 519 32 is_stmt 0 view .LVU181
ARM GAS  /tmp/ccZ1oEf9.s 			page 41


 611 0024 1022     		movs	r2, #16
 612 0026 0261     		str	r2, [r0, #16]
 520:Core/Src/main.c ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 613              		.loc 1 520 3 is_stmt 1 view .LVU182
 520:Core/Src/main.c ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 614              		.loc 1 520 35 is_stmt 0 view .LVU183
 615 0028 4022     		movs	r2, #64
 616 002a 4261     		str	r2, [r0, #20]
 521:Core/Src/main.c ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 617              		.loc 1 521 3 is_stmt 1 view .LVU184
 521:Core/Src/main.c ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 618              		.loc 1 521 27 is_stmt 0 view .LVU185
 619 002c 4FF4C072 		mov	r2, #384
 620 0030 8261     		str	r2, [r0, #24]
 522:Core/Src/main.c ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 621              		.loc 1 522 3 is_stmt 1 view .LVU186
 522:Core/Src/main.c ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 622              		.loc 1 522 32 is_stmt 0 view .LVU187
 623 0032 C361     		str	r3, [r0, #28]
 523:Core/Src/main.c ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 624              		.loc 1 523 3 is_stmt 1 view .LVU188
 523:Core/Src/main.c ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 625              		.loc 1 523 30 is_stmt 0 view .LVU189
 626 0034 4FF40062 		mov	r2, #2048
 627 0038 0262     		str	r2, [r0, #32]
 524:Core/Src/main.c ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 628              		.loc 1 524 3 is_stmt 1 view .LVU190
 524:Core/Src/main.c ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 629              		.loc 1 524 26 is_stmt 0 view .LVU191
 630 003a 4362     		str	r3, [r0, #36]
 525:Core/Src/main.c ****   /* SdramTiming */
 631              		.loc 1 525 3 is_stmt 1 view .LVU192
 525:Core/Src/main.c ****   /* SdramTiming */
 632              		.loc 1 525 30 is_stmt 0 view .LVU193
 633 003c 4FF40053 		mov	r3, #8192
 634 0040 8362     		str	r3, [r0, #40]
 527:Core/Src/main.c ****   SdramTiming.ExitSelfRefreshDelay = 7;
 635              		.loc 1 527 3 is_stmt 1 view .LVU194
 527:Core/Src/main.c ****   SdramTiming.ExitSelfRefreshDelay = 7;
 636              		.loc 1 527 33 is_stmt 0 view .LVU195
 637 0042 0223     		movs	r3, #2
 638 0044 0193     		str	r3, [sp, #4]
 528:Core/Src/main.c ****   SdramTiming.SelfRefreshTime = 4;
 639              		.loc 1 528 3 is_stmt 1 view .LVU196
 528:Core/Src/main.c ****   SdramTiming.SelfRefreshTime = 4;
 640              		.loc 1 528 36 is_stmt 0 view .LVU197
 641 0046 0722     		movs	r2, #7
 642 0048 0292     		str	r2, [sp, #8]
 529:Core/Src/main.c ****   SdramTiming.RowCycleDelay = 7;
 643              		.loc 1 529 3 is_stmt 1 view .LVU198
 529:Core/Src/main.c ****   SdramTiming.RowCycleDelay = 7;
 644              		.loc 1 529 31 is_stmt 0 view .LVU199
 645 004a 0391     		str	r1, [sp, #12]
 530:Core/Src/main.c ****   SdramTiming.WriteRecoveryTime = 3;
 646              		.loc 1 530 3 is_stmt 1 view .LVU200
 530:Core/Src/main.c ****   SdramTiming.WriteRecoveryTime = 3;
 647              		.loc 1 530 29 is_stmt 0 view .LVU201
ARM GAS  /tmp/ccZ1oEf9.s 			page 42


 648 004c 0492     		str	r2, [sp, #16]
 531:Core/Src/main.c ****   SdramTiming.RPDelay = 2;
 649              		.loc 1 531 3 is_stmt 1 view .LVU202
 531:Core/Src/main.c ****   SdramTiming.RPDelay = 2;
 650              		.loc 1 531 33 is_stmt 0 view .LVU203
 651 004e 0322     		movs	r2, #3
 652 0050 0592     		str	r2, [sp, #20]
 532:Core/Src/main.c ****   SdramTiming.RCDDelay = 2;
 653              		.loc 1 532 3 is_stmt 1 view .LVU204
 532:Core/Src/main.c ****   SdramTiming.RCDDelay = 2;
 654              		.loc 1 532 23 is_stmt 0 view .LVU205
 655 0052 0693     		str	r3, [sp, #24]
 533:Core/Src/main.c **** 
 656              		.loc 1 533 3 is_stmt 1 view .LVU206
 533:Core/Src/main.c **** 
 657              		.loc 1 533 24 is_stmt 0 view .LVU207
 658 0054 0793     		str	r3, [sp, #28]
 535:Core/Src/main.c ****   {
 659              		.loc 1 535 3 is_stmt 1 view .LVU208
 535:Core/Src/main.c ****   {
 660              		.loc 1 535 7 is_stmt 0 view .LVU209
 661 0056 6944     		add	r1, sp, r1
 662 0058 FFF7FEFF 		bl	HAL_SDRAM_Init
 663              	.LVL22:
 535:Core/Src/main.c ****   {
 664              		.loc 1 535 6 view .LVU210
 665 005c 10B9     		cbnz	r0, .L30
 543:Core/Src/main.c **** 
 666              		.loc 1 543 1 view .LVU211
 667 005e 09B0     		add	sp, sp, #36
 668              	.LCFI8:
 669              		.cfi_remember_state
 670              		.cfi_def_cfa_offset 4
 671              		@ sp needed
 672 0060 5DF804FB 		ldr	pc, [sp], #4
 673              	.L30:
 674              	.LCFI9:
 675              		.cfi_restore_state
 537:Core/Src/main.c ****   }
 676              		.loc 1 537 5 is_stmt 1 view .LVU212
 677 0064 FFF7FEFF 		bl	Error_Handler
 678              	.LVL23:
 679              	.L32:
 680              		.align	2
 681              	.L31:
 682 0068 00000000 		.word	hsdram1
 683 006c 400100A0 		.word	-1610612416
 684              		.cfi_endproc
 685              	.LFE143:
 687              		.section	.text.MX_I2C3_Init,"ax",%progbits
 688              		.align	1
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	MX_I2C3_Init:
 694              	.LFB138:
 277:Core/Src/main.c **** 
ARM GAS  /tmp/ccZ1oEf9.s 			page 43


 695              		.loc 1 277 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 08B5     		push	{r3, lr}
 700              	.LCFI10:
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 3, -8
 703              		.cfi_offset 14, -4
 286:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 100000;
 704              		.loc 1 286 3 view .LVU214
 286:Core/Src/main.c ****   hi2c3.Init.ClockSpeed = 100000;
 705              		.loc 1 286 18 is_stmt 0 view .LVU215
 706 0002 1148     		ldr	r0, .L41
 707 0004 114B     		ldr	r3, .L41+4
 708 0006 0360     		str	r3, [r0]
 287:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 709              		.loc 1 287 3 is_stmt 1 view .LVU216
 287:Core/Src/main.c ****   hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 710              		.loc 1 287 25 is_stmt 0 view .LVU217
 711 0008 114B     		ldr	r3, .L41+8
 712 000a 4360     		str	r3, [r0, #4]
 288:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 713              		.loc 1 288 3 is_stmt 1 view .LVU218
 288:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 714              		.loc 1 288 24 is_stmt 0 view .LVU219
 715 000c 0023     		movs	r3, #0
 716 000e 8360     		str	r3, [r0, #8]
 289:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 717              		.loc 1 289 3 is_stmt 1 view .LVU220
 289:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 718              		.loc 1 289 26 is_stmt 0 view .LVU221
 719 0010 C360     		str	r3, [r0, #12]
 290:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 720              		.loc 1 290 3 is_stmt 1 view .LVU222
 290:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 721              		.loc 1 290 29 is_stmt 0 view .LVU223
 722 0012 4FF48042 		mov	r2, #16384
 723 0016 0261     		str	r2, [r0, #16]
 291:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 724              		.loc 1 291 3 is_stmt 1 view .LVU224
 291:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 725              		.loc 1 291 30 is_stmt 0 view .LVU225
 726 0018 4361     		str	r3, [r0, #20]
 292:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 727              		.loc 1 292 3 is_stmt 1 view .LVU226
 292:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 728              		.loc 1 292 26 is_stmt 0 view .LVU227
 729 001a 8361     		str	r3, [r0, #24]
 293:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 730              		.loc 1 293 3 is_stmt 1 view .LVU228
 293:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 731              		.loc 1 293 30 is_stmt 0 view .LVU229
 732 001c C361     		str	r3, [r0, #28]
 294:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 733              		.loc 1 294 3 is_stmt 1 view .LVU230
 294:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
ARM GAS  /tmp/ccZ1oEf9.s 			page 44


 734              		.loc 1 294 28 is_stmt 0 view .LVU231
 735 001e 0362     		str	r3, [r0, #32]
 295:Core/Src/main.c ****   {
 736              		.loc 1 295 3 is_stmt 1 view .LVU232
 295:Core/Src/main.c ****   {
 737              		.loc 1 295 7 is_stmt 0 view .LVU233
 738 0020 FFF7FEFF 		bl	HAL_I2C_Init
 739              	.LVL24:
 295:Core/Src/main.c ****   {
 740              		.loc 1 295 6 view .LVU234
 741 0024 50B9     		cbnz	r0, .L38
 302:Core/Src/main.c ****   {
 742              		.loc 1 302 3 is_stmt 1 view .LVU235
 302:Core/Src/main.c ****   {
 743              		.loc 1 302 7 is_stmt 0 view .LVU236
 744 0026 0021     		movs	r1, #0
 745 0028 0748     		ldr	r0, .L41
 746 002a FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 747              	.LVL25:
 302:Core/Src/main.c ****   {
 748              		.loc 1 302 6 view .LVU237
 749 002e 38B9     		cbnz	r0, .L39
 309:Core/Src/main.c ****   {
 750              		.loc 1 309 3 is_stmt 1 view .LVU238
 309:Core/Src/main.c ****   {
 751              		.loc 1 309 7 is_stmt 0 view .LVU239
 752 0030 0021     		movs	r1, #0
 753 0032 0548     		ldr	r0, .L41
 754 0034 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 755              	.LVL26:
 309:Core/Src/main.c ****   {
 756              		.loc 1 309 6 view .LVU240
 757 0038 20B9     		cbnz	r0, .L40
 317:Core/Src/main.c **** 
 758              		.loc 1 317 1 view .LVU241
 759 003a 08BD     		pop	{r3, pc}
 760              	.L38:
 297:Core/Src/main.c ****   }
 761              		.loc 1 297 5 is_stmt 1 view .LVU242
 762 003c FFF7FEFF 		bl	Error_Handler
 763              	.LVL27:
 764              	.L39:
 304:Core/Src/main.c ****   }
 765              		.loc 1 304 5 view .LVU243
 766 0040 FFF7FEFF 		bl	Error_Handler
 767              	.LVL28:
 768              	.L40:
 311:Core/Src/main.c ****   }
 769              		.loc 1 311 5 view .LVU244
 770 0044 FFF7FEFF 		bl	Error_Handler
 771              	.LVL29:
 772              	.L42:
 773              		.align	2
 774              	.L41:
 775 0048 00000000 		.word	hi2c3
 776 004c 005C0040 		.word	1073765376
 777 0050 A0860100 		.word	100000
ARM GAS  /tmp/ccZ1oEf9.s 			page 45


 778              		.cfi_endproc
 779              	.LFE138:
 781              		.section	.text.MX_LTDC_Init,"ax",%progbits
 782              		.align	1
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 787              	MX_LTDC_Init:
 788              	.LFB139:
 325:Core/Src/main.c **** 
 789              		.loc 1 325 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 56
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793 0000 00B5     		push	{lr}
 794              	.LCFI11:
 795              		.cfi_def_cfa_offset 4
 796              		.cfi_offset 14, -4
 797 0002 8FB0     		sub	sp, sp, #60
 798              	.LCFI12:
 799              		.cfi_def_cfa_offset 64
 331:Core/Src/main.c **** 
 800              		.loc 1 331 3 view .LVU246
 331:Core/Src/main.c **** 
 801              		.loc 1 331 24 is_stmt 0 view .LVU247
 802 0004 3422     		movs	r2, #52
 803 0006 0021     		movs	r1, #0
 804 0008 01A8     		add	r0, sp, #4
 805 000a FFF7FEFF 		bl	memset
 806              	.LVL30:
 336:Core/Src/main.c ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 807              		.loc 1 336 3 is_stmt 1 view .LVU248
 336:Core/Src/main.c ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 808              		.loc 1 336 18 is_stmt 0 view .LVU249
 809 000e 2748     		ldr	r0, .L49
 810 0010 274B     		ldr	r3, .L49+4
 811 0012 0360     		str	r3, [r0]
 337:Core/Src/main.c ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 812              		.loc 1 337 3 is_stmt 1 view .LVU250
 337:Core/Src/main.c ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 813              		.loc 1 337 25 is_stmt 0 view .LVU251
 814 0014 0023     		movs	r3, #0
 815 0016 4360     		str	r3, [r0, #4]
 338:Core/Src/main.c ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 816              		.loc 1 338 3 is_stmt 1 view .LVU252
 338:Core/Src/main.c ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 817              		.loc 1 338 25 is_stmt 0 view .LVU253
 818 0018 8360     		str	r3, [r0, #8]
 339:Core/Src/main.c ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 819              		.loc 1 339 3 is_stmt 1 view .LVU254
 339:Core/Src/main.c ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 820              		.loc 1 339 25 is_stmt 0 view .LVU255
 821 001a C360     		str	r3, [r0, #12]
 340:Core/Src/main.c ****   hltdc.Init.HorizontalSync = 9;
 822              		.loc 1 340 3 is_stmt 1 view .LVU256
 340:Core/Src/main.c ****   hltdc.Init.HorizontalSync = 9;
 823              		.loc 1 340 25 is_stmt 0 view .LVU257
ARM GAS  /tmp/ccZ1oEf9.s 			page 46


 824 001c 0361     		str	r3, [r0, #16]
 341:Core/Src/main.c ****   hltdc.Init.VerticalSync = 1;
 825              		.loc 1 341 3 is_stmt 1 view .LVU258
 341:Core/Src/main.c ****   hltdc.Init.VerticalSync = 1;
 826              		.loc 1 341 29 is_stmt 0 view .LVU259
 827 001e 0922     		movs	r2, #9
 828 0020 4261     		str	r2, [r0, #20]
 342:Core/Src/main.c ****   hltdc.Init.AccumulatedHBP = 29;
 829              		.loc 1 342 3 is_stmt 1 view .LVU260
 342:Core/Src/main.c ****   hltdc.Init.AccumulatedHBP = 29;
 830              		.loc 1 342 27 is_stmt 0 view .LVU261
 831 0022 0122     		movs	r2, #1
 832 0024 8261     		str	r2, [r0, #24]
 343:Core/Src/main.c ****   hltdc.Init.AccumulatedVBP = 3;
 833              		.loc 1 343 3 is_stmt 1 view .LVU262
 343:Core/Src/main.c ****   hltdc.Init.AccumulatedVBP = 3;
 834              		.loc 1 343 29 is_stmt 0 view .LVU263
 835 0026 1D22     		movs	r2, #29
 836 0028 C261     		str	r2, [r0, #28]
 344:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveW = 269;
 837              		.loc 1 344 3 is_stmt 1 view .LVU264
 344:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveW = 269;
 838              		.loc 1 344 29 is_stmt 0 view .LVU265
 839 002a 0322     		movs	r2, #3
 840 002c 0262     		str	r2, [r0, #32]
 345:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveH = 323;
 841              		.loc 1 345 3 is_stmt 1 view .LVU266
 345:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveH = 323;
 842              		.loc 1 345 33 is_stmt 0 view .LVU267
 843 002e 40F20D12 		movw	r2, #269
 844 0032 4262     		str	r2, [r0, #36]
 346:Core/Src/main.c ****   hltdc.Init.TotalWidth = 279;
 845              		.loc 1 346 3 is_stmt 1 view .LVU268
 346:Core/Src/main.c ****   hltdc.Init.TotalWidth = 279;
 846              		.loc 1 346 33 is_stmt 0 view .LVU269
 847 0034 40F24312 		movw	r2, #323
 848 0038 8262     		str	r2, [r0, #40]
 347:Core/Src/main.c ****   hltdc.Init.TotalHeigh = 327;
 849              		.loc 1 347 3 is_stmt 1 view .LVU270
 347:Core/Src/main.c ****   hltdc.Init.TotalHeigh = 327;
 850              		.loc 1 347 25 is_stmt 0 view .LVU271
 851 003a 40F21712 		movw	r2, #279
 852 003e C262     		str	r2, [r0, #44]
 348:Core/Src/main.c ****   hltdc.Init.Backcolor.Blue = 0;
 853              		.loc 1 348 3 is_stmt 1 view .LVU272
 348:Core/Src/main.c ****   hltdc.Init.Backcolor.Blue = 0;
 854              		.loc 1 348 25 is_stmt 0 view .LVU273
 855 0040 40F24712 		movw	r2, #327
 856 0044 0263     		str	r2, [r0, #48]
 349:Core/Src/main.c ****   hltdc.Init.Backcolor.Green = 0;
 857              		.loc 1 349 3 is_stmt 1 view .LVU274
 349:Core/Src/main.c ****   hltdc.Init.Backcolor.Green = 0;
 858              		.loc 1 349 29 is_stmt 0 view .LVU275
 859 0046 80F83430 		strb	r3, [r0, #52]
 350:Core/Src/main.c ****   hltdc.Init.Backcolor.Red = 0;
 860              		.loc 1 350 3 is_stmt 1 view .LVU276
 350:Core/Src/main.c ****   hltdc.Init.Backcolor.Red = 0;
ARM GAS  /tmp/ccZ1oEf9.s 			page 47


 861              		.loc 1 350 30 is_stmt 0 view .LVU277
 862 004a 80F83530 		strb	r3, [r0, #53]
 351:Core/Src/main.c ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 863              		.loc 1 351 3 is_stmt 1 view .LVU278
 351:Core/Src/main.c ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 864              		.loc 1 351 28 is_stmt 0 view .LVU279
 865 004e 80F83630 		strb	r3, [r0, #54]
 352:Core/Src/main.c ****   {
 866              		.loc 1 352 3 is_stmt 1 view .LVU280
 352:Core/Src/main.c ****   {
 867              		.loc 1 352 7 is_stmt 0 view .LVU281
 868 0052 FFF7FEFF 		bl	HAL_LTDC_Init
 869              	.LVL31:
 352:Core/Src/main.c ****   {
 870              		.loc 1 352 6 view .LVU282
 871 0056 20BB     		cbnz	r0, .L47
 356:Core/Src/main.c ****   pLayerCfg.WindowX1 = 240;
 872              		.loc 1 356 3 is_stmt 1 view .LVU283
 356:Core/Src/main.c ****   pLayerCfg.WindowX1 = 240;
 873              		.loc 1 356 22 is_stmt 0 view .LVU284
 874 0058 0022     		movs	r2, #0
 875 005a 0192     		str	r2, [sp, #4]
 357:Core/Src/main.c ****   pLayerCfg.WindowY0 = 0;
 876              		.loc 1 357 3 is_stmt 1 view .LVU285
 357:Core/Src/main.c ****   pLayerCfg.WindowY0 = 0;
 877              		.loc 1 357 22 is_stmt 0 view .LVU286
 878 005c F021     		movs	r1, #240
 879 005e 0291     		str	r1, [sp, #8]
 358:Core/Src/main.c ****   pLayerCfg.WindowY1 = 320;
 880              		.loc 1 358 3 is_stmt 1 view .LVU287
 358:Core/Src/main.c ****   pLayerCfg.WindowY1 = 320;
 881              		.loc 1 358 22 is_stmt 0 view .LVU288
 882 0060 0392     		str	r2, [sp, #12]
 359:Core/Src/main.c ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 883              		.loc 1 359 3 is_stmt 1 view .LVU289
 359:Core/Src/main.c ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 884              		.loc 1 359 22 is_stmt 0 view .LVU290
 885 0062 4FF4A073 		mov	r3, #320
 886 0066 0493     		str	r3, [sp, #16]
 360:Core/Src/main.c ****   pLayerCfg.Alpha = 255;
 887              		.loc 1 360 3 is_stmt 1 view .LVU291
 360:Core/Src/main.c ****   pLayerCfg.Alpha = 255;
 888              		.loc 1 360 25 is_stmt 0 view .LVU292
 889 0068 0220     		movs	r0, #2
 890 006a 0590     		str	r0, [sp, #20]
 361:Core/Src/main.c ****   pLayerCfg.Alpha0 = 0;
 891              		.loc 1 361 3 is_stmt 1 view .LVU293
 361:Core/Src/main.c ****   pLayerCfg.Alpha0 = 0;
 892              		.loc 1 361 19 is_stmt 0 view .LVU294
 893 006c FF20     		movs	r0, #255
 894 006e 0690     		str	r0, [sp, #24]
 362:Core/Src/main.c ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 895              		.loc 1 362 3 is_stmt 1 view .LVU295
 362:Core/Src/main.c ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 896              		.loc 1 362 20 is_stmt 0 view .LVU296
 897 0070 0792     		str	r2, [sp, #28]
 363:Core/Src/main.c ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
ARM GAS  /tmp/ccZ1oEf9.s 			page 48


 898              		.loc 1 363 3 is_stmt 1 view .LVU297
 363:Core/Src/main.c ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 899              		.loc 1 363 29 is_stmt 0 view .LVU298
 900 0072 4FF4C060 		mov	r0, #1536
 901 0076 0890     		str	r0, [sp, #32]
 364:Core/Src/main.c ****   pLayerCfg.FBStartAdress = 0xD0000000;
 902              		.loc 1 364 3 is_stmt 1 view .LVU299
 364:Core/Src/main.c ****   pLayerCfg.FBStartAdress = 0xD0000000;
 903              		.loc 1 364 29 is_stmt 0 view .LVU300
 904 0078 0720     		movs	r0, #7
 905 007a 0990     		str	r0, [sp, #36]
 365:Core/Src/main.c ****   pLayerCfg.ImageWidth = 240;
 906              		.loc 1 365 3 is_stmt 1 view .LVU301
 365:Core/Src/main.c ****   pLayerCfg.ImageWidth = 240;
 907              		.loc 1 365 27 is_stmt 0 view .LVU302
 908 007c 4FF05040 		mov	r0, #-805306368
 909 0080 0A90     		str	r0, [sp, #40]
 366:Core/Src/main.c ****   pLayerCfg.ImageHeight = 320;
 910              		.loc 1 366 3 is_stmt 1 view .LVU303
 366:Core/Src/main.c ****   pLayerCfg.ImageHeight = 320;
 911              		.loc 1 366 24 is_stmt 0 view .LVU304
 912 0082 0B91     		str	r1, [sp, #44]
 367:Core/Src/main.c ****   pLayerCfg.Backcolor.Blue = 0;
 913              		.loc 1 367 3 is_stmt 1 view .LVU305
 367:Core/Src/main.c ****   pLayerCfg.Backcolor.Blue = 0;
 914              		.loc 1 367 25 is_stmt 0 view .LVU306
 915 0084 0C93     		str	r3, [sp, #48]
 368:Core/Src/main.c ****   pLayerCfg.Backcolor.Green = 0;
 916              		.loc 1 368 3 is_stmt 1 view .LVU307
 368:Core/Src/main.c ****   pLayerCfg.Backcolor.Green = 0;
 917              		.loc 1 368 28 is_stmt 0 view .LVU308
 918 0086 8DF83420 		strb	r2, [sp, #52]
 369:Core/Src/main.c ****   pLayerCfg.Backcolor.Red = 0;
 919              		.loc 1 369 3 is_stmt 1 view .LVU309
 369:Core/Src/main.c ****   pLayerCfg.Backcolor.Red = 0;
 920              		.loc 1 369 29 is_stmt 0 view .LVU310
 921 008a 8DF83520 		strb	r2, [sp, #53]
 370:Core/Src/main.c ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 922              		.loc 1 370 3 is_stmt 1 view .LVU311
 370:Core/Src/main.c ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 923              		.loc 1 370 27 is_stmt 0 view .LVU312
 924 008e 8DF83620 		strb	r2, [sp, #54]
 371:Core/Src/main.c ****   {
 925              		.loc 1 371 3 is_stmt 1 view .LVU313
 371:Core/Src/main.c ****   {
 926              		.loc 1 371 7 is_stmt 0 view .LVU314
 927 0092 01A9     		add	r1, sp, #4
 928 0094 0548     		ldr	r0, .L49
 929 0096 FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 930              	.LVL32:
 371:Core/Src/main.c ****   {
 931              		.loc 1 371 6 view .LVU315
 932 009a 20B9     		cbnz	r0, .L48
 379:Core/Src/main.c **** 
 933              		.loc 1 379 1 view .LVU316
 934 009c 0FB0     		add	sp, sp, #60
 935              	.LCFI13:
ARM GAS  /tmp/ccZ1oEf9.s 			page 49


 936              		.cfi_remember_state
 937              		.cfi_def_cfa_offset 4
 938              		@ sp needed
 939 009e 5DF804FB 		ldr	pc, [sp], #4
 940              	.L47:
 941              	.LCFI14:
 942              		.cfi_restore_state
 354:Core/Src/main.c ****   }
 943              		.loc 1 354 5 is_stmt 1 view .LVU317
 944 00a2 FFF7FEFF 		bl	Error_Handler
 945              	.LVL33:
 946              	.L48:
 373:Core/Src/main.c ****   }
 947              		.loc 1 373 5 view .LVU318
 948 00a6 FFF7FEFF 		bl	Error_Handler
 949              	.LVL34:
 950              	.L50:
 951 00aa 00BF     		.align	2
 952              	.L49:
 953 00ac 00000000 		.word	hltdc
 954 00b0 00680140 		.word	1073833984
 955              		.cfi_endproc
 956              	.LFE139:
 958              		.section	.text.MX_SPI5_Init,"ax",%progbits
 959              		.align	1
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 964              	MX_SPI5_Init:
 965              	.LFB140:
 387:Core/Src/main.c **** 
 966              		.loc 1 387 1 view -0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970 0000 08B5     		push	{r3, lr}
 971              	.LCFI15:
 972              		.cfi_def_cfa_offset 8
 973              		.cfi_offset 3, -8
 974              		.cfi_offset 14, -4
 397:Core/Src/main.c ****   hspi5.Init.Mode = SPI_MODE_MASTER;
 975              		.loc 1 397 3 view .LVU320
 397:Core/Src/main.c ****   hspi5.Init.Mode = SPI_MODE_MASTER;
 976              		.loc 1 397 18 is_stmt 0 view .LVU321
 977 0002 0D48     		ldr	r0, .L55
 978 0004 0D4B     		ldr	r3, .L55+4
 979 0006 0360     		str	r3, [r0]
 398:Core/Src/main.c ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 980              		.loc 1 398 3 is_stmt 1 view .LVU322
 398:Core/Src/main.c ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 981              		.loc 1 398 19 is_stmt 0 view .LVU323
 982 0008 4FF48273 		mov	r3, #260
 983 000c 4360     		str	r3, [r0, #4]
 399:Core/Src/main.c ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 984              		.loc 1 399 3 is_stmt 1 view .LVU324
 399:Core/Src/main.c ****   hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 985              		.loc 1 399 24 is_stmt 0 view .LVU325
ARM GAS  /tmp/ccZ1oEf9.s 			page 50


 986 000e 0023     		movs	r3, #0
 987 0010 8360     		str	r3, [r0, #8]
 400:Core/Src/main.c ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 988              		.loc 1 400 3 is_stmt 1 view .LVU326
 400:Core/Src/main.c ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 989              		.loc 1 400 23 is_stmt 0 view .LVU327
 990 0012 C360     		str	r3, [r0, #12]
 401:Core/Src/main.c ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 991              		.loc 1 401 3 is_stmt 1 view .LVU328
 401:Core/Src/main.c ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 992              		.loc 1 401 26 is_stmt 0 view .LVU329
 993 0014 0361     		str	r3, [r0, #16]
 402:Core/Src/main.c ****   hspi5.Init.NSS = SPI_NSS_SOFT;
 994              		.loc 1 402 3 is_stmt 1 view .LVU330
 402:Core/Src/main.c ****   hspi5.Init.NSS = SPI_NSS_SOFT;
 995              		.loc 1 402 23 is_stmt 0 view .LVU331
 996 0016 4361     		str	r3, [r0, #20]
 403:Core/Src/main.c ****   hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 997              		.loc 1 403 3 is_stmt 1 view .LVU332
 403:Core/Src/main.c ****   hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 998              		.loc 1 403 18 is_stmt 0 view .LVU333
 999 0018 4FF40072 		mov	r2, #512
 1000 001c 8261     		str	r2, [r0, #24]
 404:Core/Src/main.c ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1001              		.loc 1 404 3 is_stmt 1 view .LVU334
 404:Core/Src/main.c ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1002              		.loc 1 404 32 is_stmt 0 view .LVU335
 1003 001e 1822     		movs	r2, #24
 1004 0020 C261     		str	r2, [r0, #28]
 405:Core/Src/main.c ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 1005              		.loc 1 405 3 is_stmt 1 view .LVU336
 405:Core/Src/main.c ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 1006              		.loc 1 405 23 is_stmt 0 view .LVU337
 1007 0022 0362     		str	r3, [r0, #32]
 406:Core/Src/main.c ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1008              		.loc 1 406 3 is_stmt 1 view .LVU338
 406:Core/Src/main.c ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1009              		.loc 1 406 21 is_stmt 0 view .LVU339
 1010 0024 4362     		str	r3, [r0, #36]
 407:Core/Src/main.c ****   hspi5.Init.CRCPolynomial = 10;
 1011              		.loc 1 407 3 is_stmt 1 view .LVU340
 407:Core/Src/main.c ****   hspi5.Init.CRCPolynomial = 10;
 1012              		.loc 1 407 29 is_stmt 0 view .LVU341
 1013 0026 8362     		str	r3, [r0, #40]
 408:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 1014              		.loc 1 408 3 is_stmt 1 view .LVU342
 408:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 1015              		.loc 1 408 28 is_stmt 0 view .LVU343
 1016 0028 0A23     		movs	r3, #10
 1017 002a C362     		str	r3, [r0, #44]
 409:Core/Src/main.c ****   {
 1018              		.loc 1 409 3 is_stmt 1 view .LVU344
 409:Core/Src/main.c ****   {
 1019              		.loc 1 409 7 is_stmt 0 view .LVU345
 1020 002c FFF7FEFF 		bl	HAL_SPI_Init
 1021              	.LVL35:
 409:Core/Src/main.c ****   {
ARM GAS  /tmp/ccZ1oEf9.s 			page 51


 1022              		.loc 1 409 6 view .LVU346
 1023 0030 00B9     		cbnz	r0, .L54
 417:Core/Src/main.c **** 
 1024              		.loc 1 417 1 view .LVU347
 1025 0032 08BD     		pop	{r3, pc}
 1026              	.L54:
 411:Core/Src/main.c ****   }
 1027              		.loc 1 411 5 is_stmt 1 view .LVU348
 1028 0034 FFF7FEFF 		bl	Error_Handler
 1029              	.LVL36:
 1030              	.L56:
 1031              		.align	2
 1032              	.L55:
 1033 0038 00000000 		.word	hspi5
 1034 003c 00500140 		.word	1073827840
 1035              		.cfi_endproc
 1036              	.LFE140:
 1038              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1039              		.align	1
 1040              		.syntax unified
 1041              		.thumb
 1042              		.thumb_func
 1044              	MX_TIM1_Init:
 1045              	.LFB141:
 425:Core/Src/main.c **** 
 1046              		.loc 1 425 1 view -0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 24
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050 0000 00B5     		push	{lr}
 1051              	.LCFI16:
 1052              		.cfi_def_cfa_offset 4
 1053              		.cfi_offset 14, -4
 1054 0002 87B0     		sub	sp, sp, #28
 1055              	.LCFI17:
 1056              		.cfi_def_cfa_offset 32
 431:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1057              		.loc 1 431 3 view .LVU350
 431:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1058              		.loc 1 431 26 is_stmt 0 view .LVU351
 1059 0004 0023     		movs	r3, #0
 1060 0006 0293     		str	r3, [sp, #8]
 1061 0008 0393     		str	r3, [sp, #12]
 1062 000a 0493     		str	r3, [sp, #16]
 1063 000c 0593     		str	r3, [sp, #20]
 432:Core/Src/main.c **** 
 1064              		.loc 1 432 3 is_stmt 1 view .LVU352
 432:Core/Src/main.c **** 
 1065              		.loc 1 432 27 is_stmt 0 view .LVU353
 1066 000e 0093     		str	r3, [sp]
 1067 0010 0193     		str	r3, [sp, #4]
 437:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1068              		.loc 1 437 3 is_stmt 1 view .LVU354
 437:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1069              		.loc 1 437 18 is_stmt 0 view .LVU355
 1070 0012 1348     		ldr	r0, .L65
 1071 0014 134A     		ldr	r2, .L65+4
ARM GAS  /tmp/ccZ1oEf9.s 			page 52


 1072 0016 0260     		str	r2, [r0]
 438:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1073              		.loc 1 438 3 is_stmt 1 view .LVU356
 438:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1074              		.loc 1 438 24 is_stmt 0 view .LVU357
 1075 0018 4360     		str	r3, [r0, #4]
 439:Core/Src/main.c ****   htim1.Init.Period = 65535;
 1076              		.loc 1 439 3 is_stmt 1 view .LVU358
 439:Core/Src/main.c ****   htim1.Init.Period = 65535;
 1077              		.loc 1 439 26 is_stmt 0 view .LVU359
 1078 001a 8360     		str	r3, [r0, #8]
 440:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1079              		.loc 1 440 3 is_stmt 1 view .LVU360
 440:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1080              		.loc 1 440 21 is_stmt 0 view .LVU361
 1081 001c 4FF6FF72 		movw	r2, #65535
 1082 0020 C260     		str	r2, [r0, #12]
 441:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1083              		.loc 1 441 3 is_stmt 1 view .LVU362
 441:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1084              		.loc 1 441 28 is_stmt 0 view .LVU363
 1085 0022 0361     		str	r3, [r0, #16]
 442:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1086              		.loc 1 442 3 is_stmt 1 view .LVU364
 442:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1087              		.loc 1 442 32 is_stmt 0 view .LVU365
 1088 0024 4361     		str	r3, [r0, #20]
 443:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1089              		.loc 1 443 3 is_stmt 1 view .LVU366
 443:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1090              		.loc 1 443 32 is_stmt 0 view .LVU367
 1091 0026 8361     		str	r3, [r0, #24]
 444:Core/Src/main.c ****   {
 1092              		.loc 1 444 3 is_stmt 1 view .LVU368
 444:Core/Src/main.c ****   {
 1093              		.loc 1 444 7 is_stmt 0 view .LVU369
 1094 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1095              	.LVL37:
 444:Core/Src/main.c ****   {
 1096              		.loc 1 444 6 view .LVU370
 1097 002c 90B9     		cbnz	r0, .L62
 448:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1098              		.loc 1 448 3 is_stmt 1 view .LVU371
 448:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1099              		.loc 1 448 34 is_stmt 0 view .LVU372
 1100 002e 4FF48053 		mov	r3, #4096
 1101 0032 0293     		str	r3, [sp, #8]
 449:Core/Src/main.c ****   {
 1102              		.loc 1 449 3 is_stmt 1 view .LVU373
 449:Core/Src/main.c ****   {
 1103              		.loc 1 449 7 is_stmt 0 view .LVU374
 1104 0034 02A9     		add	r1, sp, #8
 1105 0036 0A48     		ldr	r0, .L65
 1106 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1107              	.LVL38:
 449:Core/Src/main.c ****   {
 1108              		.loc 1 449 6 view .LVU375
ARM GAS  /tmp/ccZ1oEf9.s 			page 53


 1109 003c 60B9     		cbnz	r0, .L63
 453:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1110              		.loc 1 453 3 is_stmt 1 view .LVU376
 453:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1111              		.loc 1 453 37 is_stmt 0 view .LVU377
 1112 003e 0023     		movs	r3, #0
 1113 0040 0093     		str	r3, [sp]
 454:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1114              		.loc 1 454 3 is_stmt 1 view .LVU378
 454:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1115              		.loc 1 454 33 is_stmt 0 view .LVU379
 1116 0042 0193     		str	r3, [sp, #4]
 455:Core/Src/main.c ****   {
 1117              		.loc 1 455 3 is_stmt 1 view .LVU380
 455:Core/Src/main.c ****   {
 1118              		.loc 1 455 7 is_stmt 0 view .LVU381
 1119 0044 6946     		mov	r1, sp
 1120 0046 0648     		ldr	r0, .L65
 1121 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1122              	.LVL39:
 455:Core/Src/main.c ****   {
 1123              		.loc 1 455 6 view .LVU382
 1124 004c 30B9     		cbnz	r0, .L64
 463:Core/Src/main.c **** 
 1125              		.loc 1 463 1 view .LVU383
 1126 004e 07B0     		add	sp, sp, #28
 1127              	.LCFI18:
 1128              		.cfi_remember_state
 1129              		.cfi_def_cfa_offset 4
 1130              		@ sp needed
 1131 0050 5DF804FB 		ldr	pc, [sp], #4
 1132              	.L62:
 1133              	.LCFI19:
 1134              		.cfi_restore_state
 446:Core/Src/main.c ****   }
 1135              		.loc 1 446 5 is_stmt 1 view .LVU384
 1136 0054 FFF7FEFF 		bl	Error_Handler
 1137              	.LVL40:
 1138              	.L63:
 451:Core/Src/main.c ****   }
 1139              		.loc 1 451 5 view .LVU385
 1140 0058 FFF7FEFF 		bl	Error_Handler
 1141              	.LVL41:
 1142              	.L64:
 457:Core/Src/main.c ****   }
 1143              		.loc 1 457 5 view .LVU386
 1144 005c FFF7FEFF 		bl	Error_Handler
 1145              	.LVL42:
 1146              	.L66:
 1147              		.align	2
 1148              	.L65:
 1149 0060 00000000 		.word	htim1
 1150 0064 00000140 		.word	1073807360
 1151              		.cfi_endproc
 1152              	.LFE141:
 1154              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1155              		.align	1
ARM GAS  /tmp/ccZ1oEf9.s 			page 54


 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1160              	MX_USART1_UART_Init:
 1161              	.LFB142:
 471:Core/Src/main.c **** 
 1162              		.loc 1 471 1 view -0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166 0000 08B5     		push	{r3, lr}
 1167              	.LCFI20:
 1168              		.cfi_def_cfa_offset 8
 1169              		.cfi_offset 3, -8
 1170              		.cfi_offset 14, -4
 480:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1171              		.loc 1 480 3 view .LVU388
 480:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 1172              		.loc 1 480 19 is_stmt 0 view .LVU389
 1173 0002 0A48     		ldr	r0, .L71
 1174 0004 0A4B     		ldr	r3, .L71+4
 1175 0006 0360     		str	r3, [r0]
 481:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1176              		.loc 1 481 3 is_stmt 1 view .LVU390
 481:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1177              		.loc 1 481 24 is_stmt 0 view .LVU391
 1178 0008 4FF4E133 		mov	r3, #115200
 1179 000c 4360     		str	r3, [r0, #4]
 482:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1180              		.loc 1 482 3 is_stmt 1 view .LVU392
 482:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1181              		.loc 1 482 26 is_stmt 0 view .LVU393
 1182 000e 0023     		movs	r3, #0
 1183 0010 8360     		str	r3, [r0, #8]
 483:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1184              		.loc 1 483 3 is_stmt 1 view .LVU394
 483:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1185              		.loc 1 483 24 is_stmt 0 view .LVU395
 1186 0012 C360     		str	r3, [r0, #12]
 484:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1187              		.loc 1 484 3 is_stmt 1 view .LVU396
 484:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1188              		.loc 1 484 22 is_stmt 0 view .LVU397
 1189 0014 0361     		str	r3, [r0, #16]
 485:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1190              		.loc 1 485 3 is_stmt 1 view .LVU398
 485:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1191              		.loc 1 485 20 is_stmt 0 view .LVU399
 1192 0016 0C22     		movs	r2, #12
 1193 0018 4261     		str	r2, [r0, #20]
 486:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1194              		.loc 1 486 3 is_stmt 1 view .LVU400
 486:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1195              		.loc 1 486 25 is_stmt 0 view .LVU401
 1196 001a 8361     		str	r3, [r0, #24]
 487:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1197              		.loc 1 487 3 is_stmt 1 view .LVU402
ARM GAS  /tmp/ccZ1oEf9.s 			page 55


 487:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1198              		.loc 1 487 28 is_stmt 0 view .LVU403
 1199 001c C361     		str	r3, [r0, #28]
 488:Core/Src/main.c ****   {
 1200              		.loc 1 488 3 is_stmt 1 view .LVU404
 488:Core/Src/main.c ****   {
 1201              		.loc 1 488 7 is_stmt 0 view .LVU405
 1202 001e FFF7FEFF 		bl	HAL_UART_Init
 1203              	.LVL43:
 488:Core/Src/main.c ****   {
 1204              		.loc 1 488 6 view .LVU406
 1205 0022 00B9     		cbnz	r0, .L70
 496:Core/Src/main.c **** 
 1206              		.loc 1 496 1 view .LVU407
 1207 0024 08BD     		pop	{r3, pc}
 1208              	.L70:
 490:Core/Src/main.c ****   }
 1209              		.loc 1 490 5 is_stmt 1 view .LVU408
 1210 0026 FFF7FEFF 		bl	Error_Handler
 1211              	.LVL44:
 1212              	.L72:
 1213 002a 00BF     		.align	2
 1214              	.L71:
 1215 002c 00000000 		.word	huart1
 1216 0030 00100140 		.word	1073811456
 1217              		.cfi_endproc
 1218              	.LFE142:
 1220              		.section	.text.SystemClock_Config,"ax",%progbits
 1221              		.align	1
 1222              		.global	SystemClock_Config
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1227              	SystemClock_Config:
 1228              	.LFB135:
 168:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1229              		.loc 1 168 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 80
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233 0000 00B5     		push	{lr}
 1234              	.LCFI21:
 1235              		.cfi_def_cfa_offset 4
 1236              		.cfi_offset 14, -4
 1237 0002 95B0     		sub	sp, sp, #84
 1238              	.LCFI22:
 1239              		.cfi_def_cfa_offset 88
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1240              		.loc 1 169 3 view .LVU410
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1241              		.loc 1 169 22 is_stmt 0 view .LVU411
 1242 0004 3022     		movs	r2, #48
 1243 0006 0021     		movs	r1, #0
 1244 0008 08A8     		add	r0, sp, #32
 1245 000a FFF7FEFF 		bl	memset
 1246              	.LVL45:
 170:Core/Src/main.c **** 
ARM GAS  /tmp/ccZ1oEf9.s 			page 56


 1247              		.loc 1 170 3 is_stmt 1 view .LVU412
 170:Core/Src/main.c **** 
 1248              		.loc 1 170 22 is_stmt 0 view .LVU413
 1249 000e 0023     		movs	r3, #0
 1250 0010 0393     		str	r3, [sp, #12]
 1251 0012 0493     		str	r3, [sp, #16]
 1252 0014 0593     		str	r3, [sp, #20]
 1253 0016 0693     		str	r3, [sp, #24]
 1254 0018 0793     		str	r3, [sp, #28]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1255              		.loc 1 174 3 is_stmt 1 view .LVU414
 1256              	.LBB14:
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1257              		.loc 1 174 3 view .LVU415
 1258 001a 0193     		str	r3, [sp, #4]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1259              		.loc 1 174 3 view .LVU416
 1260 001c 204A     		ldr	r2, .L79
 1261 001e 116C     		ldr	r1, [r2, #64]
 1262 0020 41F08051 		orr	r1, r1, #268435456
 1263 0024 1164     		str	r1, [r2, #64]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1264              		.loc 1 174 3 view .LVU417
 1265 0026 126C     		ldr	r2, [r2, #64]
 1266 0028 02F08052 		and	r2, r2, #268435456
 1267 002c 0192     		str	r2, [sp, #4]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1268              		.loc 1 174 3 view .LVU418
 1269 002e 019A     		ldr	r2, [sp, #4]
 1270              	.LBE14:
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1271              		.loc 1 174 3 view .LVU419
 175:Core/Src/main.c **** 
 1272              		.loc 1 175 3 view .LVU420
 1273              	.LBB15:
 175:Core/Src/main.c **** 
 1274              		.loc 1 175 3 view .LVU421
 1275 0030 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c **** 
 1276              		.loc 1 175 3 view .LVU422
 1277 0032 1C4A     		ldr	r2, .L79+4
 1278 0034 1368     		ldr	r3, [r2]
 1279 0036 23F44043 		bic	r3, r3, #49152
 1280 003a 43F48043 		orr	r3, r3, #16384
 1281 003e 1360     		str	r3, [r2]
 175:Core/Src/main.c **** 
 1282              		.loc 1 175 3 view .LVU423
 1283 0040 1368     		ldr	r3, [r2]
 1284 0042 03F44043 		and	r3, r3, #49152
 1285 0046 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c **** 
 1286              		.loc 1 175 3 view .LVU424
 1287 0048 029B     		ldr	r3, [sp, #8]
 1288              	.LBE15:
 175:Core/Src/main.c **** 
 1289              		.loc 1 175 3 view .LVU425
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  /tmp/ccZ1oEf9.s 			page 57


 1290              		.loc 1 180 3 view .LVU426
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1291              		.loc 1 180 36 is_stmt 0 view .LVU427
 1292 004a 0123     		movs	r3, #1
 1293 004c 0893     		str	r3, [sp, #32]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1294              		.loc 1 181 3 is_stmt 1 view .LVU428
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1295              		.loc 1 181 30 is_stmt 0 view .LVU429
 1296 004e 4FF48033 		mov	r3, #65536
 1297 0052 0993     		str	r3, [sp, #36]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1298              		.loc 1 182 3 is_stmt 1 view .LVU430
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1299              		.loc 1 182 34 is_stmt 0 view .LVU431
 1300 0054 0223     		movs	r3, #2
 1301 0056 0E93     		str	r3, [sp, #56]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1302              		.loc 1 183 3 is_stmt 1 view .LVU432
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1303              		.loc 1 183 35 is_stmt 0 view .LVU433
 1304 0058 4FF48002 		mov	r2, #4194304
 1305 005c 0F92     		str	r2, [sp, #60]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1306              		.loc 1 184 3 is_stmt 1 view .LVU434
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 1307              		.loc 1 184 30 is_stmt 0 view .LVU435
 1308 005e 0422     		movs	r2, #4
 1309 0060 1092     		str	r2, [sp, #64]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1310              		.loc 1 185 3 is_stmt 1 view .LVU436
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1311              		.loc 1 185 30 is_stmt 0 view .LVU437
 1312 0062 4822     		movs	r2, #72
 1313 0064 1192     		str	r2, [sp, #68]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1314              		.loc 1 186 3 is_stmt 1 view .LVU438
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 1315              		.loc 1 186 30 is_stmt 0 view .LVU439
 1316 0066 1293     		str	r3, [sp, #72]
 187:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1317              		.loc 1 187 3 is_stmt 1 view .LVU440
 187:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1318              		.loc 1 187 30 is_stmt 0 view .LVU441
 1319 0068 0323     		movs	r3, #3
 1320 006a 1393     		str	r3, [sp, #76]
 188:Core/Src/main.c ****   {
 1321              		.loc 1 188 3 is_stmt 1 view .LVU442
 188:Core/Src/main.c ****   {
 1322              		.loc 1 188 7 is_stmt 0 view .LVU443
 1323 006c 08A8     		add	r0, sp, #32
 1324 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1325              	.LVL46:
 188:Core/Src/main.c ****   {
 1326              		.loc 1 188 6 view .LVU444
 1327 0072 80B9     		cbnz	r0, .L77
 195:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccZ1oEf9.s 			page 58


 1328              		.loc 1 195 3 is_stmt 1 view .LVU445
 195:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1329              		.loc 1 195 31 is_stmt 0 view .LVU446
 1330 0074 0F23     		movs	r3, #15
 1331 0076 0393     		str	r3, [sp, #12]
 197:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1332              		.loc 1 197 3 is_stmt 1 view .LVU447
 197:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1333              		.loc 1 197 34 is_stmt 0 view .LVU448
 1334 0078 0221     		movs	r1, #2
 1335 007a 0491     		str	r1, [sp, #16]
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1336              		.loc 1 198 3 is_stmt 1 view .LVU449
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1337              		.loc 1 198 35 is_stmt 0 view .LVU450
 1338 007c 0023     		movs	r3, #0
 1339 007e 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1340              		.loc 1 199 3 is_stmt 1 view .LVU451
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1341              		.loc 1 199 36 is_stmt 0 view .LVU452
 1342 0080 4FF48052 		mov	r2, #4096
 1343 0084 0692     		str	r2, [sp, #24]
 200:Core/Src/main.c **** 
 1344              		.loc 1 200 3 is_stmt 1 view .LVU453
 200:Core/Src/main.c **** 
 1345              		.loc 1 200 36 is_stmt 0 view .LVU454
 1346 0086 0793     		str	r3, [sp, #28]
 202:Core/Src/main.c ****   {
 1347              		.loc 1 202 3 is_stmt 1 view .LVU455
 202:Core/Src/main.c ****   {
 1348              		.loc 1 202 7 is_stmt 0 view .LVU456
 1349 0088 03A8     		add	r0, sp, #12
 1350 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1351              	.LVL47:
 202:Core/Src/main.c ****   {
 1352              		.loc 1 202 6 view .LVU457
 1353 008e 20B9     		cbnz	r0, .L78
 206:Core/Src/main.c **** 
 1354              		.loc 1 206 1 view .LVU458
 1355 0090 15B0     		add	sp, sp, #84
 1356              	.LCFI23:
 1357              		.cfi_remember_state
 1358              		.cfi_def_cfa_offset 4
 1359              		@ sp needed
 1360 0092 5DF804FB 		ldr	pc, [sp], #4
 1361              	.L77:
 1362              	.LCFI24:
 1363              		.cfi_restore_state
 190:Core/Src/main.c ****   }
 1364              		.loc 1 190 5 is_stmt 1 view .LVU459
 1365 0096 FFF7FEFF 		bl	Error_Handler
 1366              	.LVL48:
 1367              	.L78:
 204:Core/Src/main.c ****   }
 1368              		.loc 1 204 5 view .LVU460
 1369 009a FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccZ1oEf9.s 			page 59


 1370              	.LVL49:
 1371              	.L80:
 1372 009e 00BF     		.align	2
 1373              	.L79:
 1374 00a0 00380240 		.word	1073887232
 1375 00a4 00700040 		.word	1073770496
 1376              		.cfi_endproc
 1377              	.LFE135:
 1379              		.section	.text.main,"ax",%progbits
 1380              		.align	1
 1381              		.global	main
 1382              		.syntax unified
 1383              		.thumb
 1384              		.thumb_func
 1386              	main:
 1387              	.LFB134:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1388              		.loc 1 96 1 view -0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 0
 1391              		@ frame_needed = 0, uses_anonymous_args = 0
 1392 0000 38B5     		push	{r3, r4, r5, lr}
 1393              	.LCFI25:
 1394              		.cfi_def_cfa_offset 16
 1395              		.cfi_offset 3, -16
 1396              		.cfi_offset 4, -12
 1397              		.cfi_offset 5, -8
 1398              		.cfi_offset 14, -4
 104:Core/Src/main.c **** 
 1399              		.loc 1 104 3 view .LVU462
 1400 0002 FFF7FEFF 		bl	HAL_Init
 1401              	.LVL50:
 111:Core/Src/main.c **** 
 1402              		.loc 1 111 3 view .LVU463
 1403 0006 FFF7FEFF 		bl	SystemClock_Config
 1404              	.LVL51:
 118:Core/Src/main.c ****   MX_CRC_Init();
 1405              		.loc 1 118 3 view .LVU464
 1406 000a FFF7FEFF 		bl	MX_GPIO_Init
 1407              	.LVL52:
 119:Core/Src/main.c ****   MX_DMA2D_Init();
 1408              		.loc 1 119 3 view .LVU465
 1409 000e FFF7FEFF 		bl	MX_CRC_Init
 1410              	.LVL53:
 120:Core/Src/main.c ****   MX_FMC_Init();
 1411              		.loc 1 120 3 view .LVU466
 1412 0012 FFF7FEFF 		bl	MX_DMA2D_Init
 1413              	.LVL54:
 121:Core/Src/main.c ****   MX_I2C3_Init();
 1414              		.loc 1 121 3 view .LVU467
 1415 0016 FFF7FEFF 		bl	MX_FMC_Init
 1416              	.LVL55:
 122:Core/Src/main.c ****   MX_LTDC_Init();
 1417              		.loc 1 122 3 view .LVU468
 1418 001a FFF7FEFF 		bl	MX_I2C3_Init
 1419              	.LVL56:
 123:Core/Src/main.c ****   MX_SPI5_Init();
ARM GAS  /tmp/ccZ1oEf9.s 			page 60


 1420              		.loc 1 123 3 view .LVU469
 1421 001e FFF7FEFF 		bl	MX_LTDC_Init
 1422              	.LVL57:
 124:Core/Src/main.c ****   MX_TIM1_Init();
 1423              		.loc 1 124 3 view .LVU470
 1424 0022 FFF7FEFF 		bl	MX_SPI5_Init
 1425              	.LVL58:
 125:Core/Src/main.c ****   MX_USART1_UART_Init();
 1426              		.loc 1 125 3 view .LVU471
 1427 0026 FFF7FEFF 		bl	MX_TIM1_Init
 1428              	.LVL59:
 126:Core/Src/main.c ****   MX_USB_HOST_Init();
 1429              		.loc 1 126 3 view .LVU472
 1430 002a FFF7FEFF 		bl	MX_USART1_UART_Init
 1431              	.LVL60:
 127:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1432              		.loc 1 127 3 view .LVU473
 1433 002e FFF7FEFF 		bl	MX_USB_HOST_Init
 1434              	.LVL61:
 130:Core/Src/main.c ****   {
 1435              		.loc 1 130 3 view .LVU474
 1436              	.LBB16:
 130:Core/Src/main.c ****   {
 1437              		.loc 1 130 8 view .LVU475
 130:Core/Src/main.c ****   {
 1438              		.loc 1 130 12 is_stmt 0 view .LVU476
 1439 0032 0024     		movs	r4, #0
 130:Core/Src/main.c ****   {
 1440              		.loc 1 130 3 view .LVU477
 1441 0034 13E0     		b	.L82
 1442              	.LVL62:
 1443              	.L83:
 132:Core/Src/main.c **** 	  HAL_Delay(200);
 1444              		.loc 1 132 4 is_stmt 1 discriminator 3 view .LVU478
 1445 0036 154D     		ldr	r5, .L88
 1446 0038 0022     		movs	r2, #0
 1447 003a 4FF4C041 		mov	r1, #24576
 1448 003e 2846     		mov	r0, r5
 1449 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1450              	.LVL63:
 133:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_SET);
 1451              		.loc 1 133 4 discriminator 3 view .LVU479
 1452 0044 C820     		movs	r0, #200
 1453 0046 FFF7FEFF 		bl	HAL_Delay
 1454              	.LVL64:
 134:Core/Src/main.c **** 	  HAL_Delay(200);
 1455              		.loc 1 134 4 discriminator 3 view .LVU480
 1456 004a 0122     		movs	r2, #1
 1457 004c 4FF4C041 		mov	r1, #24576
 1458 0050 2846     		mov	r0, r5
 1459 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1460              	.LVL65:
 135:Core/Src/main.c ****   }
 1461              		.loc 1 135 4 discriminator 3 view .LVU481
 1462 0056 C820     		movs	r0, #200
 1463 0058 FFF7FEFF 		bl	HAL_Delay
 1464              	.LVL66:
ARM GAS  /tmp/ccZ1oEf9.s 			page 61


 130:Core/Src/main.c ****   {
 1465              		.loc 1 130 27 discriminator 3 view .LVU482
 1466 005c 0134     		adds	r4, r4, #1
 1467              	.LVL67:
 1468              	.L82:
 130:Core/Src/main.c ****   {
 1469              		.loc 1 130 21 discriminator 1 view .LVU483
 1470 005e 1D2C     		cmp	r4, #29
 1471 0060 E9DD     		ble	.L83
 1472 0062 08E0     		b	.L85
 1473              	.L87:
 1474              	.LBE16:
 150:Core/Src/main.c **** 	   }
 1475              		.loc 1 150 6 view .LVU484
 1476 0064 41F28833 		movw	r3, #5000
 1477 0068 0122     		movs	r2, #1
 1478 006a 0949     		ldr	r1, .L88+4
 1479 006c 0948     		ldr	r0, .L88+8
 1480 006e FFF7FEFF 		bl	HAL_UART_Transmit
 1481              	.LVL68:
 1482              	.L84:
 156:Core/Src/main.c **** 
 1483              		.loc 1 156 5 view .LVU485
 1484 0072 FFF7FEFF 		bl	MX_USB_HOST_Process
 1485              	.LVL69:
 142:Core/Src/main.c ****   {
 1486              		.loc 1 142 9 view .LVU486
 1487              	.L85:
 142:Core/Src/main.c ****   {
 1488              		.loc 1 142 3 view .LVU487
 149:Core/Src/main.c **** 		   HAL_UART_Transmit(&huart1, rx_buffer, sizeof(rx_buffer), 5000);
 1489              		.loc 1 149 5 view .LVU488
 149:Core/Src/main.c **** 		   HAL_UART_Transmit(&huart1, rx_buffer, sizeof(rx_buffer), 5000);
 1490              		.loc 1 149 9 is_stmt 0 view .LVU489
 1491 0076 41F28833 		movw	r3, #5000
 1492 007a 0122     		movs	r2, #1
 1493 007c 0449     		ldr	r1, .L88+4
 1494 007e 0548     		ldr	r0, .L88+8
 1495 0080 FFF7FEFF 		bl	HAL_UART_Receive
 1496              	.LVL70:
 149:Core/Src/main.c **** 		   HAL_UART_Transmit(&huart1, rx_buffer, sizeof(rx_buffer), 5000);
 1497              		.loc 1 149 8 view .LVU490
 1498 0084 0028     		cmp	r0, #0
 1499 0086 EDD0     		beq	.L87
 1500 0088 F3E7     		b	.L84
 1501              	.L89:
 1502 008a 00BF     		.align	2
 1503              	.L88:
 1504 008c 00180240 		.word	1073879040
 1505 0090 00000000 		.word	rx_buffer
 1506 0094 00000000 		.word	huart1
 1507              		.cfi_endproc
 1508              	.LFE134:
 1510              		.global	rx_done
 1511              		.section	.bss.rx_done,"aw",%nobits
 1514              	rx_done:
 1515 0000 00       		.space	1
ARM GAS  /tmp/ccZ1oEf9.s 			page 62


 1516              		.global	rx_buffer
 1517              		.section	.bss.rx_buffer,"aw",%nobits
 1518              		.align	2
 1521              	rx_buffer:
 1522 0000 00       		.space	1
 1523              		.global	tx_buffer
 1524              		.section	.rodata.tx_buffer,"a"
 1525              		.align	2
 1528              	tx_buffer:
 1529 0000 5472616E 		.ascii	"Transmit \015\012\000"
 1529      736D6974 
 1529      200D0A00 
 1530              		.global	hsdram1
 1531              		.section	.bss.hsdram1,"aw",%nobits
 1532              		.align	2
 1535              	hsdram1:
 1536 0000 00000000 		.space	52
 1536      00000000 
 1536      00000000 
 1536      00000000 
 1536      00000000 
 1537              		.global	huart1
 1538              		.section	.bss.huart1,"aw",%nobits
 1539              		.align	2
 1542              	huart1:
 1543 0000 00000000 		.space	72
 1543      00000000 
 1543      00000000 
 1543      00000000 
 1543      00000000 
 1544              		.global	htim1
 1545              		.section	.bss.htim1,"aw",%nobits
 1546              		.align	2
 1549              	htim1:
 1550 0000 00000000 		.space	72
 1550      00000000 
 1550      00000000 
 1550      00000000 
 1550      00000000 
 1551              		.global	hspi5
 1552              		.section	.bss.hspi5,"aw",%nobits
 1553              		.align	2
 1556              	hspi5:
 1557 0000 00000000 		.space	88
 1557      00000000 
 1557      00000000 
 1557      00000000 
 1557      00000000 
 1558              		.global	hltdc
 1559              		.section	.bss.hltdc,"aw",%nobits
 1560              		.align	2
 1563              	hltdc:
 1564 0000 00000000 		.space	168
 1564      00000000 
 1564      00000000 
 1564      00000000 
 1564      00000000 
ARM GAS  /tmp/ccZ1oEf9.s 			page 63


 1565              		.global	hi2c3
 1566              		.section	.bss.hi2c3,"aw",%nobits
 1567              		.align	2
 1570              	hi2c3:
 1571 0000 00000000 		.space	84
 1571      00000000 
 1571      00000000 
 1571      00000000 
 1571      00000000 
 1572              		.global	hdma2d
 1573              		.section	.bss.hdma2d,"aw",%nobits
 1574              		.align	2
 1577              	hdma2d:
 1578 0000 00000000 		.space	64
 1578      00000000 
 1578      00000000 
 1578      00000000 
 1578      00000000 
 1579              		.global	hcrc
 1580              		.section	.bss.hcrc,"aw",%nobits
 1581              		.align	2
 1584              	hcrc:
 1585 0000 00000000 		.space	8
 1585      00000000 
 1586              		.text
 1587              	.Letext0:
 1588              		.file 3 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 1589              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1590              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1591              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1592              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1593              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1594              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1595              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_crc.h"
 1596              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma2d.h"
 1597              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fmc.h"
 1598              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sdram.h"
 1599              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1600              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_ltdc.h"
 1601              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1602              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1603              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1604              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1605              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c_ex.h"
 1606              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1607              		.file 22 "USB_HOST/App/usb_host.h"
 1608              		.file 23 "<built-in>"
ARM GAS  /tmp/ccZ1oEf9.s 			page 64


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccZ1oEf9.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccZ1oEf9.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccZ1oEf9.s:354    .text.MX_GPIO_Init:0000018c $d
     /tmp/ccZ1oEf9.s:364    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccZ1oEf9.s:370    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccZ1oEf9.s:404    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
     /tmp/ccZ1oEf9.s:409    .text.Error_Handler:00000000 $t
     /tmp/ccZ1oEf9.s:415    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccZ1oEf9.s:447    .text.MX_CRC_Init:00000000 $t
     /tmp/ccZ1oEf9.s:452    .text.MX_CRC_Init:00000000 MX_CRC_Init
     /tmp/ccZ1oEf9.s:483    .text.MX_CRC_Init:00000014 $d
     /tmp/ccZ1oEf9.s:1584   .bss.hcrc:00000000 hcrc
     /tmp/ccZ1oEf9.s:489    .text.MX_DMA2D_Init:00000000 $t
     /tmp/ccZ1oEf9.s:494    .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
     /tmp/ccZ1oEf9.s:559    .text.MX_DMA2D_Init:00000034 $d
     /tmp/ccZ1oEf9.s:1577   .bss.hdma2d:00000000 hdma2d
     /tmp/ccZ1oEf9.s:565    .text.MX_FMC_Init:00000000 $t
     /tmp/ccZ1oEf9.s:570    .text.MX_FMC_Init:00000000 MX_FMC_Init
     /tmp/ccZ1oEf9.s:682    .text.MX_FMC_Init:00000068 $d
     /tmp/ccZ1oEf9.s:1535   .bss.hsdram1:00000000 hsdram1
     /tmp/ccZ1oEf9.s:688    .text.MX_I2C3_Init:00000000 $t
     /tmp/ccZ1oEf9.s:693    .text.MX_I2C3_Init:00000000 MX_I2C3_Init
     /tmp/ccZ1oEf9.s:775    .text.MX_I2C3_Init:00000048 $d
     /tmp/ccZ1oEf9.s:1570   .bss.hi2c3:00000000 hi2c3
     /tmp/ccZ1oEf9.s:782    .text.MX_LTDC_Init:00000000 $t
     /tmp/ccZ1oEf9.s:787    .text.MX_LTDC_Init:00000000 MX_LTDC_Init
     /tmp/ccZ1oEf9.s:953    .text.MX_LTDC_Init:000000ac $d
     /tmp/ccZ1oEf9.s:1563   .bss.hltdc:00000000 hltdc
     /tmp/ccZ1oEf9.s:959    .text.MX_SPI5_Init:00000000 $t
     /tmp/ccZ1oEf9.s:964    .text.MX_SPI5_Init:00000000 MX_SPI5_Init
     /tmp/ccZ1oEf9.s:1033   .text.MX_SPI5_Init:00000038 $d
     /tmp/ccZ1oEf9.s:1556   .bss.hspi5:00000000 hspi5
     /tmp/ccZ1oEf9.s:1039   .text.MX_TIM1_Init:00000000 $t
     /tmp/ccZ1oEf9.s:1044   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccZ1oEf9.s:1149   .text.MX_TIM1_Init:00000060 $d
     /tmp/ccZ1oEf9.s:1549   .bss.htim1:00000000 htim1
     /tmp/ccZ1oEf9.s:1155   .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccZ1oEf9.s:1160   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccZ1oEf9.s:1215   .text.MX_USART1_UART_Init:0000002c $d
     /tmp/ccZ1oEf9.s:1542   .bss.huart1:00000000 huart1
     /tmp/ccZ1oEf9.s:1221   .text.SystemClock_Config:00000000 $t
     /tmp/ccZ1oEf9.s:1227   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccZ1oEf9.s:1374   .text.SystemClock_Config:000000a0 $d
     /tmp/ccZ1oEf9.s:1380   .text.main:00000000 $t
     /tmp/ccZ1oEf9.s:1386   .text.main:00000000 main
     /tmp/ccZ1oEf9.s:1504   .text.main:0000008c $d
     /tmp/ccZ1oEf9.s:1521   .bss.rx_buffer:00000000 rx_buffer
     /tmp/ccZ1oEf9.s:1514   .bss.rx_done:00000000 rx_done
     /tmp/ccZ1oEf9.s:1515   .bss.rx_done:00000000 $d
     /tmp/ccZ1oEf9.s:1518   .bss.rx_buffer:00000000 $d
     /tmp/ccZ1oEf9.s:1528   .rodata.tx_buffer:00000000 tx_buffer
     /tmp/ccZ1oEf9.s:1525   .rodata.tx_buffer:00000000 $d
     /tmp/ccZ1oEf9.s:1532   .bss.hsdram1:00000000 $d
     /tmp/ccZ1oEf9.s:1539   .bss.huart1:00000000 $d
     /tmp/ccZ1oEf9.s:1546   .bss.htim1:00000000 $d
ARM GAS  /tmp/ccZ1oEf9.s 			page 65


     /tmp/ccZ1oEf9.s:1553   .bss.hspi5:00000000 $d
     /tmp/ccZ1oEf9.s:1560   .bss.hltdc:00000000 $d
     /tmp/ccZ1oEf9.s:1567   .bss.hi2c3:00000000 $d
     /tmp/ccZ1oEf9.s:1574   .bss.hdma2d:00000000 $d
     /tmp/ccZ1oEf9.s:1581   .bss.hcrc:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_IncTick
HAL_CRC_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_SDRAM_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
memset
HAL_LTDC_Init
HAL_LTDC_ConfigLayer
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_USB_HOST_Init
HAL_Delay
HAL_UART_Transmit
MX_USB_HOST_Process
HAL_UART_Receive
