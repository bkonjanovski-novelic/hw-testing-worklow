ARM GAS  /tmp/ccRZlU69.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_SDMMC1_SD_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_SDMMC1_SD_Init:
  27              	.LFB154:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "string.h"
  22:Core/Src/main.c **** #include "fatfs.h"
  23:Core/Src/main.c **** #include "usb_host.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccRZlU69.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  47:Core/Src/main.c **** #pragma location=0x2004c000
  48:Core/Src/main.c **** ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx DMA Descriptors */
  49:Core/Src/main.c **** #pragma location=0x2004c0a0
  50:Core/Src/main.c **** ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx DMA Descriptors */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** #elif defined ( __CC_ARM )  /* MDK ARM Compiler */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** __attribute__((at(0x2004c000))) ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx D
  55:Core/Src/main.c **** __attribute__((at(0x2004c0a0))) ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx D
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** #elif defined ( __GNUC__ ) /* GNU Compiler */
  58:Core/Src/main.c **** ETH_DMADescTypeDef DMARxDscrTab[ETH_RX_DESC_CNT] __attribute__((section(".RxDecripSection"))); /* E
  59:Core/Src/main.c **** ETH_DMADescTypeDef DMATxDscrTab[ETH_TX_DESC_CNT] __attribute__((section(".TxDecripSection")));   /*
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** #endif
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** ETH_TxPacketConfig TxConfig;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** ADC_HandleTypeDef hadc3;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** DCMI_HandleTypeDef hdcmi;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** DMA2D_HandleTypeDef hdma2d;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** ETH_HandleTypeDef heth;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** I2C_HandleTypeDef hi2c3;
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** LTDC_HandleTypeDef hltdc;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** QSPI_HandleTypeDef hqspi;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** SAI_HandleTypeDef hsai_BlockA2;
  84:Core/Src/main.c **** SAI_HandleTypeDef hsai_BlockB2;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** SD_HandleTypeDef hsd1;
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** SPDIFRX_HandleTypeDef hspdif;
ARM GAS  /tmp/ccRZlU69.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  91:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  92:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  93:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  94:Core/Src/main.c **** TIM_HandleTypeDef htim8;
  95:Core/Src/main.c **** TIM_HandleTypeDef htim12;
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** UART_HandleTypeDef huart1;
  98:Core/Src/main.c **** UART_HandleTypeDef huart6;
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** SDRAM_HandleTypeDef hsdram1;
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* USER CODE BEGIN PV */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* USER CODE END PV */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 107:Core/Src/main.c **** void SystemClock_Config(void);
 108:Core/Src/main.c **** void PeriphCommonClock_Config(void);
 109:Core/Src/main.c **** static void MX_GPIO_Init(void);
 110:Core/Src/main.c **** static void MX_ADC3_Init(void);
 111:Core/Src/main.c **** static void MX_CRC_Init(void);
 112:Core/Src/main.c **** static void MX_DCMI_Init(void);
 113:Core/Src/main.c **** static void MX_DMA2D_Init(void);
 114:Core/Src/main.c **** static void MX_ETH_Init(void);
 115:Core/Src/main.c **** static void MX_FMC_Init(void);
 116:Core/Src/main.c **** static void MX_I2C3_Init(void);
 117:Core/Src/main.c **** static void MX_LTDC_Init(void);
 118:Core/Src/main.c **** static void MX_QUADSPI_Init(void);
 119:Core/Src/main.c **** static void MX_RTC_Init(void);
 120:Core/Src/main.c **** static void MX_SAI2_Init(void);
 121:Core/Src/main.c **** static void MX_SDMMC1_SD_Init(void);
 122:Core/Src/main.c **** static void MX_SPDIFRX_Init(void);
 123:Core/Src/main.c **** static void MX_TIM1_Init(void);
 124:Core/Src/main.c **** static void MX_TIM2_Init(void);
 125:Core/Src/main.c **** static void MX_TIM3_Init(void);
 126:Core/Src/main.c **** static void MX_TIM5_Init(void);
 127:Core/Src/main.c **** static void MX_TIM8_Init(void);
 128:Core/Src/main.c **** static void MX_TIM12_Init(void);
 129:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 130:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
 131:Core/Src/main.c **** void MX_USB_HOST_Process(void);
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /* USER CODE END PFP */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 138:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** /* USER CODE END 0 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief  The application entry point.
 144:Core/Src/main.c ****   * @retval int
 145:Core/Src/main.c ****   */
ARM GAS  /tmp/ccRZlU69.s 			page 4


 146:Core/Src/main.c **** int main(void)
 147:Core/Src/main.c **** {
 148:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE END 1 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 155:Core/Src/main.c ****   HAL_Init();
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE END Init */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* Configure the system clock */
 162:Core/Src/main.c ****   SystemClock_Config();
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* Configure the peripherals common clocks */
 165:Core/Src/main.c ****   PeriphCommonClock_Config();
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END SysInit */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* Initialize all configured peripherals */
 172:Core/Src/main.c ****   MX_GPIO_Init();
 173:Core/Src/main.c ****   MX_ADC3_Init();
 174:Core/Src/main.c ****   MX_CRC_Init();
 175:Core/Src/main.c ****   MX_DCMI_Init();
 176:Core/Src/main.c ****   MX_DMA2D_Init();
 177:Core/Src/main.c ****   MX_ETH_Init();
 178:Core/Src/main.c ****   MX_FMC_Init();
 179:Core/Src/main.c ****   MX_I2C3_Init();
 180:Core/Src/main.c ****   MX_LTDC_Init();
 181:Core/Src/main.c ****   MX_QUADSPI_Init();
 182:Core/Src/main.c ****   MX_RTC_Init();
 183:Core/Src/main.c ****   MX_SAI2_Init();
 184:Core/Src/main.c ****   MX_SDMMC1_SD_Init();
 185:Core/Src/main.c ****   MX_SPDIFRX_Init();
 186:Core/Src/main.c ****   MX_TIM1_Init();
 187:Core/Src/main.c ****   MX_TIM2_Init();
 188:Core/Src/main.c ****   MX_TIM3_Init();
 189:Core/Src/main.c ****   MX_TIM5_Init();
 190:Core/Src/main.c ****   MX_TIM8_Init();
 191:Core/Src/main.c ****   MX_TIM12_Init();
 192:Core/Src/main.c ****   MX_USART1_UART_Init();
 193:Core/Src/main.c ****   MX_USART6_UART_Init();
 194:Core/Src/main.c ****   MX_FATFS_Init();
 195:Core/Src/main.c ****   MX_USB_HOST_Init();
 196:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END 2 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* Infinite loop */
 201:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccRZlU69.s 			page 5


 203:Core/Src/main.c ****   const uint8_t tx_buffer [] = "TEST-TX\r\n";
 204:Core/Src/main.c ****   uint8_t rx_buffer [1];
 205:Core/Src/main.c ****   uint8_t rx_done = 0;
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   GPIO_PinState state;
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   while (1)
 210:Core/Src/main.c ****   {
 211:Core/Src/main.c ****     /* USER CODE END WHILE */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****     if (state == GPIO_PIN_SET){
 214:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOI, GPIO_PIN_1, GPIO_PIN_SET);
 215:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, tx_buffer, sizeof(tx_buffer), 5000);
 216:Core/Src/main.c **** 	HAL_Delay(4000);
 217:Core/Src/main.c **** 	}
 218:Core/Src/main.c **** 	  else {
 219:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOI, GPIO_PIN_1, GPIO_PIN_RESET);
 220:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, 0, 1, 5000);
 221:Core/Src/main.c **** 	}
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****     MX_USB_HOST_Process();
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** 	
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   /* USER CODE END 3 */
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief System Clock Configuration
 234:Core/Src/main.c ****   * @retval None
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c **** void SystemClock_Config(void)
 237:Core/Src/main.c **** {
 238:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 239:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /** Configure LSE Drive Capability
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 248:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 251:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 254:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 255:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 400;
ARM GAS  /tmp/ccRZlU69.s 			page 6


 260:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 261:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 262:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /** Activate the Over-Drive mode
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 270:Core/Src/main.c ****   {
 271:Core/Src/main.c ****     Error_Handler();
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 277:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 278:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 279:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 284:Core/Src/main.c ****   {
 285:Core/Src/main.c ****     Error_Handler();
 286:Core/Src/main.c ****   }
 287:Core/Src/main.c **** }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 294:Core/Src/main.c **** {
 295:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /** Initializes the peripherals clock
 298:Core/Src/main.c ****   */
 299:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC|RCC_PERIPHCLK_SAI2
 300:Core/Src/main.c ****                               |RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_CLK48;
 301:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 302:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 303:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 304:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV8;
 305:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 306:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 307:Core/Src/main.c ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 308:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 309:Core/Src/main.c ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 310:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c **** }
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** /**
ARM GAS  /tmp/ccRZlU69.s 			page 7


 317:Core/Src/main.c ****   * @brief ADC3 Initialization Function
 318:Core/Src/main.c ****   * @param None
 319:Core/Src/main.c ****   * @retval None
 320:Core/Src/main.c ****   */
 321:Core/Src/main.c **** static void MX_ADC3_Init(void)
 322:Core/Src/main.c **** {
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 0 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /* USER CODE END ADC3_Init 0 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 1 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE END ADC3_Init 1 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c ****   hadc3.Instance = ADC3;
 337:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 338:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 339:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 340:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 341:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 342:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 343:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 344:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 345:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 346:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 347:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 348:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 356:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 357:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 358:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END ADC3_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** /**
 369:Core/Src/main.c ****   * @brief CRC Initialization Function
 370:Core/Src/main.c ****   * @param None
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** static void MX_CRC_Init(void)
ARM GAS  /tmp/ccRZlU69.s 			page 8


 374:Core/Src/main.c **** {
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 383:Core/Src/main.c ****   hcrc.Instance = CRC;
 384:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 385:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 386:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 387:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 388:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 389:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 390:Core/Src/main.c ****   {
 391:Core/Src/main.c ****     Error_Handler();
 392:Core/Src/main.c ****   }
 393:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** }
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** /**
 400:Core/Src/main.c ****   * @brief DCMI Initialization Function
 401:Core/Src/main.c ****   * @param None
 402:Core/Src/main.c ****   * @retval None
 403:Core/Src/main.c ****   */
 404:Core/Src/main.c **** static void MX_DCMI_Init(void)
 405:Core/Src/main.c **** {
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE BEGIN DCMI_Init 0 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE END DCMI_Init 0 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE BEGIN DCMI_Init 1 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* USER CODE END DCMI_Init 1 */
 414:Core/Src/main.c ****   hdcmi.Instance = DCMI;
 415:Core/Src/main.c ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 416:Core/Src/main.c ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 417:Core/Src/main.c ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 418:Core/Src/main.c ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 419:Core/Src/main.c ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 420:Core/Src/main.c ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 421:Core/Src/main.c ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 422:Core/Src/main.c ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 423:Core/Src/main.c ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 424:Core/Src/main.c ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 425:Core/Src/main.c ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 426:Core/Src/main.c ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 427:Core/Src/main.c ****   {
 428:Core/Src/main.c ****     Error_Handler();
 429:Core/Src/main.c ****   }
 430:Core/Src/main.c ****   /* USER CODE BEGIN DCMI_Init 2 */
ARM GAS  /tmp/ccRZlU69.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END DCMI_Init 2 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** }
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** /**
 437:Core/Src/main.c ****   * @brief DMA2D Initialization Function
 438:Core/Src/main.c ****   * @param None
 439:Core/Src/main.c ****   * @retval None
 440:Core/Src/main.c ****   */
 441:Core/Src/main.c **** static void MX_DMA2D_Init(void)
 442:Core/Src/main.c **** {
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 0 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 0 */
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 1 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 1 */
 451:Core/Src/main.c ****   hdma2d.Instance = DMA2D;
 452:Core/Src/main.c ****   hdma2d.Init.Mode = DMA2D_M2M;
 453:Core/Src/main.c ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 454:Core/Src/main.c ****   hdma2d.Init.OutputOffset = 0;
 455:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
 456:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 457:Core/Src/main.c ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 458:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 459:Core/Src/main.c ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 460:Core/Src/main.c ****   {
 461:Core/Src/main.c ****     Error_Handler();
 462:Core/Src/main.c ****   }
 463:Core/Src/main.c ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 464:Core/Src/main.c ****   {
 465:Core/Src/main.c ****     Error_Handler();
 466:Core/Src/main.c ****   }
 467:Core/Src/main.c ****   /* USER CODE BEGIN DMA2D_Init 2 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END DMA2D_Init 2 */
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** }
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** /**
 474:Core/Src/main.c ****   * @brief ETH Initialization Function
 475:Core/Src/main.c ****   * @param None
 476:Core/Src/main.c ****   * @retval None
 477:Core/Src/main.c ****   */
 478:Core/Src/main.c **** static void MX_ETH_Init(void)
 479:Core/Src/main.c **** {
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* USER CODE BEGIN ETH_Init 0 */
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   /* USER CODE END ETH_Init 0 */
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****    static uint8_t MACAddr[6];
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE BEGIN ETH_Init 1 */
ARM GAS  /tmp/ccRZlU69.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   /* USER CODE END ETH_Init 1 */
 490:Core/Src/main.c ****   heth.Instance = ETH;
 491:Core/Src/main.c ****   MACAddr[0] = 0x00;
 492:Core/Src/main.c ****   MACAddr[1] = 0x80;
 493:Core/Src/main.c ****   MACAddr[2] = 0xE1;
 494:Core/Src/main.c ****   MACAddr[3] = 0x00;
 495:Core/Src/main.c ****   MACAddr[4] = 0x00;
 496:Core/Src/main.c ****   MACAddr[5] = 0x00;
 497:Core/Src/main.c ****   heth.Init.MACAddr = &MACAddr[0];
 498:Core/Src/main.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 499:Core/Src/main.c ****   heth.Init.TxDesc = DMATxDscrTab;
 500:Core/Src/main.c ****   heth.Init.RxDesc = DMARxDscrTab;
 501:Core/Src/main.c ****   heth.Init.RxBuffLen = 1524;
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* USER CODE BEGIN MACADDRESS */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE END MACADDRESS */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   if (HAL_ETH_Init(&heth) != HAL_OK)
 508:Core/Src/main.c ****   {
 509:Core/Src/main.c ****     Error_Handler();
 510:Core/Src/main.c ****   }
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   memset(&TxConfig, 0 , sizeof(ETH_TxPacketConfig));
 513:Core/Src/main.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 514:Core/Src/main.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 515:Core/Src/main.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 516:Core/Src/main.c ****   /* USER CODE BEGIN ETH_Init 2 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE END ETH_Init 2 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c **** }
 521:Core/Src/main.c **** 
 522:Core/Src/main.c **** /**
 523:Core/Src/main.c ****   * @brief I2C3 Initialization Function
 524:Core/Src/main.c ****   * @param None
 525:Core/Src/main.c ****   * @retval None
 526:Core/Src/main.c ****   */
 527:Core/Src/main.c **** static void MX_I2C3_Init(void)
 528:Core/Src/main.c **** {
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 0 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /* USER CODE END I2C3_Init 0 */
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 1 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE END I2C3_Init 1 */
 537:Core/Src/main.c ****   hi2c3.Instance = I2C3;
 538:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00C0EAFF;
 539:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 540:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 541:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 542:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 543:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 544:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  /tmp/ccRZlU69.s 			page 11


 545:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 546:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 547:Core/Src/main.c ****   {
 548:Core/Src/main.c ****     Error_Handler();
 549:Core/Src/main.c ****   }
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /** Configure Analogue filter
 552:Core/Src/main.c ****   */
 553:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 554:Core/Src/main.c ****   {
 555:Core/Src/main.c ****     Error_Handler();
 556:Core/Src/main.c ****   }
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /** Configure Digital filter
 559:Core/Src/main.c ****   */
 560:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 561:Core/Src/main.c ****   {
 562:Core/Src/main.c ****     Error_Handler();
 563:Core/Src/main.c ****   }
 564:Core/Src/main.c ****   /* USER CODE BEGIN I2C3_Init 2 */
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****   /* USER CODE END I2C3_Init 2 */
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** }
 569:Core/Src/main.c **** 
 570:Core/Src/main.c **** /**
 571:Core/Src/main.c ****   * @brief LTDC Initialization Function
 572:Core/Src/main.c ****   * @param None
 573:Core/Src/main.c ****   * @retval None
 574:Core/Src/main.c ****   */
 575:Core/Src/main.c **** static void MX_LTDC_Init(void)
 576:Core/Src/main.c **** {
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 0 */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /* USER CODE END LTDC_Init 0 */
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****   LTDC_LayerCfgTypeDef pLayerCfg = {0};
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 1 */
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****   /* USER CODE END LTDC_Init 1 */
 587:Core/Src/main.c ****   hltdc.Instance = LTDC;
 588:Core/Src/main.c ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 589:Core/Src/main.c ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 590:Core/Src/main.c ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 591:Core/Src/main.c ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 592:Core/Src/main.c ****   hltdc.Init.HorizontalSync = 40;
 593:Core/Src/main.c ****   hltdc.Init.VerticalSync = 9;
 594:Core/Src/main.c ****   hltdc.Init.AccumulatedHBP = 53;
 595:Core/Src/main.c ****   hltdc.Init.AccumulatedVBP = 11;
 596:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveW = 533;
 597:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveH = 283;
 598:Core/Src/main.c ****   hltdc.Init.TotalWidth = 565;
 599:Core/Src/main.c ****   hltdc.Init.TotalHeigh = 285;
 600:Core/Src/main.c ****   hltdc.Init.Backcolor.Blue = 0;
 601:Core/Src/main.c ****   hltdc.Init.Backcolor.Green = 0;
ARM GAS  /tmp/ccRZlU69.s 			page 12


 602:Core/Src/main.c ****   hltdc.Init.Backcolor.Red = 0;
 603:Core/Src/main.c ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 604:Core/Src/main.c ****   {
 605:Core/Src/main.c ****     Error_Handler();
 606:Core/Src/main.c ****   }
 607:Core/Src/main.c ****   pLayerCfg.WindowX0 = 0;
 608:Core/Src/main.c ****   pLayerCfg.WindowX1 = 480;
 609:Core/Src/main.c ****   pLayerCfg.WindowY0 = 0;
 610:Core/Src/main.c ****   pLayerCfg.WindowY1 = 272;
 611:Core/Src/main.c ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 612:Core/Src/main.c ****   pLayerCfg.Alpha = 255;
 613:Core/Src/main.c ****   pLayerCfg.Alpha0 = 0;
 614:Core/Src/main.c ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 615:Core/Src/main.c ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 616:Core/Src/main.c ****   pLayerCfg.FBStartAdress = 0xC0000000;
 617:Core/Src/main.c ****   pLayerCfg.ImageWidth = 480;
 618:Core/Src/main.c ****   pLayerCfg.ImageHeight = 272;
 619:Core/Src/main.c ****   pLayerCfg.Backcolor.Blue = 0;
 620:Core/Src/main.c ****   pLayerCfg.Backcolor.Green = 0;
 621:Core/Src/main.c ****   pLayerCfg.Backcolor.Red = 0;
 622:Core/Src/main.c ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 623:Core/Src/main.c ****   {
 624:Core/Src/main.c ****     Error_Handler();
 625:Core/Src/main.c ****   }
 626:Core/Src/main.c ****   /* USER CODE BEGIN LTDC_Init 2 */
 627:Core/Src/main.c **** 
 628:Core/Src/main.c ****   /* USER CODE END LTDC_Init 2 */
 629:Core/Src/main.c **** 
 630:Core/Src/main.c **** }
 631:Core/Src/main.c **** 
 632:Core/Src/main.c **** /**
 633:Core/Src/main.c ****   * @brief QUADSPI Initialization Function
 634:Core/Src/main.c ****   * @param None
 635:Core/Src/main.c ****   * @retval None
 636:Core/Src/main.c ****   */
 637:Core/Src/main.c **** static void MX_QUADSPI_Init(void)
 638:Core/Src/main.c **** {
 639:Core/Src/main.c **** 
 640:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 0 */
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 0 */
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 1 */
 645:Core/Src/main.c **** 
 646:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 1 */
 647:Core/Src/main.c ****   /* QUADSPI parameter configuration*/
 648:Core/Src/main.c ****   hqspi.Instance = QUADSPI;
 649:Core/Src/main.c ****   hqspi.Init.ClockPrescaler = 1;
 650:Core/Src/main.c ****   hqspi.Init.FifoThreshold = 4;
 651:Core/Src/main.c ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 652:Core/Src/main.c ****   hqspi.Init.FlashSize = 24;
 653:Core/Src/main.c ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 654:Core/Src/main.c ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 655:Core/Src/main.c ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 656:Core/Src/main.c ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 657:Core/Src/main.c ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 658:Core/Src/main.c ****   {
ARM GAS  /tmp/ccRZlU69.s 			page 13


 659:Core/Src/main.c ****     Error_Handler();
 660:Core/Src/main.c ****   }
 661:Core/Src/main.c ****   /* USER CODE BEGIN QUADSPI_Init 2 */
 662:Core/Src/main.c **** 
 663:Core/Src/main.c ****   /* USER CODE END QUADSPI_Init 2 */
 664:Core/Src/main.c **** 
 665:Core/Src/main.c **** }
 666:Core/Src/main.c **** 
 667:Core/Src/main.c **** /**
 668:Core/Src/main.c ****   * @brief RTC Initialization Function
 669:Core/Src/main.c ****   * @param None
 670:Core/Src/main.c ****   * @retval None
 671:Core/Src/main.c ****   */
 672:Core/Src/main.c **** static void MX_RTC_Init(void)
 673:Core/Src/main.c **** {
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 680:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 681:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 684:Core/Src/main.c **** 
 685:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 686:Core/Src/main.c **** 
 687:Core/Src/main.c ****   /** Initialize RTC Only
 688:Core/Src/main.c ****   */
 689:Core/Src/main.c ****   hrtc.Instance = RTC;
 690:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 691:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 692:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 693:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 694:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 695:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 696:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 697:Core/Src/main.c ****   {
 698:Core/Src/main.c ****     Error_Handler();
 699:Core/Src/main.c ****   }
 700:Core/Src/main.c **** 
 701:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 702:Core/Src/main.c **** 
 703:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 706:Core/Src/main.c ****   */
 707:Core/Src/main.c ****   sTime.Hours = 0x0;
 708:Core/Src/main.c ****   sTime.Minutes = 0x0;
 709:Core/Src/main.c ****   sTime.Seconds = 0x0;
 710:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 711:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 712:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 713:Core/Src/main.c ****   {
 714:Core/Src/main.c ****     Error_Handler();
 715:Core/Src/main.c ****   }
ARM GAS  /tmp/ccRZlU69.s 			page 14


 716:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 717:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 718:Core/Src/main.c ****   sDate.Date = 0x1;
 719:Core/Src/main.c ****   sDate.Year = 0x0;
 720:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 721:Core/Src/main.c ****   {
 722:Core/Src/main.c ****     Error_Handler();
 723:Core/Src/main.c ****   }
 724:Core/Src/main.c **** 
 725:Core/Src/main.c ****   /** Enable the Alarm A
 726:Core/Src/main.c ****   */
 727:Core/Src/main.c ****   sAlarm.AlarmTime.Hours = 0x0;
 728:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = 0x0;
 729:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = 0x0;
 730:Core/Src/main.c ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 731:Core/Src/main.c ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 732:Core/Src/main.c ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 733:Core/Src/main.c ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 734:Core/Src/main.c ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 735:Core/Src/main.c ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 736:Core/Src/main.c ****   sAlarm.AlarmDateWeekDay = 0x1;
 737:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 738:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 739:Core/Src/main.c ****   {
 740:Core/Src/main.c ****     Error_Handler();
 741:Core/Src/main.c ****   }
 742:Core/Src/main.c **** 
 743:Core/Src/main.c ****   /** Enable the Alarm B
 744:Core/Src/main.c ****   */
 745:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_B;
 746:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 747:Core/Src/main.c ****   {
 748:Core/Src/main.c ****     Error_Handler();
 749:Core/Src/main.c ****   }
 750:Core/Src/main.c **** 
 751:Core/Src/main.c ****   /** Enable the TimeStamp
 752:Core/Src/main.c ****   */
 753:Core/Src/main.c ****   if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK)
 754:Core/Src/main.c ****   {
 755:Core/Src/main.c ****     Error_Handler();
 756:Core/Src/main.c ****   }
 757:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 758:Core/Src/main.c **** 
 759:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 760:Core/Src/main.c **** 
 761:Core/Src/main.c **** }
 762:Core/Src/main.c **** 
 763:Core/Src/main.c **** /**
 764:Core/Src/main.c ****   * @brief SAI2 Initialization Function
 765:Core/Src/main.c ****   * @param None
 766:Core/Src/main.c ****   * @retval None
 767:Core/Src/main.c ****   */
 768:Core/Src/main.c **** static void MX_SAI2_Init(void)
 769:Core/Src/main.c **** {
 770:Core/Src/main.c **** 
 771:Core/Src/main.c ****   /* USER CODE BEGIN SAI2_Init 0 */
 772:Core/Src/main.c **** 
ARM GAS  /tmp/ccRZlU69.s 			page 15


 773:Core/Src/main.c ****   /* USER CODE END SAI2_Init 0 */
 774:Core/Src/main.c **** 
 775:Core/Src/main.c ****   /* USER CODE BEGIN SAI2_Init 1 */
 776:Core/Src/main.c **** 
 777:Core/Src/main.c ****   /* USER CODE END SAI2_Init 1 */
 778:Core/Src/main.c ****   hsai_BlockA2.Instance = SAI2_Block_A;
 779:Core/Src/main.c ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 780:Core/Src/main.c ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 781:Core/Src/main.c ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_8;
 782:Core/Src/main.c ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 783:Core/Src/main.c ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 784:Core/Src/main.c ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 785:Core/Src/main.c ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 786:Core/Src/main.c ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 787:Core/Src/main.c ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 788:Core/Src/main.c ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 789:Core/Src/main.c ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 790:Core/Src/main.c ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 791:Core/Src/main.c ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 792:Core/Src/main.c ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 793:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 794:Core/Src/main.c ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 795:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 796:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 797:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 798:Core/Src/main.c ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 799:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 800:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 801:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 802:Core/Src/main.c ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 803:Core/Src/main.c ****   {
 804:Core/Src/main.c ****     Error_Handler();
 805:Core/Src/main.c ****   }
 806:Core/Src/main.c ****   hsai_BlockB2.Instance = SAI2_Block_B;
 807:Core/Src/main.c ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 808:Core/Src/main.c ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 809:Core/Src/main.c ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_8;
 810:Core/Src/main.c ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 811:Core/Src/main.c ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 812:Core/Src/main.c ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 813:Core/Src/main.c ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 814:Core/Src/main.c ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 815:Core/Src/main.c ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 816:Core/Src/main.c ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 817:Core/Src/main.c ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 818:Core/Src/main.c ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 819:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 820:Core/Src/main.c ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 821:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 822:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 823:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 824:Core/Src/main.c ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 825:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 826:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 827:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 828:Core/Src/main.c ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 829:Core/Src/main.c ****   {
ARM GAS  /tmp/ccRZlU69.s 			page 16


 830:Core/Src/main.c ****     Error_Handler();
 831:Core/Src/main.c ****   }
 832:Core/Src/main.c ****   /* USER CODE BEGIN SAI2_Init 2 */
 833:Core/Src/main.c **** 
 834:Core/Src/main.c ****   /* USER CODE END SAI2_Init 2 */
 835:Core/Src/main.c **** 
 836:Core/Src/main.c **** }
 837:Core/Src/main.c **** 
 838:Core/Src/main.c **** /**
 839:Core/Src/main.c ****   * @brief SDMMC1 Initialization Function
 840:Core/Src/main.c ****   * @param None
 841:Core/Src/main.c ****   * @retval None
 842:Core/Src/main.c ****   */
 843:Core/Src/main.c **** static void MX_SDMMC1_SD_Init(void)
 844:Core/Src/main.c **** {
  28              		.loc 1 844 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 845:Core/Src/main.c **** 
 846:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC1_Init 0 */
 847:Core/Src/main.c **** 
 848:Core/Src/main.c ****   /* USER CODE END SDMMC1_Init 0 */
 849:Core/Src/main.c **** 
 850:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC1_Init 1 */
 851:Core/Src/main.c **** 
 852:Core/Src/main.c ****   /* USER CODE END SDMMC1_Init 1 */
 853:Core/Src/main.c ****   hsd1.Instance = SDMMC1;
  33              		.loc 1 853 3 view .LVU1
  34              		.loc 1 853 17 is_stmt 0 view .LVU2
  35 0000 064B     		ldr	r3, .L2
  36 0002 074A     		ldr	r2, .L2+4
  37 0004 1A60     		str	r2, [r3]
 854:Core/Src/main.c ****   hsd1.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  38              		.loc 1 854 3 is_stmt 1 view .LVU3
  39              		.loc 1 854 23 is_stmt 0 view .LVU4
  40 0006 0022     		movs	r2, #0
  41 0008 5A60     		str	r2, [r3, #4]
 855:Core/Src/main.c ****   hsd1.Init.ClockBypass = SDMMC_CLOCK_BYPASS_DISABLE;
  42              		.loc 1 855 3 is_stmt 1 view .LVU5
  43              		.loc 1 855 25 is_stmt 0 view .LVU6
  44 000a 9A60     		str	r2, [r3, #8]
 856:Core/Src/main.c ****   hsd1.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  45              		.loc 1 856 3 is_stmt 1 view .LVU7
  46              		.loc 1 856 28 is_stmt 0 view .LVU8
  47 000c DA60     		str	r2, [r3, #12]
 857:Core/Src/main.c ****   hsd1.Init.BusWide = SDMMC_BUS_WIDE_4B;
  48              		.loc 1 857 3 is_stmt 1 view .LVU9
  49              		.loc 1 857 21 is_stmt 0 view .LVU10
  50 000e 4FF40061 		mov	r1, #2048
  51 0012 1961     		str	r1, [r3, #16]
 858:Core/Src/main.c ****   hsd1.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  52              		.loc 1 858 3 is_stmt 1 view .LVU11
  53              		.loc 1 858 33 is_stmt 0 view .LVU12
  54 0014 5A61     		str	r2, [r3, #20]
 859:Core/Src/main.c ****   hsd1.Init.ClockDiv = 0;
ARM GAS  /tmp/ccRZlU69.s 			page 17


  55              		.loc 1 859 3 is_stmt 1 view .LVU13
  56              		.loc 1 859 22 is_stmt 0 view .LVU14
  57 0016 9A61     		str	r2, [r3, #24]
 860:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC1_Init 2 */
 861:Core/Src/main.c **** 
 862:Core/Src/main.c ****   /* USER CODE END SDMMC1_Init 2 */
 863:Core/Src/main.c **** 
 864:Core/Src/main.c **** }
  58              		.loc 1 864 1 view .LVU15
  59 0018 7047     		bx	lr
  60              	.L3:
  61 001a 00BF     		.align	2
  62              	.L2:
  63 001c 00000000 		.word	hsd1
  64 0020 002C0140 		.word	1073818624
  65              		.cfi_endproc
  66              	.LFE154:
  68              		.section	.text.MX_GPIO_Init,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	MX_GPIO_Init:
  75              	.LFB165:
 865:Core/Src/main.c **** 
 866:Core/Src/main.c **** /**
 867:Core/Src/main.c ****   * @brief SPDIFRX Initialization Function
 868:Core/Src/main.c ****   * @param None
 869:Core/Src/main.c ****   * @retval None
 870:Core/Src/main.c ****   */
 871:Core/Src/main.c **** static void MX_SPDIFRX_Init(void)
 872:Core/Src/main.c **** {
 873:Core/Src/main.c **** 
 874:Core/Src/main.c ****   /* USER CODE BEGIN SPDIFRX_Init 0 */
 875:Core/Src/main.c **** 
 876:Core/Src/main.c ****   /* USER CODE END SPDIFRX_Init 0 */
 877:Core/Src/main.c **** 
 878:Core/Src/main.c ****   /* USER CODE BEGIN SPDIFRX_Init 1 */
 879:Core/Src/main.c **** 
 880:Core/Src/main.c ****   /* USER CODE END SPDIFRX_Init 1 */
 881:Core/Src/main.c ****   hspdif.Instance = SPDIFRX;
 882:Core/Src/main.c ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 883:Core/Src/main.c ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 884:Core/Src/main.c ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 885:Core/Src/main.c ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 886:Core/Src/main.c ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 887:Core/Src/main.c ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 888:Core/Src/main.c ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 889:Core/Src/main.c ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 890:Core/Src/main.c ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 891:Core/Src/main.c ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 892:Core/Src/main.c ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 893:Core/Src/main.c ****   {
 894:Core/Src/main.c ****     Error_Handler();
 895:Core/Src/main.c ****   }
 896:Core/Src/main.c ****   /* USER CODE BEGIN SPDIFRX_Init 2 */
 897:Core/Src/main.c **** 
ARM GAS  /tmp/ccRZlU69.s 			page 18


 898:Core/Src/main.c ****   /* USER CODE END SPDIFRX_Init 2 */
 899:Core/Src/main.c **** 
 900:Core/Src/main.c **** }
 901:Core/Src/main.c **** 
 902:Core/Src/main.c **** /**
 903:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 904:Core/Src/main.c ****   * @param None
 905:Core/Src/main.c ****   * @retval None
 906:Core/Src/main.c ****   */
 907:Core/Src/main.c **** static void MX_TIM1_Init(void)
 908:Core/Src/main.c **** {
 909:Core/Src/main.c **** 
 910:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 911:Core/Src/main.c **** 
 912:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 913:Core/Src/main.c **** 
 914:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 915:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 916:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 917:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 918:Core/Src/main.c **** 
 919:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 920:Core/Src/main.c **** 
 921:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 922:Core/Src/main.c ****   htim1.Instance = TIM1;
 923:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 924:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 925:Core/Src/main.c ****   htim1.Init.Period = 65535;
 926:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 927:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 928:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 929:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 930:Core/Src/main.c ****   {
 931:Core/Src/main.c ****     Error_Handler();
 932:Core/Src/main.c ****   }
 933:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 934:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 935:Core/Src/main.c ****   {
 936:Core/Src/main.c ****     Error_Handler();
 937:Core/Src/main.c ****   }
 938:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 939:Core/Src/main.c ****   {
 940:Core/Src/main.c ****     Error_Handler();
 941:Core/Src/main.c ****   }
 942:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 943:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 944:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 945:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 946:Core/Src/main.c ****   {
 947:Core/Src/main.c ****     Error_Handler();
 948:Core/Src/main.c ****   }
 949:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 950:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 951:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 952:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 953:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 954:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
ARM GAS  /tmp/ccRZlU69.s 			page 19


 955:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 956:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 957:Core/Src/main.c ****   {
 958:Core/Src/main.c ****     Error_Handler();
 959:Core/Src/main.c ****   }
 960:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 961:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 962:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 963:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 964:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 965:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 966:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 967:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 968:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 969:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 970:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 971:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 972:Core/Src/main.c ****   {
 973:Core/Src/main.c ****     Error_Handler();
 974:Core/Src/main.c ****   }
 975:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 976:Core/Src/main.c **** 
 977:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 978:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 979:Core/Src/main.c **** 
 980:Core/Src/main.c **** }
 981:Core/Src/main.c **** 
 982:Core/Src/main.c **** /**
 983:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 984:Core/Src/main.c ****   * @param None
 985:Core/Src/main.c ****   * @retval None
 986:Core/Src/main.c ****   */
 987:Core/Src/main.c **** static void MX_TIM2_Init(void)
 988:Core/Src/main.c **** {
 989:Core/Src/main.c **** 
 990:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 991:Core/Src/main.c **** 
 992:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 993:Core/Src/main.c **** 
 994:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 995:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 996:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 997:Core/Src/main.c **** 
 998:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 999:Core/Src/main.c **** 
1000:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
1001:Core/Src/main.c ****   htim2.Instance = TIM2;
1002:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
1003:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
1004:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
1005:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1006:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1007:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
1008:Core/Src/main.c ****   {
1009:Core/Src/main.c ****     Error_Handler();
1010:Core/Src/main.c ****   }
1011:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
ARM GAS  /tmp/ccRZlU69.s 			page 20


1012:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
1013:Core/Src/main.c ****   {
1014:Core/Src/main.c ****     Error_Handler();
1015:Core/Src/main.c ****   }
1016:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
1017:Core/Src/main.c ****   {
1018:Core/Src/main.c ****     Error_Handler();
1019:Core/Src/main.c ****   }
1020:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1021:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1022:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
1023:Core/Src/main.c ****   {
1024:Core/Src/main.c ****     Error_Handler();
1025:Core/Src/main.c ****   }
1026:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1027:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1028:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1029:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1030:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1031:Core/Src/main.c ****   {
1032:Core/Src/main.c ****     Error_Handler();
1033:Core/Src/main.c ****   }
1034:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
1035:Core/Src/main.c **** 
1036:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
1037:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
1038:Core/Src/main.c **** 
1039:Core/Src/main.c **** }
1040:Core/Src/main.c **** 
1041:Core/Src/main.c **** /**
1042:Core/Src/main.c ****   * @brief TIM3 Initialization Function
1043:Core/Src/main.c ****   * @param None
1044:Core/Src/main.c ****   * @retval None
1045:Core/Src/main.c ****   */
1046:Core/Src/main.c **** static void MX_TIM3_Init(void)
1047:Core/Src/main.c **** {
1048:Core/Src/main.c **** 
1049:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
1050:Core/Src/main.c **** 
1051:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
1052:Core/Src/main.c **** 
1053:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
1054:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1055:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1056:Core/Src/main.c **** 
1057:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
1058:Core/Src/main.c **** 
1059:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
1060:Core/Src/main.c ****   htim3.Instance = TIM3;
1061:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
1062:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1063:Core/Src/main.c ****   htim3.Init.Period = 65535;
1064:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1065:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1066:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
1067:Core/Src/main.c ****   {
1068:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccRZlU69.s 			page 21


1069:Core/Src/main.c ****   }
1070:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1071:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
1072:Core/Src/main.c ****   {
1073:Core/Src/main.c ****     Error_Handler();
1074:Core/Src/main.c ****   }
1075:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
1076:Core/Src/main.c ****   {
1077:Core/Src/main.c ****     Error_Handler();
1078:Core/Src/main.c ****   }
1079:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1080:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1081:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1082:Core/Src/main.c ****   {
1083:Core/Src/main.c ****     Error_Handler();
1084:Core/Src/main.c ****   }
1085:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1086:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1087:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1088:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1089:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1090:Core/Src/main.c ****   {
1091:Core/Src/main.c ****     Error_Handler();
1092:Core/Src/main.c ****   }
1093:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
1094:Core/Src/main.c **** 
1095:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
1096:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
1097:Core/Src/main.c **** 
1098:Core/Src/main.c **** }
1099:Core/Src/main.c **** 
1100:Core/Src/main.c **** /**
1101:Core/Src/main.c ****   * @brief TIM5 Initialization Function
1102:Core/Src/main.c ****   * @param None
1103:Core/Src/main.c ****   * @retval None
1104:Core/Src/main.c ****   */
1105:Core/Src/main.c **** static void MX_TIM5_Init(void)
1106:Core/Src/main.c **** {
1107:Core/Src/main.c **** 
1108:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
1109:Core/Src/main.c **** 
1110:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
1111:Core/Src/main.c **** 
1112:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
1113:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1114:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1115:Core/Src/main.c **** 
1116:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
1117:Core/Src/main.c **** 
1118:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
1119:Core/Src/main.c ****   htim5.Instance = TIM5;
1120:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
1121:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1122:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
1123:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1124:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1125:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
ARM GAS  /tmp/ccRZlU69.s 			page 22


1126:Core/Src/main.c ****   {
1127:Core/Src/main.c ****     Error_Handler();
1128:Core/Src/main.c ****   }
1129:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1130:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
1131:Core/Src/main.c ****   {
1132:Core/Src/main.c ****     Error_Handler();
1133:Core/Src/main.c ****   }
1134:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
1135:Core/Src/main.c ****   {
1136:Core/Src/main.c ****     Error_Handler();
1137:Core/Src/main.c ****   }
1138:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1139:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1140:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
1141:Core/Src/main.c ****   {
1142:Core/Src/main.c ****     Error_Handler();
1143:Core/Src/main.c ****   }
1144:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1145:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1146:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1147:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1148:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1149:Core/Src/main.c ****   {
1150:Core/Src/main.c ****     Error_Handler();
1151:Core/Src/main.c ****   }
1152:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
1153:Core/Src/main.c **** 
1154:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
1155:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim5);
1156:Core/Src/main.c **** 
1157:Core/Src/main.c **** }
1158:Core/Src/main.c **** 
1159:Core/Src/main.c **** /**
1160:Core/Src/main.c ****   * @brief TIM8 Initialization Function
1161:Core/Src/main.c ****   * @param None
1162:Core/Src/main.c ****   * @retval None
1163:Core/Src/main.c ****   */
1164:Core/Src/main.c **** static void MX_TIM8_Init(void)
1165:Core/Src/main.c **** {
1166:Core/Src/main.c **** 
1167:Core/Src/main.c ****   /* USER CODE BEGIN TIM8_Init 0 */
1168:Core/Src/main.c **** 
1169:Core/Src/main.c ****   /* USER CODE END TIM8_Init 0 */
1170:Core/Src/main.c **** 
1171:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
1172:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1173:Core/Src/main.c **** 
1174:Core/Src/main.c ****   /* USER CODE BEGIN TIM8_Init 1 */
1175:Core/Src/main.c **** 
1176:Core/Src/main.c ****   /* USER CODE END TIM8_Init 1 */
1177:Core/Src/main.c ****   htim8.Instance = TIM8;
1178:Core/Src/main.c ****   htim8.Init.Prescaler = 0;
1179:Core/Src/main.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
1180:Core/Src/main.c ****   htim8.Init.Period = 65535;
1181:Core/Src/main.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1182:Core/Src/main.c ****   htim8.Init.RepetitionCounter = 0;
ARM GAS  /tmp/ccRZlU69.s 			page 23


1183:Core/Src/main.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1184:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
1185:Core/Src/main.c ****   {
1186:Core/Src/main.c ****     Error_Handler();
1187:Core/Src/main.c ****   }
1188:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1189:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
1190:Core/Src/main.c ****   {
1191:Core/Src/main.c ****     Error_Handler();
1192:Core/Src/main.c ****   }
1193:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1194:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
1195:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1196:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
1197:Core/Src/main.c ****   {
1198:Core/Src/main.c ****     Error_Handler();
1199:Core/Src/main.c ****   }
1200:Core/Src/main.c ****   /* USER CODE BEGIN TIM8_Init 2 */
1201:Core/Src/main.c **** 
1202:Core/Src/main.c ****   /* USER CODE END TIM8_Init 2 */
1203:Core/Src/main.c **** 
1204:Core/Src/main.c **** }
1205:Core/Src/main.c **** 
1206:Core/Src/main.c **** /**
1207:Core/Src/main.c ****   * @brief TIM12 Initialization Function
1208:Core/Src/main.c ****   * @param None
1209:Core/Src/main.c ****   * @retval None
1210:Core/Src/main.c ****   */
1211:Core/Src/main.c **** static void MX_TIM12_Init(void)
1212:Core/Src/main.c **** {
1213:Core/Src/main.c **** 
1214:Core/Src/main.c ****   /* USER CODE BEGIN TIM12_Init 0 */
1215:Core/Src/main.c **** 
1216:Core/Src/main.c ****   /* USER CODE END TIM12_Init 0 */
1217:Core/Src/main.c **** 
1218:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1219:Core/Src/main.c **** 
1220:Core/Src/main.c ****   /* USER CODE BEGIN TIM12_Init 1 */
1221:Core/Src/main.c **** 
1222:Core/Src/main.c ****   /* USER CODE END TIM12_Init 1 */
1223:Core/Src/main.c ****   htim12.Instance = TIM12;
1224:Core/Src/main.c ****   htim12.Init.Prescaler = 0;
1225:Core/Src/main.c ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
1226:Core/Src/main.c ****   htim12.Init.Period = 65535;
1227:Core/Src/main.c ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1228:Core/Src/main.c ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1229:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
1230:Core/Src/main.c ****   {
1231:Core/Src/main.c ****     Error_Handler();
1232:Core/Src/main.c ****   }
1233:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1234:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1235:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1236:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1237:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1238:Core/Src/main.c ****   {
1239:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccRZlU69.s 			page 24


1240:Core/Src/main.c ****   }
1241:Core/Src/main.c ****   /* USER CODE BEGIN TIM12_Init 2 */
1242:Core/Src/main.c **** 
1243:Core/Src/main.c ****   /* USER CODE END TIM12_Init 2 */
1244:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim12);
1245:Core/Src/main.c **** 
1246:Core/Src/main.c **** }
1247:Core/Src/main.c **** 
1248:Core/Src/main.c **** /**
1249:Core/Src/main.c ****   * @brief USART1 Initialization Function
1250:Core/Src/main.c ****   * @param None
1251:Core/Src/main.c ****   * @retval None
1252:Core/Src/main.c ****   */
1253:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
1254:Core/Src/main.c **** {
1255:Core/Src/main.c **** 
1256:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
1257:Core/Src/main.c **** 
1258:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
1259:Core/Src/main.c **** 
1260:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
1261:Core/Src/main.c **** 
1262:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
1263:Core/Src/main.c ****   huart1.Instance = USART1;
1264:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
1265:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1266:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
1267:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
1268:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
1269:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1270:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1271:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1272:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1273:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1274:Core/Src/main.c ****   {
1275:Core/Src/main.c ****     Error_Handler();
1276:Core/Src/main.c ****   }
1277:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
1278:Core/Src/main.c **** 
1279:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
1280:Core/Src/main.c **** 
1281:Core/Src/main.c **** }
1282:Core/Src/main.c **** 
1283:Core/Src/main.c **** /**
1284:Core/Src/main.c ****   * @brief USART6 Initialization Function
1285:Core/Src/main.c ****   * @param None
1286:Core/Src/main.c ****   * @retval None
1287:Core/Src/main.c ****   */
1288:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
1289:Core/Src/main.c **** {
1290:Core/Src/main.c **** 
1291:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
1292:Core/Src/main.c **** 
1293:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
1294:Core/Src/main.c **** 
1295:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
1296:Core/Src/main.c **** 
ARM GAS  /tmp/ccRZlU69.s 			page 25


1297:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
1298:Core/Src/main.c ****   huart6.Instance = USART6;
1299:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
1300:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
1301:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
1302:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
1303:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
1304:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1305:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1306:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1307:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1308:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
1309:Core/Src/main.c ****   {
1310:Core/Src/main.c ****     Error_Handler();
1311:Core/Src/main.c ****   }
1312:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
1313:Core/Src/main.c **** 
1314:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
1315:Core/Src/main.c **** 
1316:Core/Src/main.c **** }
1317:Core/Src/main.c **** 
1318:Core/Src/main.c **** /* FMC initialization function */
1319:Core/Src/main.c **** static void MX_FMC_Init(void)
1320:Core/Src/main.c **** {
1321:Core/Src/main.c **** 
1322:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 0 */
1323:Core/Src/main.c **** 
1324:Core/Src/main.c ****   /* USER CODE END FMC_Init 0 */
1325:Core/Src/main.c **** 
1326:Core/Src/main.c ****   FMC_SDRAM_TimingTypeDef SdramTiming = {0};
1327:Core/Src/main.c **** 
1328:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 1 */
1329:Core/Src/main.c **** 
1330:Core/Src/main.c ****   /* USER CODE END FMC_Init 1 */
1331:Core/Src/main.c **** 
1332:Core/Src/main.c ****   /** Perform the SDRAM1 memory initialization sequence
1333:Core/Src/main.c ****   */
1334:Core/Src/main.c ****   hsdram1.Instance = FMC_SDRAM_DEVICE;
1335:Core/Src/main.c ****   /* hsdram1.Init */
1336:Core/Src/main.c ****   hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
1337:Core/Src/main.c ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
1338:Core/Src/main.c ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
1339:Core/Src/main.c ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
1340:Core/Src/main.c ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
1341:Core/Src/main.c ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
1342:Core/Src/main.c ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
1343:Core/Src/main.c ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
1344:Core/Src/main.c ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
1345:Core/Src/main.c ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
1346:Core/Src/main.c ****   /* SdramTiming */
1347:Core/Src/main.c ****   SdramTiming.LoadToActiveDelay = 2;
1348:Core/Src/main.c ****   SdramTiming.ExitSelfRefreshDelay = 7;
1349:Core/Src/main.c ****   SdramTiming.SelfRefreshTime = 4;
1350:Core/Src/main.c ****   SdramTiming.RowCycleDelay = 7;
1351:Core/Src/main.c ****   SdramTiming.WriteRecoveryTime = 3;
1352:Core/Src/main.c ****   SdramTiming.RPDelay = 2;
1353:Core/Src/main.c ****   SdramTiming.RCDDelay = 2;
ARM GAS  /tmp/ccRZlU69.s 			page 26


1354:Core/Src/main.c **** 
1355:Core/Src/main.c ****   if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
1356:Core/Src/main.c ****   {
1357:Core/Src/main.c ****     Error_Handler( );
1358:Core/Src/main.c ****   }
1359:Core/Src/main.c **** 
1360:Core/Src/main.c ****   /* USER CODE BEGIN FMC_Init 2 */
1361:Core/Src/main.c **** 
1362:Core/Src/main.c ****   /* USER CODE END FMC_Init 2 */
1363:Core/Src/main.c **** }
1364:Core/Src/main.c **** 
1365:Core/Src/main.c **** /**
1366:Core/Src/main.c ****   * @brief GPIO Initialization Function
1367:Core/Src/main.c ****   * @param None
1368:Core/Src/main.c ****   * @retval None
1369:Core/Src/main.c ****   */
1370:Core/Src/main.c **** static void MX_GPIO_Init(void)
1371:Core/Src/main.c **** {
  76              		.loc 1 1371 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 64
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 36
  83              		.cfi_offset 4, -36
  84              		.cfi_offset 5, -32
  85              		.cfi_offset 6, -28
  86              		.cfi_offset 7, -24
  87              		.cfi_offset 8, -20
  88              		.cfi_offset 9, -16
  89              		.cfi_offset 10, -12
  90              		.cfi_offset 11, -8
  91              		.cfi_offset 14, -4
  92 0004 91B0     		sub	sp, sp, #68
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 104
1372:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  95              		.loc 1 1372 3 view .LVU17
  96              		.loc 1 1372 20 is_stmt 0 view .LVU18
  97 0006 0024     		movs	r4, #0
  98 0008 0B94     		str	r4, [sp, #44]
  99 000a 0C94     		str	r4, [sp, #48]
 100 000c 0D94     		str	r4, [sp, #52]
 101 000e 0E94     		str	r4, [sp, #56]
 102 0010 0F94     		str	r4, [sp, #60]
1373:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
1374:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
1375:Core/Src/main.c **** 
1376:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
1377:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 103              		.loc 1 1377 3 is_stmt 1 view .LVU19
 104              	.LBB4:
 105              		.loc 1 1377 3 view .LVU20
 106              		.loc 1 1377 3 view .LVU21
 107 0012 AC4B     		ldr	r3, .L6
 108 0014 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccRZlU69.s 			page 27


 109 0016 42F01002 		orr	r2, r2, #16
 110 001a 1A63     		str	r2, [r3, #48]
 111              		.loc 1 1377 3 view .LVU22
 112 001c 1A6B     		ldr	r2, [r3, #48]
 113 001e 02F01002 		and	r2, r2, #16
 114 0022 0092     		str	r2, [sp]
 115              		.loc 1 1377 3 view .LVU23
 116 0024 009A     		ldr	r2, [sp]
 117              	.LBE4:
 118              		.loc 1 1377 3 view .LVU24
1378:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 119              		.loc 1 1378 3 view .LVU25
 120              	.LBB5:
 121              		.loc 1 1378 3 view .LVU26
 122              		.loc 1 1378 3 view .LVU27
 123 0026 1A6B     		ldr	r2, [r3, #48]
 124 0028 42F04002 		orr	r2, r2, #64
 125 002c 1A63     		str	r2, [r3, #48]
 126              		.loc 1 1378 3 view .LVU28
 127 002e 1A6B     		ldr	r2, [r3, #48]
 128 0030 02F04002 		and	r2, r2, #64
 129 0034 0192     		str	r2, [sp, #4]
 130              		.loc 1 1378 3 view .LVU29
 131 0036 019A     		ldr	r2, [sp, #4]
 132              	.LBE5:
 133              		.loc 1 1378 3 view .LVU30
1379:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 134              		.loc 1 1379 3 view .LVU31
 135              	.LBB6:
 136              		.loc 1 1379 3 view .LVU32
 137              		.loc 1 1379 3 view .LVU33
 138 0038 1A6B     		ldr	r2, [r3, #48]
 139 003a 42F00202 		orr	r2, r2, #2
 140 003e 1A63     		str	r2, [r3, #48]
 141              		.loc 1 1379 3 view .LVU34
 142 0040 1A6B     		ldr	r2, [r3, #48]
 143 0042 02F00202 		and	r2, r2, #2
 144 0046 0292     		str	r2, [sp, #8]
 145              		.loc 1 1379 3 view .LVU35
 146 0048 029A     		ldr	r2, [sp, #8]
 147              	.LBE6:
 148              		.loc 1 1379 3 view .LVU36
1380:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 149              		.loc 1 1380 3 view .LVU37
 150              	.LBB7:
 151              		.loc 1 1380 3 view .LVU38
 152              		.loc 1 1380 3 view .LVU39
 153 004a 1A6B     		ldr	r2, [r3, #48]
 154 004c 42F00802 		orr	r2, r2, #8
 155 0050 1A63     		str	r2, [r3, #48]
 156              		.loc 1 1380 3 view .LVU40
 157 0052 1A6B     		ldr	r2, [r3, #48]
 158 0054 02F00802 		and	r2, r2, #8
 159 0058 0392     		str	r2, [sp, #12]
 160              		.loc 1 1380 3 view .LVU41
 161 005a 039A     		ldr	r2, [sp, #12]
 162              	.LBE7:
ARM GAS  /tmp/ccRZlU69.s 			page 28


 163              		.loc 1 1380 3 view .LVU42
1381:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 164              		.loc 1 1381 3 view .LVU43
 165              	.LBB8:
 166              		.loc 1 1381 3 view .LVU44
 167              		.loc 1 1381 3 view .LVU45
 168 005c 1A6B     		ldr	r2, [r3, #48]
 169 005e 42F00402 		orr	r2, r2, #4
 170 0062 1A63     		str	r2, [r3, #48]
 171              		.loc 1 1381 3 view .LVU46
 172 0064 1A6B     		ldr	r2, [r3, #48]
 173 0066 02F00402 		and	r2, r2, #4
 174 006a 0492     		str	r2, [sp, #16]
 175              		.loc 1 1381 3 view .LVU47
 176 006c 049A     		ldr	r2, [sp, #16]
 177              	.LBE8:
 178              		.loc 1 1381 3 view .LVU48
1382:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 179              		.loc 1 1382 3 view .LVU49
 180              	.LBB9:
 181              		.loc 1 1382 3 view .LVU50
 182              		.loc 1 1382 3 view .LVU51
 183 006e 1A6B     		ldr	r2, [r3, #48]
 184 0070 42F00102 		orr	r2, r2, #1
 185 0074 1A63     		str	r2, [r3, #48]
 186              		.loc 1 1382 3 view .LVU52
 187 0076 1A6B     		ldr	r2, [r3, #48]
 188 0078 02F00102 		and	r2, r2, #1
 189 007c 0592     		str	r2, [sp, #20]
 190              		.loc 1 1382 3 view .LVU53
 191 007e 059A     		ldr	r2, [sp, #20]
 192              	.LBE9:
 193              		.loc 1 1382 3 view .LVU54
1383:Core/Src/main.c ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 194              		.loc 1 1383 3 view .LVU55
 195              	.LBB10:
 196              		.loc 1 1383 3 view .LVU56
 197              		.loc 1 1383 3 view .LVU57
 198 0080 1A6B     		ldr	r2, [r3, #48]
 199 0082 42F40072 		orr	r2, r2, #512
 200 0086 1A63     		str	r2, [r3, #48]
 201              		.loc 1 1383 3 view .LVU58
 202 0088 1A6B     		ldr	r2, [r3, #48]
 203 008a 02F40072 		and	r2, r2, #512
 204 008e 0692     		str	r2, [sp, #24]
 205              		.loc 1 1383 3 view .LVU59
 206 0090 069A     		ldr	r2, [sp, #24]
 207              	.LBE10:
 208              		.loc 1 1383 3 view .LVU60
1384:Core/Src/main.c ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 209              		.loc 1 1384 3 view .LVU61
 210              	.LBB11:
 211              		.loc 1 1384 3 view .LVU62
 212              		.loc 1 1384 3 view .LVU63
 213 0092 1A6B     		ldr	r2, [r3, #48]
 214 0094 42F48072 		orr	r2, r2, #256
 215 0098 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccRZlU69.s 			page 29


 216              		.loc 1 1384 3 view .LVU64
 217 009a 1A6B     		ldr	r2, [r3, #48]
 218 009c 02F48072 		and	r2, r2, #256
 219 00a0 0792     		str	r2, [sp, #28]
 220              		.loc 1 1384 3 view .LVU65
 221 00a2 079A     		ldr	r2, [sp, #28]
 222              	.LBE11:
 223              		.loc 1 1384 3 view .LVU66
1385:Core/Src/main.c ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 224              		.loc 1 1385 3 view .LVU67
 225              	.LBB12:
 226              		.loc 1 1385 3 view .LVU68
 227              		.loc 1 1385 3 view .LVU69
 228 00a4 1A6B     		ldr	r2, [r3, #48]
 229 00a6 42F48062 		orr	r2, r2, #1024
 230 00aa 1A63     		str	r2, [r3, #48]
 231              		.loc 1 1385 3 view .LVU70
 232 00ac 1A6B     		ldr	r2, [r3, #48]
 233 00ae 02F48062 		and	r2, r2, #1024
 234 00b2 0892     		str	r2, [sp, #32]
 235              		.loc 1 1385 3 view .LVU71
 236 00b4 089A     		ldr	r2, [sp, #32]
 237              	.LBE12:
 238              		.loc 1 1385 3 view .LVU72
1386:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 239              		.loc 1 1386 3 view .LVU73
 240              	.LBB13:
 241              		.loc 1 1386 3 view .LVU74
 242              		.loc 1 1386 3 view .LVU75
 243 00b6 1A6B     		ldr	r2, [r3, #48]
 244 00b8 42F02002 		orr	r2, r2, #32
 245 00bc 1A63     		str	r2, [r3, #48]
 246              		.loc 1 1386 3 view .LVU76
 247 00be 1A6B     		ldr	r2, [r3, #48]
 248 00c0 02F02002 		and	r2, r2, #32
 249 00c4 0992     		str	r2, [sp, #36]
 250              		.loc 1 1386 3 view .LVU77
 251 00c6 099A     		ldr	r2, [sp, #36]
 252              	.LBE13:
 253              		.loc 1 1386 3 view .LVU78
1387:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 254              		.loc 1 1387 3 view .LVU79
 255              	.LBB14:
 256              		.loc 1 1387 3 view .LVU80
 257              		.loc 1 1387 3 view .LVU81
 258 00c8 1A6B     		ldr	r2, [r3, #48]
 259 00ca 42F08002 		orr	r2, r2, #128
 260 00ce 1A63     		str	r2, [r3, #48]
 261              		.loc 1 1387 3 view .LVU82
 262 00d0 1B6B     		ldr	r3, [r3, #48]
 263 00d2 03F08003 		and	r3, r3, #128
 264 00d6 0A93     		str	r3, [sp, #40]
 265              		.loc 1 1387 3 view .LVU83
 266 00d8 0A9B     		ldr	r3, [sp, #40]
 267              	.LBE14:
 268              		.loc 1 1387 3 view .LVU84
1388:Core/Src/main.c **** 
ARM GAS  /tmp/ccRZlU69.s 			page 30


1389:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1390:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 269              		.loc 1 1390 3 view .LVU85
 270 00da 0122     		movs	r2, #1
 271 00dc 2021     		movs	r1, #32
 272 00de 7A48     		ldr	r0, .L6+4
 273 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 274              	.LVL0:
1391:Core/Src/main.c **** 
1392:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1393:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin|GPIO_PIN_1, GPIO_PIN_RESET);
 275              		.loc 1 1393 3 view .LVU86
 276 00e4 DFF80082 		ldr	r8, .L6+36
 277 00e8 2246     		mov	r2, r4
 278 00ea 0E21     		movs	r1, #14
 279 00ec 4046     		mov	r0, r8
 280 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 281              	.LVL1:
1394:Core/Src/main.c **** 
1395:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1396:Core/Src/main.c ****   HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_RESET);
 282              		.loc 1 1396 3 view .LVU87
 283 00f2 2246     		mov	r2, r4
 284 00f4 0821     		movs	r1, #8
 285 00f6 7548     		ldr	r0, .L6+8
 286 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 287              	.LVL2:
1397:Core/Src/main.c **** 
1398:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1399:Core/Src/main.c ****   HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 288              		.loc 1 1399 3 view .LVU88
 289 00fc 0122     		movs	r2, #1
 290 00fe 4FF48051 		mov	r1, #4096
 291 0102 4046     		mov	r0, r8
 292 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 293              	.LVL3:
1400:Core/Src/main.c **** 
1401:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1402:Core/Src/main.c ****   HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 294              		.loc 1 1402 3 view .LVU89
 295 0108 2246     		mov	r2, r4
 296 010a 4FF40051 		mov	r1, #8192
 297 010e 7048     		ldr	r0, .L6+12
 298 0110 FFF7FEFF 		bl	HAL_GPIO_WritePin
 299              	.LVL4:
1403:Core/Src/main.c **** 
1404:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1405:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_7|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 300              		.loc 1 1405 3 view .LVU90
 301 0114 2246     		mov	r2, r4
 302 0116 C821     		movs	r1, #200
 303 0118 6E48     		ldr	r0, .L6+16
 304 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 305              	.LVL5:
1406:Core/Src/main.c **** 
1407:Core/Src/main.c ****   /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
1408:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
ARM GAS  /tmp/ccRZlU69.s 			page 31


 306              		.loc 1 1408 3 view .LVU91
 307              		.loc 1 1408 23 is_stmt 0 view .LVU92
 308 011e 4FF0080B 		mov	fp, #8
 309 0122 CDF82CB0 		str	fp, [sp, #44]
1409:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 310              		.loc 1 1409 3 is_stmt 1 view .LVU93
 311              		.loc 1 1409 24 is_stmt 0 view .LVU94
 312 0126 0C94     		str	r4, [sp, #48]
1410:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 313              		.loc 1 1410 3 is_stmt 1 view .LVU95
 314              		.loc 1 1410 24 is_stmt 0 view .LVU96
 315 0128 0D94     		str	r4, [sp, #52]
1411:Core/Src/main.c ****   HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 316              		.loc 1 1411 3 is_stmt 1 view .LVU97
 317 012a 0BA9     		add	r1, sp, #44
 318 012c 6A48     		ldr	r0, .L6+20
 319 012e FFF7FEFF 		bl	HAL_GPIO_Init
 320              	.LVL6:
1412:Core/Src/main.c **** 
1413:Core/Src/main.c ****   /*Configure GPIO pin : CUSTOM_Pin */
1414:Core/Src/main.c ****   GPIO_InitStruct.Pin = CUSTOM_Pin;
 321              		.loc 1 1414 3 view .LVU98
 322              		.loc 1 1414 23 is_stmt 0 view .LVU99
 323 0132 4FF48073 		mov	r3, #256
 324 0136 0B93     		str	r3, [sp, #44]
1415:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 325              		.loc 1 1415 3 is_stmt 1 view .LVU100
 326              		.loc 1 1415 24 is_stmt 0 view .LVU101
 327 0138 0C94     		str	r4, [sp, #48]
1416:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 328              		.loc 1 1416 3 is_stmt 1 view .LVU102
 329              		.loc 1 1416 24 is_stmt 0 view .LVU103
 330 013a 0D94     		str	r4, [sp, #52]
1417:Core/Src/main.c ****   HAL_GPIO_Init(CUSTOM_GPIO_Port, &GPIO_InitStruct);
 331              		.loc 1 1417 3 is_stmt 1 view .LVU104
 332 013c DFF8ACA1 		ldr	r10, .L6+40
 333 0140 0BA9     		add	r1, sp, #44
 334 0142 5046     		mov	r0, r10
 335 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 336              	.LVL7:
1418:Core/Src/main.c **** 
1419:Core/Src/main.c ****   /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin
1420:Core/Src/main.c ****                            ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
1421:Core/Src/main.c ****   GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin
 337              		.loc 1 1421 3 view .LVU105
 338              		.loc 1 1421 23 is_stmt 0 view .LVU106
 339 0148 43F62343 		movw	r3, #15395
 340 014c 0B93     		str	r3, [sp, #44]
1422:Core/Src/main.c ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
1423:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 341              		.loc 1 1423 3 is_stmt 1 view .LVU107
 342              		.loc 1 1423 24 is_stmt 0 view .LVU108
 343 014e 0226     		movs	r6, #2
 344 0150 0C96     		str	r6, [sp, #48]
1424:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 345              		.loc 1 1424 3 is_stmt 1 view .LVU109
 346              		.loc 1 1424 24 is_stmt 0 view .LVU110
ARM GAS  /tmp/ccRZlU69.s 			page 32


 347 0152 0D94     		str	r4, [sp, #52]
1425:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 348              		.loc 1 1425 3 is_stmt 1 view .LVU111
 349              		.loc 1 1425 25 is_stmt 0 view .LVU112
 350 0154 0327     		movs	r7, #3
 351 0156 0E97     		str	r7, [sp, #56]
1426:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 352              		.loc 1 1426 3 is_stmt 1 view .LVU113
 353              		.loc 1 1426 29 is_stmt 0 view .LVU114
 354 0158 4FF00A09 		mov	r9, #10
 355 015c CDF83C90 		str	r9, [sp, #60]
1427:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 356              		.loc 1 1427 3 is_stmt 1 view .LVU115
 357 0160 0BA9     		add	r1, sp, #44
 358 0162 5046     		mov	r0, r10
 359 0164 FFF7FEFF 		bl	HAL_GPIO_Init
 360              	.LVL8:
1428:Core/Src/main.c **** 
1429:Core/Src/main.c ****   /*Configure GPIO pin : ARDUINO_SDA_D14_Pin */
1430:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_SDA_D14_Pin;
 361              		.loc 1 1430 3 view .LVU116
 362              		.loc 1 1430 23 is_stmt 0 view .LVU117
 363 0168 4FF40073 		mov	r3, #512
 364 016c 0B93     		str	r3, [sp, #44]
1431:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 365              		.loc 1 1431 3 is_stmt 1 view .LVU118
 366              		.loc 1 1431 24 is_stmt 0 view .LVU119
 367 016e 1223     		movs	r3, #18
 368 0170 0C93     		str	r3, [sp, #48]
1432:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 369              		.loc 1 1432 3 is_stmt 1 view .LVU120
 370              		.loc 1 1432 24 is_stmt 0 view .LVU121
 371 0172 0125     		movs	r5, #1
 372 0174 0D95     		str	r5, [sp, #52]
1433:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 373              		.loc 1 1433 3 is_stmt 1 view .LVU122
 374              		.loc 1 1433 25 is_stmt 0 view .LVU123
 375 0176 0E94     		str	r4, [sp, #56]
1434:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 376              		.loc 1 1434 3 is_stmt 1 view .LVU124
 377              		.loc 1 1434 29 is_stmt 0 view .LVU125
 378 0178 0423     		movs	r3, #4
 379 017a 0F93     		str	r3, [sp, #60]
1435:Core/Src/main.c ****   HAL_GPIO_Init(ARDUINO_SDA_D14_GPIO_Port, &GPIO_InitStruct);
 380              		.loc 1 1435 3 is_stmt 1 view .LVU126
 381 017c 0BA9     		add	r1, sp, #44
 382 017e 5046     		mov	r0, r10
 383 0180 FFF7FEFF 		bl	HAL_GPIO_Init
 384              	.LVL9:
1436:Core/Src/main.c **** 
1437:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_VBUS_Pin */
1438:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 385              		.loc 1 1438 3 view .LVU127
 386              		.loc 1 1438 23 is_stmt 0 view .LVU128
 387 0184 4FF48053 		mov	r3, #4096
 388 0188 0B93     		str	r3, [sp, #44]
1439:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
ARM GAS  /tmp/ccRZlU69.s 			page 33


 389              		.loc 1 1439 3 is_stmt 1 view .LVU129
 390              		.loc 1 1439 24 is_stmt 0 view .LVU130
 391 018a 0C94     		str	r4, [sp, #48]
1440:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 392              		.loc 1 1440 3 is_stmt 1 view .LVU131
 393              		.loc 1 1440 24 is_stmt 0 view .LVU132
 394 018c 0D94     		str	r4, [sp, #52]
1441:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 395              		.loc 1 1441 3 is_stmt 1 view .LVU133
 396 018e 0BA9     		add	r1, sp, #44
 397 0190 5248     		ldr	r0, .L6+24
 398 0192 FFF7FEFF 		bl	HAL_GPIO_Init
 399              	.LVL10:
1442:Core/Src/main.c **** 
1443:Core/Src/main.c ****   /*Configure GPIO pin : Audio_INT_Pin */
1444:Core/Src/main.c ****   GPIO_InitStruct.Pin = Audio_INT_Pin;
 400              		.loc 1 1444 3 view .LVU134
 401              		.loc 1 1444 23 is_stmt 0 view .LVU135
 402 0196 4023     		movs	r3, #64
 403 0198 0B93     		str	r3, [sp, #44]
1445:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 404              		.loc 1 1445 3 is_stmt 1 view .LVU136
 405              		.loc 1 1445 24 is_stmt 0 view .LVU137
 406 019a 4FF49013 		mov	r3, #1179648
 407 019e 0C93     		str	r3, [sp, #48]
1446:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 408              		.loc 1 1446 3 is_stmt 1 view .LVU138
 409              		.loc 1 1446 24 is_stmt 0 view .LVU139
 410 01a0 0D94     		str	r4, [sp, #52]
1447:Core/Src/main.c ****   HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 411              		.loc 1 1447 3 is_stmt 1 view .LVU140
 412 01a2 0BA9     		add	r1, sp, #44
 413 01a4 4848     		ldr	r0, .L6+4
 414 01a6 FFF7FEFF 		bl	HAL_GPIO_Init
 415              	.LVL11:
1448:Core/Src/main.c **** 
1449:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
1450:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 416              		.loc 1 1450 3 view .LVU141
 417              		.loc 1 1450 23 is_stmt 0 view .LVU142
 418 01aa 2023     		movs	r3, #32
 419 01ac 0B93     		str	r3, [sp, #44]
1451:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 420              		.loc 1 1451 3 is_stmt 1 view .LVU143
 421              		.loc 1 1451 24 is_stmt 0 view .LVU144
 422 01ae 0C95     		str	r5, [sp, #48]
1452:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 423              		.loc 1 1452 3 is_stmt 1 view .LVU145
 424              		.loc 1 1452 24 is_stmt 0 view .LVU146
 425 01b0 0D94     		str	r4, [sp, #52]
1453:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 426              		.loc 1 1453 3 is_stmt 1 view .LVU147
 427              		.loc 1 1453 25 is_stmt 0 view .LVU148
 428 01b2 0E94     		str	r4, [sp, #56]
1454:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 429              		.loc 1 1454 3 is_stmt 1 view .LVU149
 430 01b4 0BA9     		add	r1, sp, #44
ARM GAS  /tmp/ccRZlU69.s 			page 34


 431 01b6 4448     		ldr	r0, .L6+4
 432 01b8 FFF7FEFF 		bl	HAL_GPIO_Init
 433              	.LVL12:
1455:Core/Src/main.c **** 
1456:Core/Src/main.c ****   /*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
1457:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 434              		.loc 1 1457 3 view .LVU150
 435              		.loc 1 1457 23 is_stmt 0 view .LVU151
 436 01bc 41F20C03 		movw	r3, #4108
 437 01c0 0B93     		str	r3, [sp, #44]
1458:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 438              		.loc 1 1458 3 is_stmt 1 view .LVU152
 439              		.loc 1 1458 24 is_stmt 0 view .LVU153
 440 01c2 0C95     		str	r5, [sp, #48]
1459:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 441              		.loc 1 1459 3 is_stmt 1 view .LVU154
 442              		.loc 1 1459 24 is_stmt 0 view .LVU155
 443 01c4 0D94     		str	r4, [sp, #52]
1460:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 444              		.loc 1 1460 3 is_stmt 1 view .LVU156
 445              		.loc 1 1460 25 is_stmt 0 view .LVU157
 446 01c6 0E94     		str	r4, [sp, #56]
1461:Core/Src/main.c ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 447              		.loc 1 1461 3 is_stmt 1 view .LVU158
 448 01c8 0BA9     		add	r1, sp, #44
 449 01ca 4046     		mov	r0, r8
 450 01cc FFF7FEFF 		bl	HAL_GPIO_Init
 451              	.LVL13:
1462:Core/Src/main.c **** 
1463:Core/Src/main.c ****   /*Configure GPIO pin : uSD_Detect_Pin */
1464:Core/Src/main.c ****   GPIO_InitStruct.Pin = uSD_Detect_Pin;
 452              		.loc 1 1464 3 view .LVU159
 453              		.loc 1 1464 23 is_stmt 0 view .LVU160
 454 01d0 4FF40053 		mov	r3, #8192
 455 01d4 0B93     		str	r3, [sp, #44]
1465:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 456              		.loc 1 1465 3 is_stmt 1 view .LVU161
 457              		.loc 1 1465 24 is_stmt 0 view .LVU162
 458 01d6 0C94     		str	r4, [sp, #48]
1466:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 459              		.loc 1 1466 3 is_stmt 1 view .LVU163
 460              		.loc 1 1466 24 is_stmt 0 view .LVU164
 461 01d8 0D94     		str	r4, [sp, #52]
1467:Core/Src/main.c ****   HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 462              		.loc 1 1467 3 is_stmt 1 view .LVU165
 463 01da 0BA9     		add	r1, sp, #44
 464 01dc 4048     		ldr	r0, .L6+28
 465 01de FFF7FEFF 		bl	HAL_GPIO_Init
 466              	.LVL14:
1468:Core/Src/main.c **** 
1469:Core/Src/main.c ****   /*Configure GPIO pin : LCD_BL_CTRL_Pin */
1470:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 467              		.loc 1 1470 3 view .LVU166
 468              		.loc 1 1470 23 is_stmt 0 view .LVU167
 469 01e2 CDF82CB0 		str	fp, [sp, #44]
1471:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 470              		.loc 1 1471 3 is_stmt 1 view .LVU168
ARM GAS  /tmp/ccRZlU69.s 			page 35


 471              		.loc 1 1471 24 is_stmt 0 view .LVU169
 472 01e6 0C95     		str	r5, [sp, #48]
1472:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 473              		.loc 1 1472 3 is_stmt 1 view .LVU170
 474              		.loc 1 1472 24 is_stmt 0 view .LVU171
 475 01e8 0D94     		str	r4, [sp, #52]
1473:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 476              		.loc 1 1473 3 is_stmt 1 view .LVU172
 477              		.loc 1 1473 25 is_stmt 0 view .LVU173
 478 01ea 0E97     		str	r7, [sp, #56]
1474:Core/Src/main.c ****   HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 479              		.loc 1 1474 3 is_stmt 1 view .LVU174
 480 01ec 0BA9     		add	r1, sp, #44
 481 01ee 3748     		ldr	r0, .L6+8
 482 01f0 FFF7FEFF 		bl	HAL_GPIO_Init
 483              	.LVL15:
1475:Core/Src/main.c **** 
1476:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
1477:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 484              		.loc 1 1477 3 view .LVU175
 485              		.loc 1 1477 23 is_stmt 0 view .LVU176
 486 01f4 4FF0100B 		mov	fp, #16
 487 01f8 CDF82CB0 		str	fp, [sp, #44]
1478:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 488              		.loc 1 1478 3 is_stmt 1 view .LVU177
 489              		.loc 1 1478 24 is_stmt 0 view .LVU178
 490 01fc 0C94     		str	r4, [sp, #48]
1479:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 491              		.loc 1 1479 3 is_stmt 1 view .LVU179
 492              		.loc 1 1479 24 is_stmt 0 view .LVU180
 493 01fe 0D94     		str	r4, [sp, #52]
1480:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 494              		.loc 1 1480 3 is_stmt 1 view .LVU181
 495 0200 0BA9     		add	r1, sp, #44
 496 0202 3148     		ldr	r0, .L6+4
 497 0204 FFF7FEFF 		bl	HAL_GPIO_Init
 498              	.LVL16:
1481:Core/Src/main.c **** 
1482:Core/Src/main.c ****   /*Configure GPIO pins : TP3_Pin NC2_Pin */
1483:Core/Src/main.c ****   GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 499              		.loc 1 1483 3 view .LVU182
 500              		.loc 1 1483 23 is_stmt 0 view .LVU183
 501 0208 48F20403 		movw	r3, #32772
 502 020c 0B93     		str	r3, [sp, #44]
1484:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 503              		.loc 1 1484 3 is_stmt 1 view .LVU184
 504              		.loc 1 1484 24 is_stmt 0 view .LVU185
 505 020e 0C94     		str	r4, [sp, #48]
1485:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 506              		.loc 1 1485 3 is_stmt 1 view .LVU186
 507              		.loc 1 1485 24 is_stmt 0 view .LVU187
 508 0210 0D94     		str	r4, [sp, #52]
1486:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 509              		.loc 1 1486 3 is_stmt 1 view .LVU188
 510 0212 0BA9     		add	r1, sp, #44
 511 0214 2E48     		ldr	r0, .L6+12
 512 0216 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccRZlU69.s 			page 36


 513              	.LVL17:
1487:Core/Src/main.c **** 
1488:Core/Src/main.c ****   /*Configure GPIO pin : PI1 */
1489:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 514              		.loc 1 1489 3 view .LVU189
 515              		.loc 1 1489 23 is_stmt 0 view .LVU190
 516 021a 0B96     		str	r6, [sp, #44]
1490:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 517              		.loc 1 1490 3 is_stmt 1 view .LVU191
 518              		.loc 1 1490 24 is_stmt 0 view .LVU192
 519 021c 0C95     		str	r5, [sp, #48]
1491:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 520              		.loc 1 1491 3 is_stmt 1 view .LVU193
 521              		.loc 1 1491 24 is_stmt 0 view .LVU194
 522 021e 0D94     		str	r4, [sp, #52]
1492:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 523              		.loc 1 1492 3 is_stmt 1 view .LVU195
 524              		.loc 1 1492 25 is_stmt 0 view .LVU196
 525 0220 0E97     		str	r7, [sp, #56]
1493:Core/Src/main.c ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 526              		.loc 1 1493 3 is_stmt 1 view .LVU197
 527 0222 0BA9     		add	r1, sp, #44
 528 0224 4046     		mov	r0, r8
 529 0226 FFF7FEFF 		bl	HAL_GPIO_Init
 530              	.LVL18:
1494:Core/Src/main.c **** 
1495:Core/Src/main.c ****   /*Configure GPIO pin : DCMI_PWR_EN_Pin */
1496:Core/Src/main.c ****   GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 531              		.loc 1 1496 3 view .LVU198
 532              		.loc 1 1496 23 is_stmt 0 view .LVU199
 533 022a 4FF40053 		mov	r3, #8192
 534 022e 0B93     		str	r3, [sp, #44]
1497:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 535              		.loc 1 1497 3 is_stmt 1 view .LVU200
 536              		.loc 1 1497 24 is_stmt 0 view .LVU201
 537 0230 0C95     		str	r5, [sp, #48]
1498:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 538              		.loc 1 1498 3 is_stmt 1 view .LVU202
 539              		.loc 1 1498 24 is_stmt 0 view .LVU203
 540 0232 0D94     		str	r4, [sp, #52]
1499:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 541              		.loc 1 1499 3 is_stmt 1 view .LVU204
 542              		.loc 1 1499 25 is_stmt 0 view .LVU205
 543 0234 0E94     		str	r4, [sp, #56]
1500:Core/Src/main.c ****   HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 544              		.loc 1 1500 3 is_stmt 1 view .LVU206
 545 0236 0BA9     		add	r1, sp, #44
 546 0238 2548     		ldr	r0, .L6+12
 547 023a FFF7FEFF 		bl	HAL_GPIO_Init
 548              	.LVL19:
1501:Core/Src/main.c **** 
1502:Core/Src/main.c ****   /*Configure GPIO pin : LCD_INT_Pin */
1503:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 549              		.loc 1 1503 3 view .LVU207
 550              		.loc 1 1503 23 is_stmt 0 view .LVU208
 551 023e 4FF40053 		mov	r3, #8192
 552 0242 0B93     		str	r3, [sp, #44]
ARM GAS  /tmp/ccRZlU69.s 			page 37


1504:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 553              		.loc 1 1504 3 is_stmt 1 view .LVU209
 554              		.loc 1 1504 24 is_stmt 0 view .LVU210
 555 0244 4FF49013 		mov	r3, #1179648
 556 0248 0C93     		str	r3, [sp, #48]
1505:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 557              		.loc 1 1505 3 is_stmt 1 view .LVU211
 558              		.loc 1 1505 24 is_stmt 0 view .LVU212
 559 024a 0D94     		str	r4, [sp, #52]
1506:Core/Src/main.c ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 560              		.loc 1 1506 3 is_stmt 1 view .LVU213
 561 024c 0BA9     		add	r1, sp, #44
 562 024e 4046     		mov	r0, r8
 563 0250 FFF7FEFF 		bl	HAL_GPIO_Init
 564              	.LVL20:
1507:Core/Src/main.c **** 
1508:Core/Src/main.c ****   /*Configure GPIO pin : ULPI_NXT_Pin */
1509:Core/Src/main.c ****   GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 565              		.loc 1 1509 3 view .LVU214
 566              		.loc 1 1509 23 is_stmt 0 view .LVU215
 567 0254 CDF82CB0 		str	fp, [sp, #44]
1510:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 568              		.loc 1 1510 3 is_stmt 1 view .LVU216
 569              		.loc 1 1510 24 is_stmt 0 view .LVU217
 570 0258 0C96     		str	r6, [sp, #48]
1511:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 571              		.loc 1 1511 3 is_stmt 1 view .LVU218
 572              		.loc 1 1511 24 is_stmt 0 view .LVU219
 573 025a 0D94     		str	r4, [sp, #52]
1512:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 574              		.loc 1 1512 3 is_stmt 1 view .LVU220
 575              		.loc 1 1512 25 is_stmt 0 view .LVU221
 576 025c 0E97     		str	r7, [sp, #56]
1513:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 577              		.loc 1 1513 3 is_stmt 1 view .LVU222
 578              		.loc 1 1513 29 is_stmt 0 view .LVU223
 579 025e CDF83C90 		str	r9, [sp, #60]
1514:Core/Src/main.c ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 580              		.loc 1 1514 3 is_stmt 1 view .LVU224
 581 0262 0BA9     		add	r1, sp, #44
 582 0264 1A48     		ldr	r0, .L6+12
 583 0266 FFF7FEFF 		bl	HAL_GPIO_Init
 584              	.LVL21:
1515:Core/Src/main.c **** 
1516:Core/Src/main.c ****   /*Configure GPIO pins : PG7 ARDUINO_D2_Pin EXT_RST_Pin */
1517:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7|ARDUINO_D2_Pin|EXT_RST_Pin;
 585              		.loc 1 1517 3 view .LVU225
 586              		.loc 1 1517 23 is_stmt 0 view .LVU226
 587 026a C823     		movs	r3, #200
 588 026c 0B93     		str	r3, [sp, #44]
1518:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 589              		.loc 1 1518 3 is_stmt 1 view .LVU227
 590              		.loc 1 1518 24 is_stmt 0 view .LVU228
 591 026e 0C95     		str	r5, [sp, #48]
1519:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 592              		.loc 1 1519 3 is_stmt 1 view .LVU229
 593              		.loc 1 1519 24 is_stmt 0 view .LVU230
ARM GAS  /tmp/ccRZlU69.s 			page 38


 594 0270 0D94     		str	r4, [sp, #52]
1520:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 595              		.loc 1 1520 3 is_stmt 1 view .LVU231
 596              		.loc 1 1520 25 is_stmt 0 view .LVU232
 597 0272 0E94     		str	r4, [sp, #56]
1521:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 598              		.loc 1 1521 3 is_stmt 1 view .LVU233
 599 0274 0BA9     		add	r1, sp, #44
 600 0276 1748     		ldr	r0, .L6+16
 601 0278 FFF7FEFF 		bl	HAL_GPIO_Init
 602              	.LVL22:
1522:Core/Src/main.c **** 
1523:Core/Src/main.c ****   /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
1524:Core/Src/main.c ****   GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 603              		.loc 1 1524 3 view .LVU234
 604              		.loc 1 1524 23 is_stmt 0 view .LVU235
 605 027c 0525     		movs	r5, #5
 606 027e 0B95     		str	r5, [sp, #44]
1525:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 607              		.loc 1 1525 3 is_stmt 1 view .LVU236
 608              		.loc 1 1525 24 is_stmt 0 view .LVU237
 609 0280 0C96     		str	r6, [sp, #48]
1526:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 610              		.loc 1 1526 3 is_stmt 1 view .LVU238
 611              		.loc 1 1526 24 is_stmt 0 view .LVU239
 612 0282 0D94     		str	r4, [sp, #52]
1527:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 613              		.loc 1 1527 3 is_stmt 1 view .LVU240
 614              		.loc 1 1527 25 is_stmt 0 view .LVU241
 615 0284 0E97     		str	r7, [sp, #56]
1528:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 616              		.loc 1 1528 3 is_stmt 1 view .LVU242
 617              		.loc 1 1528 29 is_stmt 0 view .LVU243
 618 0286 CDF83C90 		str	r9, [sp, #60]
1529:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 619              		.loc 1 1529 3 is_stmt 1 view .LVU244
 620 028a 0BA9     		add	r1, sp, #44
 621 028c 1448     		ldr	r0, .L6+28
 622 028e FFF7FEFF 		bl	HAL_GPIO_Init
 623              	.LVL23:
1530:Core/Src/main.c **** 
1531:Core/Src/main.c ****   /*Configure GPIO pin : RMII_RXER_Pin */
1532:Core/Src/main.c ****   GPIO_InitStruct.Pin = RMII_RXER_Pin;
 624              		.loc 1 1532 3 view .LVU245
 625              		.loc 1 1532 23 is_stmt 0 view .LVU246
 626 0292 0423     		movs	r3, #4
 627 0294 0B93     		str	r3, [sp, #44]
1533:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 628              		.loc 1 1533 3 is_stmt 1 view .LVU247
 629              		.loc 1 1533 24 is_stmt 0 view .LVU248
 630 0296 0C94     		str	r4, [sp, #48]
1534:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 631              		.loc 1 1534 3 is_stmt 1 view .LVU249
 632              		.loc 1 1534 24 is_stmt 0 view .LVU250
 633 0298 0D94     		str	r4, [sp, #52]
1535:Core/Src/main.c ****   HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 634              		.loc 1 1535 3 is_stmt 1 view .LVU251
ARM GAS  /tmp/ccRZlU69.s 			page 39


 635 029a 0BA9     		add	r1, sp, #44
 636 029c 0D48     		ldr	r0, .L6+16
 637 029e FFF7FEFF 		bl	HAL_GPIO_Init
 638              	.LVL24:
1536:Core/Src/main.c **** 
1537:Core/Src/main.c ****   /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1538:Core/Src/main.c ****   GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 639              		.loc 1 1538 3 view .LVU252
 640              		.loc 1 1538 23 is_stmt 0 view .LVU253
 641 02a2 2823     		movs	r3, #40
 642 02a4 0B93     		str	r3, [sp, #44]
1539:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 643              		.loc 1 1539 3 is_stmt 1 view .LVU254
 644              		.loc 1 1539 24 is_stmt 0 view .LVU255
 645 02a6 0C96     		str	r6, [sp, #48]
1540:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 646              		.loc 1 1540 3 is_stmt 1 view .LVU256
 647              		.loc 1 1540 24 is_stmt 0 view .LVU257
 648 02a8 0D94     		str	r4, [sp, #52]
1541:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 649              		.loc 1 1541 3 is_stmt 1 view .LVU258
 650              		.loc 1 1541 25 is_stmt 0 view .LVU259
 651 02aa 0E97     		str	r7, [sp, #56]
1542:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 652              		.loc 1 1542 3 is_stmt 1 view .LVU260
 653              		.loc 1 1542 29 is_stmt 0 view .LVU261
 654 02ac CDF83C90 		str	r9, [sp, #60]
1543:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 655              		.loc 1 1543 3 is_stmt 1 view .LVU262
 656 02b0 0BA9     		add	r1, sp, #44
 657 02b2 0C48     		ldr	r0, .L6+32
 658 02b4 FFF7FEFF 		bl	HAL_GPIO_Init
 659              	.LVL25:
1544:Core/Src/main.c **** 
1545:Core/Src/main.c ****   /*Configure GPIO pins : ARDUINO_MISO_D12_Pin ARDUINO_MOSI_PWM_D11_Pin */
1546:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARDUINO_MISO_D12_Pin|ARDUINO_MOSI_PWM_D11_Pin;
 660              		.loc 1 1546 3 view .LVU263
 661              		.loc 1 1546 23 is_stmt 0 view .LVU264
 662 02b8 4FF44043 		mov	r3, #49152
 663 02bc 0B93     		str	r3, [sp, #44]
1547:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 664              		.loc 1 1547 3 is_stmt 1 view .LVU265
 665              		.loc 1 1547 24 is_stmt 0 view .LVU266
 666 02be 0C96     		str	r6, [sp, #48]
 667 02c0 16E0     		b	.L7
 668              	.L8:
 669 02c2 00BF     		.align	2
 670              	.L6:
 671 02c4 00380240 		.word	1073887232
 672 02c8 000C0240 		.word	1073875968
 673 02cc 00280240 		.word	1073883136
 674 02d0 001C0240 		.word	1073880064
 675 02d4 00180240 		.word	1073879040
 676 02d8 00100240 		.word	1073876992
 677 02dc 00240240 		.word	1073882112
 678 02e0 00080240 		.word	1073874944
 679 02e4 00000240 		.word	1073872896
ARM GAS  /tmp/ccRZlU69.s 			page 40


 680 02e8 00200240 		.word	1073881088
 681 02ec 00040240 		.word	1073873920
 682              	.L7:
1548:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 683              		.loc 1 1548 3 is_stmt 1 view .LVU267
 684              		.loc 1 1548 24 is_stmt 0 view .LVU268
 685 02f0 0D94     		str	r4, [sp, #52]
1549:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 686              		.loc 1 1549 3 is_stmt 1 view .LVU269
 687              		.loc 1 1549 25 is_stmt 0 view .LVU270
 688 02f2 0E94     		str	r4, [sp, #56]
1550:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 689              		.loc 1 1550 3 is_stmt 1 view .LVU271
 690              		.loc 1 1550 29 is_stmt 0 view .LVU272
 691 02f4 0F95     		str	r5, [sp, #60]
1551:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 692              		.loc 1 1551 3 is_stmt 1 view .LVU273
 693 02f6 0BA9     		add	r1, sp, #44
 694 02f8 5046     		mov	r0, r10
 695 02fa FFF7FEFF 		bl	HAL_GPIO_Init
 696              	.LVL26:
1552:Core/Src/main.c **** 
1553:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1554:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
1555:Core/Src/main.c **** }
 697              		.loc 1 1555 1 is_stmt 0 view .LVU274
 698 02fe 11B0     		add	sp, sp, #68
 699              	.LCFI2:
 700              		.cfi_def_cfa_offset 36
 701              		@ sp needed
 702 0300 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 703              		.cfi_endproc
 704              	.LFE165:
 706              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 707              		.align	1
 708              		.global	HAL_TIM_PeriodElapsedCallback
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 713              	HAL_TIM_PeriodElapsedCallback:
 714              	.LVL27:
 715              	.LFB166:
1556:Core/Src/main.c **** 
1557:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1558:Core/Src/main.c **** 
1559:Core/Src/main.c **** /* USER CODE END 4 */
1560:Core/Src/main.c **** 
1561:Core/Src/main.c **** /**
1562:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
1563:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
1564:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1565:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
1566:Core/Src/main.c ****   * @param  htim : TIM handle
1567:Core/Src/main.c ****   * @retval None
1568:Core/Src/main.c ****   */
1569:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1570:Core/Src/main.c **** {
ARM GAS  /tmp/ccRZlU69.s 			page 41


 716              		.loc 1 1570 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		.loc 1 1570 1 is_stmt 0 view .LVU276
 721 0000 08B5     		push	{r3, lr}
 722              	.LCFI3:
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 3, -8
 725              		.cfi_offset 14, -4
1571:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
1572:Core/Src/main.c **** 
1573:Core/Src/main.c ****   /* USER CODE END Callback 0 */
1574:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 726              		.loc 1 1574 3 is_stmt 1 view .LVU277
 727              		.loc 1 1574 11 is_stmt 0 view .LVU278
 728 0002 0268     		ldr	r2, [r0]
 729              		.loc 1 1574 6 view .LVU279
 730 0004 034B     		ldr	r3, .L13
 731 0006 9A42     		cmp	r2, r3
 732 0008 00D0     		beq	.L12
 733              	.LVL28:
 734              	.L9:
1575:Core/Src/main.c ****     HAL_IncTick();
1576:Core/Src/main.c ****   }
1577:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
1578:Core/Src/main.c **** 
1579:Core/Src/main.c ****   /* USER CODE END Callback 1 */
1580:Core/Src/main.c **** }
 735              		.loc 1 1580 1 view .LVU280
 736 000a 08BD     		pop	{r3, pc}
 737              	.LVL29:
 738              	.L12:
1575:Core/Src/main.c ****     HAL_IncTick();
 739              		.loc 1 1575 5 is_stmt 1 view .LVU281
 740 000c FFF7FEFF 		bl	HAL_IncTick
 741              	.LVL30:
 742              		.loc 1 1580 1 is_stmt 0 view .LVU282
 743 0010 FBE7     		b	.L9
 744              	.L14:
 745 0012 00BF     		.align	2
 746              	.L13:
 747 0014 00100040 		.word	1073745920
 748              		.cfi_endproc
 749              	.LFE166:
 751              		.section	.text.Error_Handler,"ax",%progbits
 752              		.align	1
 753              		.global	Error_Handler
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 758              	Error_Handler:
 759              	.LFB167:
1581:Core/Src/main.c **** 
1582:Core/Src/main.c **** /**
1583:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1584:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccRZlU69.s 			page 42


1585:Core/Src/main.c ****   */
1586:Core/Src/main.c **** void Error_Handler(void)
1587:Core/Src/main.c **** {
 760              		.loc 1 1587 1 is_stmt 1 view -0
 761              		.cfi_startproc
 762              		@ Volatile: function does not return.
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
1588:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1589:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1590:Core/Src/main.c ****   __disable_irq();
 766              		.loc 1 1590 3 view .LVU284
 767              	.LBB15:
 768              	.LBI15:
 769              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  /tmp/ccRZlU69.s 			page 43


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  /tmp/ccRZlU69.s 			page 44


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 770              		.loc 2 140 27 view .LVU285
 771              	.LBB16:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 772              		.loc 2 142 3 view .LVU286
 773              		.syntax unified
 774              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 775 0000 72B6     		cpsid i
 776              	@ 0 "" 2
 777              		.thumb
 778              		.syntax unified
 779              	.L16:
 780              	.LBE16:
 781              	.LBE15:
1591:Core/Src/main.c ****   while (1)
ARM GAS  /tmp/ccRZlU69.s 			page 45


 782              		.loc 1 1591 3 discriminator 1 view .LVU287
1592:Core/Src/main.c ****   {
1593:Core/Src/main.c ****   }
 783              		.loc 1 1593 3 discriminator 1 view .LVU288
1591:Core/Src/main.c ****   while (1)
 784              		.loc 1 1591 9 discriminator 1 view .LVU289
 785 0002 FEE7     		b	.L16
 786              		.cfi_endproc
 787              	.LFE167:
 789              		.section	.text.MX_ADC3_Init,"ax",%progbits
 790              		.align	1
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 795              	MX_ADC3_Init:
 796              	.LFB144:
 322:Core/Src/main.c **** 
 797              		.loc 1 322 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 16
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801 0000 00B5     		push	{lr}
 802              	.LCFI4:
 803              		.cfi_def_cfa_offset 4
 804              		.cfi_offset 14, -4
 805 0002 85B0     		sub	sp, sp, #20
 806              	.LCFI5:
 807              		.cfi_def_cfa_offset 24
 328:Core/Src/main.c **** 
 808              		.loc 1 328 3 view .LVU291
 328:Core/Src/main.c **** 
 809              		.loc 1 328 26 is_stmt 0 view .LVU292
 810 0004 0023     		movs	r3, #0
 811 0006 0093     		str	r3, [sp]
 812 0008 0193     		str	r3, [sp, #4]
 813 000a 0293     		str	r3, [sp, #8]
 814 000c 0393     		str	r3, [sp, #12]
 336:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 815              		.loc 1 336 3 is_stmt 1 view .LVU293
 336:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 816              		.loc 1 336 18 is_stmt 0 view .LVU294
 817 000e 1448     		ldr	r0, .L23
 818 0010 144A     		ldr	r2, .L23+4
 819 0012 0260     		str	r2, [r0]
 337:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 820              		.loc 1 337 3 is_stmt 1 view .LVU295
 337:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 821              		.loc 1 337 29 is_stmt 0 view .LVU296
 822 0014 4FF48032 		mov	r2, #65536
 823 0018 4260     		str	r2, [r0, #4]
 338:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 824              		.loc 1 338 3 is_stmt 1 view .LVU297
 338:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 825              		.loc 1 338 25 is_stmt 0 view .LVU298
 826 001a 8360     		str	r3, [r0, #8]
 339:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 827              		.loc 1 339 3 is_stmt 1 view .LVU299
ARM GAS  /tmp/ccRZlU69.s 			page 46


 339:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 828              		.loc 1 339 27 is_stmt 0 view .LVU300
 829 001c 0361     		str	r3, [r0, #16]
 340:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 830              		.loc 1 340 3 is_stmt 1 view .LVU301
 340:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 831              		.loc 1 340 33 is_stmt 0 view .LVU302
 832 001e 8361     		str	r3, [r0, #24]
 341:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 833              		.loc 1 341 3 is_stmt 1 view .LVU303
 341:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 834              		.loc 1 341 36 is_stmt 0 view .LVU304
 835 0020 80F82030 		strb	r3, [r0, #32]
 342:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 836              		.loc 1 342 3 is_stmt 1 view .LVU305
 342:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 837              		.loc 1 342 35 is_stmt 0 view .LVU306
 838 0024 C362     		str	r3, [r0, #44]
 343:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 839              		.loc 1 343 3 is_stmt 1 view .LVU307
 343:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 840              		.loc 1 343 31 is_stmt 0 view .LVU308
 841 0026 104A     		ldr	r2, .L23+8
 842 0028 8262     		str	r2, [r0, #40]
 344:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 843              		.loc 1 344 3 is_stmt 1 view .LVU309
 344:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 844              		.loc 1 344 24 is_stmt 0 view .LVU310
 845 002a C360     		str	r3, [r0, #12]
 345:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 846              		.loc 1 345 3 is_stmt 1 view .LVU311
 345:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 847              		.loc 1 345 30 is_stmt 0 view .LVU312
 848 002c 0122     		movs	r2, #1
 849 002e C261     		str	r2, [r0, #28]
 346:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 850              		.loc 1 346 3 is_stmt 1 view .LVU313
 346:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 851              		.loc 1 346 36 is_stmt 0 view .LVU314
 852 0030 80F83030 		strb	r3, [r0, #48]
 347:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 853              		.loc 1 347 3 is_stmt 1 view .LVU315
 347:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 854              		.loc 1 347 27 is_stmt 0 view .LVU316
 855 0034 4261     		str	r2, [r0, #20]
 348:Core/Src/main.c ****   {
 856              		.loc 1 348 3 is_stmt 1 view .LVU317
 348:Core/Src/main.c ****   {
 857              		.loc 1 348 7 is_stmt 0 view .LVU318
 858 0036 FFF7FEFF 		bl	HAL_ADC_Init
 859              	.LVL31:
 348:Core/Src/main.c ****   {
 860              		.loc 1 348 6 view .LVU319
 861 003a 68B9     		cbnz	r0, .L21
 355:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 862              		.loc 1 355 3 is_stmt 1 view .LVU320
 355:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
ARM GAS  /tmp/ccRZlU69.s 			page 47


 863              		.loc 1 355 19 is_stmt 0 view .LVU321
 864 003c 0423     		movs	r3, #4
 865 003e 0093     		str	r3, [sp]
 356:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 866              		.loc 1 356 3 is_stmt 1 view .LVU322
 356:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 867              		.loc 1 356 16 is_stmt 0 view .LVU323
 868 0040 0123     		movs	r3, #1
 869 0042 0193     		str	r3, [sp, #4]
 357:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 870              		.loc 1 357 3 is_stmt 1 view .LVU324
 357:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 871              		.loc 1 357 24 is_stmt 0 view .LVU325
 872 0044 0023     		movs	r3, #0
 873 0046 0293     		str	r3, [sp, #8]
 358:Core/Src/main.c ****   {
 874              		.loc 1 358 3 is_stmt 1 view .LVU326
 358:Core/Src/main.c ****   {
 875              		.loc 1 358 7 is_stmt 0 view .LVU327
 876 0048 6946     		mov	r1, sp
 877 004a 0548     		ldr	r0, .L23
 878 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 879              	.LVL32:
 358:Core/Src/main.c ****   {
 880              		.loc 1 358 6 view .LVU328
 881 0050 20B9     		cbnz	r0, .L22
 366:Core/Src/main.c **** 
 882              		.loc 1 366 1 view .LVU329
 883 0052 05B0     		add	sp, sp, #20
 884              	.LCFI6:
 885              		.cfi_remember_state
 886              		.cfi_def_cfa_offset 4
 887              		@ sp needed
 888 0054 5DF804FB 		ldr	pc, [sp], #4
 889              	.L21:
 890              	.LCFI7:
 891              		.cfi_restore_state
 350:Core/Src/main.c ****   }
 892              		.loc 1 350 5 is_stmt 1 view .LVU330
 893 0058 FFF7FEFF 		bl	Error_Handler
 894              	.LVL33:
 895              	.L22:
 360:Core/Src/main.c ****   }
 896              		.loc 1 360 5 view .LVU331
 897 005c FFF7FEFF 		bl	Error_Handler
 898              	.LVL34:
 899              	.L24:
 900              		.align	2
 901              	.L23:
 902 0060 00000000 		.word	hadc3
 903 0064 00220140 		.word	1073816064
 904 0068 0100000F 		.word	251658241
 905              		.cfi_endproc
 906              	.LFE144:
 908              		.section	.text.MX_CRC_Init,"ax",%progbits
 909              		.align	1
 910              		.syntax unified
ARM GAS  /tmp/ccRZlU69.s 			page 48


 911              		.thumb
 912              		.thumb_func
 914              	MX_CRC_Init:
 915              	.LFB145:
 374:Core/Src/main.c **** 
 916              		.loc 1 374 1 view -0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920 0000 08B5     		push	{r3, lr}
 921              	.LCFI8:
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 3, -8
 924              		.cfi_offset 14, -4
 383:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 925              		.loc 1 383 3 view .LVU333
 383:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 926              		.loc 1 383 17 is_stmt 0 view .LVU334
 927 0002 0848     		ldr	r0, .L29
 928 0004 084B     		ldr	r3, .L29+4
 929 0006 0360     		str	r3, [r0]
 384:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 930              		.loc 1 384 3 is_stmt 1 view .LVU335
 384:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 931              		.loc 1 384 34 is_stmt 0 view .LVU336
 932 0008 0023     		movs	r3, #0
 933 000a 0371     		strb	r3, [r0, #4]
 385:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 934              		.loc 1 385 3 is_stmt 1 view .LVU337
 385:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 935              		.loc 1 385 33 is_stmt 0 view .LVU338
 936 000c 4371     		strb	r3, [r0, #5]
 386:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 937              		.loc 1 386 3 is_stmt 1 view .LVU339
 386:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 938              		.loc 1 386 36 is_stmt 0 view .LVU340
 939 000e 4361     		str	r3, [r0, #20]
 387:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 940              		.loc 1 387 3 is_stmt 1 view .LVU341
 387:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 941              		.loc 1 387 37 is_stmt 0 view .LVU342
 942 0010 8361     		str	r3, [r0, #24]
 388:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 943              		.loc 1 388 3 is_stmt 1 view .LVU343
 388:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 944              		.loc 1 388 24 is_stmt 0 view .LVU344
 945 0012 0123     		movs	r3, #1
 946 0014 0362     		str	r3, [r0, #32]
 389:Core/Src/main.c ****   {
 947              		.loc 1 389 3 is_stmt 1 view .LVU345
 389:Core/Src/main.c ****   {
 948              		.loc 1 389 7 is_stmt 0 view .LVU346
 949 0016 FFF7FEFF 		bl	HAL_CRC_Init
 950              	.LVL35:
 389:Core/Src/main.c ****   {
 951              		.loc 1 389 6 view .LVU347
 952 001a 00B9     		cbnz	r0, .L28
ARM GAS  /tmp/ccRZlU69.s 			page 49


 397:Core/Src/main.c **** 
 953              		.loc 1 397 1 view .LVU348
 954 001c 08BD     		pop	{r3, pc}
 955              	.L28:
 391:Core/Src/main.c ****   }
 956              		.loc 1 391 5 is_stmt 1 view .LVU349
 957 001e FFF7FEFF 		bl	Error_Handler
 958              	.LVL36:
 959              	.L30:
 960 0022 00BF     		.align	2
 961              	.L29:
 962 0024 00000000 		.word	hcrc
 963 0028 00300240 		.word	1073885184
 964              		.cfi_endproc
 965              	.LFE145:
 967              		.section	.text.MX_DCMI_Init,"ax",%progbits
 968              		.align	1
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 973              	MX_DCMI_Init:
 974              	.LFB146:
 405:Core/Src/main.c **** 
 975              		.loc 1 405 1 view -0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 08B5     		push	{r3, lr}
 980              	.LCFI9:
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 3, -8
 983              		.cfi_offset 14, -4
 414:Core/Src/main.c ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 984              		.loc 1 414 3 view .LVU351
 414:Core/Src/main.c ****   hdcmi.Init.SynchroMode = DCMI_SYNCHRO_HARDWARE;
 985              		.loc 1 414 18 is_stmt 0 view .LVU352
 986 0002 0A48     		ldr	r0, .L35
 987 0004 0A4B     		ldr	r3, .L35+4
 988 0006 0360     		str	r3, [r0]
 415:Core/Src/main.c ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 989              		.loc 1 415 3 is_stmt 1 view .LVU353
 415:Core/Src/main.c ****   hdcmi.Init.PCKPolarity = DCMI_PCKPOLARITY_FALLING;
 990              		.loc 1 415 26 is_stmt 0 view .LVU354
 991 0008 0023     		movs	r3, #0
 992 000a 4360     		str	r3, [r0, #4]
 416:Core/Src/main.c ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 993              		.loc 1 416 3 is_stmt 1 view .LVU355
 416:Core/Src/main.c ****   hdcmi.Init.VSPolarity = DCMI_VSPOLARITY_LOW;
 994              		.loc 1 416 26 is_stmt 0 view .LVU356
 995 000c 8360     		str	r3, [r0, #8]
 417:Core/Src/main.c ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 996              		.loc 1 417 3 is_stmt 1 view .LVU357
 417:Core/Src/main.c ****   hdcmi.Init.HSPolarity = DCMI_HSPOLARITY_LOW;
 997              		.loc 1 417 25 is_stmt 0 view .LVU358
 998 000e C360     		str	r3, [r0, #12]
 418:Core/Src/main.c ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 999              		.loc 1 418 3 is_stmt 1 view .LVU359
ARM GAS  /tmp/ccRZlU69.s 			page 50


 418:Core/Src/main.c ****   hdcmi.Init.CaptureRate = DCMI_CR_ALL_FRAME;
 1000              		.loc 1 418 25 is_stmt 0 view .LVU360
 1001 0010 0361     		str	r3, [r0, #16]
 419:Core/Src/main.c ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 1002              		.loc 1 419 3 is_stmt 1 view .LVU361
 419:Core/Src/main.c ****   hdcmi.Init.ExtendedDataMode = DCMI_EXTEND_DATA_8B;
 1003              		.loc 1 419 26 is_stmt 0 view .LVU362
 1004 0012 4361     		str	r3, [r0, #20]
 420:Core/Src/main.c ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 1005              		.loc 1 420 3 is_stmt 1 view .LVU363
 420:Core/Src/main.c ****   hdcmi.Init.JPEGMode = DCMI_JPEG_DISABLE;
 1006              		.loc 1 420 31 is_stmt 0 view .LVU364
 1007 0014 8361     		str	r3, [r0, #24]
 421:Core/Src/main.c ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 1008              		.loc 1 421 3 is_stmt 1 view .LVU365
 421:Core/Src/main.c ****   hdcmi.Init.ByteSelectMode = DCMI_BSM_ALL;
 1009              		.loc 1 421 23 is_stmt 0 view .LVU366
 1010 0016 0362     		str	r3, [r0, #32]
 422:Core/Src/main.c ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 1011              		.loc 1 422 3 is_stmt 1 view .LVU367
 422:Core/Src/main.c ****   hdcmi.Init.ByteSelectStart = DCMI_OEBS_ODD;
 1012              		.loc 1 422 29 is_stmt 0 view .LVU368
 1013 0018 4362     		str	r3, [r0, #36]
 423:Core/Src/main.c ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 1014              		.loc 1 423 3 is_stmt 1 view .LVU369
 423:Core/Src/main.c ****   hdcmi.Init.LineSelectMode = DCMI_LSM_ALL;
 1015              		.loc 1 423 30 is_stmt 0 view .LVU370
 1016 001a 8362     		str	r3, [r0, #40]
 424:Core/Src/main.c ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 1017              		.loc 1 424 3 is_stmt 1 view .LVU371
 424:Core/Src/main.c ****   hdcmi.Init.LineSelectStart = DCMI_OELS_ODD;
 1018              		.loc 1 424 29 is_stmt 0 view .LVU372
 1019 001c C362     		str	r3, [r0, #44]
 425:Core/Src/main.c ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 1020              		.loc 1 425 3 is_stmt 1 view .LVU373
 425:Core/Src/main.c ****   if (HAL_DCMI_Init(&hdcmi) != HAL_OK)
 1021              		.loc 1 425 30 is_stmt 0 view .LVU374
 1022 001e 0363     		str	r3, [r0, #48]
 426:Core/Src/main.c ****   {
 1023              		.loc 1 426 3 is_stmt 1 view .LVU375
 426:Core/Src/main.c ****   {
 1024              		.loc 1 426 7 is_stmt 0 view .LVU376
 1025 0020 FFF7FEFF 		bl	HAL_DCMI_Init
 1026              	.LVL37:
 426:Core/Src/main.c ****   {
 1027              		.loc 1 426 6 view .LVU377
 1028 0024 00B9     		cbnz	r0, .L34
 434:Core/Src/main.c **** 
 1029              		.loc 1 434 1 view .LVU378
 1030 0026 08BD     		pop	{r3, pc}
 1031              	.L34:
 428:Core/Src/main.c ****   }
 1032              		.loc 1 428 5 is_stmt 1 view .LVU379
 1033 0028 FFF7FEFF 		bl	Error_Handler
 1034              	.LVL38:
 1035              	.L36:
 1036              		.align	2
ARM GAS  /tmp/ccRZlU69.s 			page 51


 1037              	.L35:
 1038 002c 00000000 		.word	hdcmi
 1039 0030 00000550 		.word	1342504960
 1040              		.cfi_endproc
 1041              	.LFE146:
 1043              		.section	.text.MX_DMA2D_Init,"ax",%progbits
 1044              		.align	1
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1049              	MX_DMA2D_Init:
 1050              	.LFB147:
 442:Core/Src/main.c **** 
 1051              		.loc 1 442 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055 0000 08B5     		push	{r3, lr}
 1056              	.LCFI10:
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 3, -8
 1059              		.cfi_offset 14, -4
 451:Core/Src/main.c ****   hdma2d.Init.Mode = DMA2D_M2M;
 1060              		.loc 1 451 3 view .LVU381
 451:Core/Src/main.c ****   hdma2d.Init.Mode = DMA2D_M2M;
 1061              		.loc 1 451 19 is_stmt 0 view .LVU382
 1062 0002 0C48     		ldr	r0, .L43
 1063 0004 0C4B     		ldr	r3, .L43+4
 1064 0006 0360     		str	r3, [r0]
 452:Core/Src/main.c ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 1065              		.loc 1 452 3 is_stmt 1 view .LVU383
 452:Core/Src/main.c ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 1066              		.loc 1 452 20 is_stmt 0 view .LVU384
 1067 0008 0023     		movs	r3, #0
 1068 000a 4360     		str	r3, [r0, #4]
 453:Core/Src/main.c ****   hdma2d.Init.OutputOffset = 0;
 1069              		.loc 1 453 3 is_stmt 1 view .LVU385
 453:Core/Src/main.c ****   hdma2d.Init.OutputOffset = 0;
 1070              		.loc 1 453 25 is_stmt 0 view .LVU386
 1071 000c 8360     		str	r3, [r0, #8]
 454:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
 1072              		.loc 1 454 3 is_stmt 1 view .LVU387
 454:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
 1073              		.loc 1 454 28 is_stmt 0 view .LVU388
 1074 000e C360     		str	r3, [r0, #12]
 455:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 1075              		.loc 1 455 3 is_stmt 1 view .LVU389
 455:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 1076              		.loc 1 455 34 is_stmt 0 view .LVU390
 1077 0010 8362     		str	r3, [r0, #40]
 456:Core/Src/main.c ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 1078              		.loc 1 456 3 is_stmt 1 view .LVU391
 456:Core/Src/main.c ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 1079              		.loc 1 456 37 is_stmt 0 view .LVU392
 1080 0012 C362     		str	r3, [r0, #44]
 457:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 1081              		.loc 1 457 3 is_stmt 1 view .LVU393
ARM GAS  /tmp/ccRZlU69.s 			page 52


 457:Core/Src/main.c ****   hdma2d.LayerCfg[1].InputAlpha = 0;
 1082              		.loc 1 457 32 is_stmt 0 view .LVU394
 1083 0014 0363     		str	r3, [r0, #48]
 458:Core/Src/main.c ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 1084              		.loc 1 458 3 is_stmt 1 view .LVU395
 458:Core/Src/main.c ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 1085              		.loc 1 458 33 is_stmt 0 view .LVU396
 1086 0016 4363     		str	r3, [r0, #52]
 459:Core/Src/main.c ****   {
 1087              		.loc 1 459 3 is_stmt 1 view .LVU397
 459:Core/Src/main.c ****   {
 1088              		.loc 1 459 7 is_stmt 0 view .LVU398
 1089 0018 FFF7FEFF 		bl	HAL_DMA2D_Init
 1090              	.LVL39:
 459:Core/Src/main.c ****   {
 1091              		.loc 1 459 6 view .LVU399
 1092 001c 28B9     		cbnz	r0, .L41
 463:Core/Src/main.c ****   {
 1093              		.loc 1 463 3 is_stmt 1 view .LVU400
 463:Core/Src/main.c ****   {
 1094              		.loc 1 463 7 is_stmt 0 view .LVU401
 1095 001e 0121     		movs	r1, #1
 1096 0020 0448     		ldr	r0, .L43
 1097 0022 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
 1098              	.LVL40:
 463:Core/Src/main.c ****   {
 1099              		.loc 1 463 6 view .LVU402
 1100 0026 10B9     		cbnz	r0, .L42
 471:Core/Src/main.c **** 
 1101              		.loc 1 471 1 view .LVU403
 1102 0028 08BD     		pop	{r3, pc}
 1103              	.L41:
 461:Core/Src/main.c ****   }
 1104              		.loc 1 461 5 is_stmt 1 view .LVU404
 1105 002a FFF7FEFF 		bl	Error_Handler
 1106              	.LVL41:
 1107              	.L42:
 465:Core/Src/main.c ****   }
 1108              		.loc 1 465 5 view .LVU405
 1109 002e FFF7FEFF 		bl	Error_Handler
 1110              	.LVL42:
 1111              	.L44:
 1112 0032 00BF     		.align	2
 1113              	.L43:
 1114 0034 00000000 		.word	hdma2d
 1115 0038 00B00240 		.word	1073917952
 1116              		.cfi_endproc
 1117              	.LFE147:
 1119              		.section	.text.MX_ETH_Init,"ax",%progbits
 1120              		.align	1
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1125              	MX_ETH_Init:
 1126              	.LFB148:
 479:Core/Src/main.c **** 
 1127              		.loc 1 479 1 view -0
ARM GAS  /tmp/ccRZlU69.s 			page 53


 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131 0000 10B5     		push	{r4, lr}
 1132              	.LCFI11:
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 4, -8
 1135              		.cfi_offset 14, -4
 485:Core/Src/main.c **** 
 1136              		.loc 1 485 4 view .LVU407
 490:Core/Src/main.c ****   MACAddr[0] = 0x00;
 1137              		.loc 1 490 3 view .LVU408
 490:Core/Src/main.c ****   MACAddr[0] = 0x00;
 1138              		.loc 1 490 17 is_stmt 0 view .LVU409
 1139 0002 1448     		ldr	r0, .L49
 1140 0004 144B     		ldr	r3, .L49+4
 1141 0006 0360     		str	r3, [r0]
 491:Core/Src/main.c ****   MACAddr[1] = 0x80;
 1142              		.loc 1 491 3 is_stmt 1 view .LVU410
 491:Core/Src/main.c ****   MACAddr[1] = 0x80;
 1143              		.loc 1 491 14 is_stmt 0 view .LVU411
 1144 0008 144B     		ldr	r3, .L49+8
 1145 000a 0022     		movs	r2, #0
 1146 000c 1A70     		strb	r2, [r3]
 492:Core/Src/main.c ****   MACAddr[2] = 0xE1;
 1147              		.loc 1 492 3 is_stmt 1 view .LVU412
 492:Core/Src/main.c ****   MACAddr[2] = 0xE1;
 1148              		.loc 1 492 14 is_stmt 0 view .LVU413
 1149 000e 8021     		movs	r1, #128
 1150 0010 5970     		strb	r1, [r3, #1]
 493:Core/Src/main.c ****   MACAddr[3] = 0x00;
 1151              		.loc 1 493 3 is_stmt 1 view .LVU414
 493:Core/Src/main.c ****   MACAddr[3] = 0x00;
 1152              		.loc 1 493 14 is_stmt 0 view .LVU415
 1153 0012 E121     		movs	r1, #225
 1154 0014 9970     		strb	r1, [r3, #2]
 494:Core/Src/main.c ****   MACAddr[4] = 0x00;
 1155              		.loc 1 494 3 is_stmt 1 view .LVU416
 494:Core/Src/main.c ****   MACAddr[4] = 0x00;
 1156              		.loc 1 494 14 is_stmt 0 view .LVU417
 1157 0016 DA70     		strb	r2, [r3, #3]
 495:Core/Src/main.c ****   MACAddr[5] = 0x00;
 1158              		.loc 1 495 3 is_stmt 1 view .LVU418
 495:Core/Src/main.c ****   MACAddr[5] = 0x00;
 1159              		.loc 1 495 14 is_stmt 0 view .LVU419
 1160 0018 1A71     		strb	r2, [r3, #4]
 496:Core/Src/main.c ****   heth.Init.MACAddr = &MACAddr[0];
 1161              		.loc 1 496 3 is_stmt 1 view .LVU420
 496:Core/Src/main.c ****   heth.Init.MACAddr = &MACAddr[0];
 1162              		.loc 1 496 14 is_stmt 0 view .LVU421
 1163 001a 5A71     		strb	r2, [r3, #5]
 497:Core/Src/main.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 1164              		.loc 1 497 3 is_stmt 1 view .LVU422
 497:Core/Src/main.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 1165              		.loc 1 497 21 is_stmt 0 view .LVU423
 1166 001c 4360     		str	r3, [r0, #4]
 498:Core/Src/main.c ****   heth.Init.TxDesc = DMATxDscrTab;
ARM GAS  /tmp/ccRZlU69.s 			page 54


 1167              		.loc 1 498 3 is_stmt 1 view .LVU424
 498:Core/Src/main.c ****   heth.Init.TxDesc = DMATxDscrTab;
 1168              		.loc 1 498 28 is_stmt 0 view .LVU425
 1169 001e 4FF40003 		mov	r3, #8388608
 1170 0022 8360     		str	r3, [r0, #8]
 499:Core/Src/main.c ****   heth.Init.RxDesc = DMARxDscrTab;
 1171              		.loc 1 499 3 is_stmt 1 view .LVU426
 499:Core/Src/main.c ****   heth.Init.RxDesc = DMARxDscrTab;
 1172              		.loc 1 499 20 is_stmt 0 view .LVU427
 1173 0024 0E4B     		ldr	r3, .L49+12
 1174 0026 C360     		str	r3, [r0, #12]
 500:Core/Src/main.c ****   heth.Init.RxBuffLen = 1524;
 1175              		.loc 1 500 3 is_stmt 1 view .LVU428
 500:Core/Src/main.c ****   heth.Init.RxBuffLen = 1524;
 1176              		.loc 1 500 20 is_stmt 0 view .LVU429
 1177 0028 0E4B     		ldr	r3, .L49+16
 1178 002a 0361     		str	r3, [r0, #16]
 501:Core/Src/main.c **** 
 1179              		.loc 1 501 3 is_stmt 1 view .LVU430
 501:Core/Src/main.c **** 
 1180              		.loc 1 501 23 is_stmt 0 view .LVU431
 1181 002c 40F2F453 		movw	r3, #1524
 1182 0030 4361     		str	r3, [r0, #20]
 507:Core/Src/main.c ****   {
 1183              		.loc 1 507 3 is_stmt 1 view .LVU432
 507:Core/Src/main.c ****   {
 1184              		.loc 1 507 7 is_stmt 0 view .LVU433
 1185 0032 FFF7FEFF 		bl	HAL_ETH_Init
 1186              	.LVL43:
 507:Core/Src/main.c ****   {
 1187              		.loc 1 507 6 view .LVU434
 1188 0036 58B9     		cbnz	r0, .L48
 512:Core/Src/main.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 1189              		.loc 1 512 3 is_stmt 1 view .LVU435
 1190 0038 0B4C     		ldr	r4, .L49+20
 1191 003a 3822     		movs	r2, #56
 1192 003c 0021     		movs	r1, #0
 1193 003e 2046     		mov	r0, r4
 1194 0040 FFF7FEFF 		bl	memset
 1195              	.LVL44:
 513:Core/Src/main.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 1196              		.loc 1 513 3 view .LVU436
 513:Core/Src/main.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 1197              		.loc 1 513 23 is_stmt 0 view .LVU437
 1198 0044 2123     		movs	r3, #33
 1199 0046 2360     		str	r3, [r4]
 514:Core/Src/main.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 1200              		.loc 1 514 3 is_stmt 1 view .LVU438
 514:Core/Src/main.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 1201              		.loc 1 514 25 is_stmt 0 view .LVU439
 1202 0048 4FF44003 		mov	r3, #12582912
 1203 004c 6361     		str	r3, [r4, #20]
 515:Core/Src/main.c ****   /* USER CODE BEGIN ETH_Init 2 */
 1204              		.loc 1 515 3 is_stmt 1 view .LVU440
 520:Core/Src/main.c **** 
 1205              		.loc 1 520 1 is_stmt 0 view .LVU441
 1206 004e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccRZlU69.s 			page 55


 1207              	.L48:
 509:Core/Src/main.c ****   }
 1208              		.loc 1 509 5 is_stmt 1 view .LVU442
 1209 0050 FFF7FEFF 		bl	Error_Handler
 1210              	.LVL45:
 1211              	.L50:
 1212              		.align	2
 1213              	.L49:
 1214 0054 00000000 		.word	heth
 1215 0058 00800240 		.word	1073905664
 1216 005c 00000000 		.word	MACAddr.0
 1217 0060 00000000 		.word	DMATxDscrTab
 1218 0064 00000000 		.word	DMARxDscrTab
 1219 0068 00000000 		.word	TxConfig
 1220              		.cfi_endproc
 1221              	.LFE148:
 1223              		.section	.text.MX_FMC_Init,"ax",%progbits
 1224              		.align	1
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1229              	MX_FMC_Init:
 1230              	.LFB164:
1320:Core/Src/main.c **** 
 1231              		.loc 1 1320 1 view -0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 32
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235 0000 00B5     		push	{lr}
 1236              	.LCFI12:
 1237              		.cfi_def_cfa_offset 4
 1238              		.cfi_offset 14, -4
 1239 0002 89B0     		sub	sp, sp, #36
 1240              	.LCFI13:
 1241              		.cfi_def_cfa_offset 40
1326:Core/Src/main.c **** 
 1242              		.loc 1 1326 3 view .LVU444
1326:Core/Src/main.c **** 
 1243              		.loc 1 1326 27 is_stmt 0 view .LVU445
 1244 0004 0023     		movs	r3, #0
 1245 0006 0193     		str	r3, [sp, #4]
 1246 0008 0293     		str	r3, [sp, #8]
 1247 000a 0393     		str	r3, [sp, #12]
 1248 000c 0493     		str	r3, [sp, #16]
 1249 000e 0593     		str	r3, [sp, #20]
 1250 0010 0693     		str	r3, [sp, #24]
 1251 0012 0793     		str	r3, [sp, #28]
1334:Core/Src/main.c ****   /* hsdram1.Init */
 1252              		.loc 1 1334 3 is_stmt 1 view .LVU446
1334:Core/Src/main.c ****   /* hsdram1.Init */
 1253              		.loc 1 1334 20 is_stmt 0 view .LVU447
 1254 0014 1448     		ldr	r0, .L55
 1255 0016 154A     		ldr	r2, .L55+4
 1256 0018 0260     		str	r2, [r0]
1336:Core/Src/main.c ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1257              		.loc 1 1336 3 is_stmt 1 view .LVU448
1336:Core/Src/main.c ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
ARM GAS  /tmp/ccRZlU69.s 			page 56


 1258              		.loc 1 1336 23 is_stmt 0 view .LVU449
 1259 001a 4360     		str	r3, [r0, #4]
1337:Core/Src/main.c ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1260              		.loc 1 1337 3 is_stmt 1 view .LVU450
1337:Core/Src/main.c ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 1261              		.loc 1 1337 33 is_stmt 0 view .LVU451
 1262 001c 8360     		str	r3, [r0, #8]
1338:Core/Src/main.c ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1263              		.loc 1 1338 3 is_stmt 1 view .LVU452
1338:Core/Src/main.c ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 1264              		.loc 1 1338 30 is_stmt 0 view .LVU453
 1265 001e 0421     		movs	r1, #4
 1266 0020 C160     		str	r1, [r0, #12]
1339:Core/Src/main.c ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1267              		.loc 1 1339 3 is_stmt 1 view .LVU454
1339:Core/Src/main.c ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1268              		.loc 1 1339 32 is_stmt 0 view .LVU455
 1269 0022 1022     		movs	r2, #16
 1270 0024 0261     		str	r2, [r0, #16]
1340:Core/Src/main.c ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 1271              		.loc 1 1340 3 is_stmt 1 view .LVU456
1340:Core/Src/main.c ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 1272              		.loc 1 1340 35 is_stmt 0 view .LVU457
 1273 0026 4022     		movs	r2, #64
 1274 0028 4261     		str	r2, [r0, #20]
1341:Core/Src/main.c ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1275              		.loc 1 1341 3 is_stmt 1 view .LVU458
1341:Core/Src/main.c ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1276              		.loc 1 1341 27 is_stmt 0 view .LVU459
 1277 002a 4FF4C072 		mov	r2, #384
 1278 002e 8261     		str	r2, [r0, #24]
1342:Core/Src/main.c ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1279              		.loc 1 1342 3 is_stmt 1 view .LVU460
1342:Core/Src/main.c ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 1280              		.loc 1 1342 32 is_stmt 0 view .LVU461
 1281 0030 C361     		str	r3, [r0, #28]
1343:Core/Src/main.c ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1282              		.loc 1 1343 3 is_stmt 1 view .LVU462
1343:Core/Src/main.c ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 1283              		.loc 1 1343 30 is_stmt 0 view .LVU463
 1284 0032 4FF40062 		mov	r2, #2048
 1285 0036 0262     		str	r2, [r0, #32]
1344:Core/Src/main.c ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1286              		.loc 1 1344 3 is_stmt 1 view .LVU464
1344:Core/Src/main.c ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1287              		.loc 1 1344 26 is_stmt 0 view .LVU465
 1288 0038 4FF48052 		mov	r2, #4096
 1289 003c 4262     		str	r2, [r0, #36]
1345:Core/Src/main.c ****   /* SdramTiming */
 1290              		.loc 1 1345 3 is_stmt 1 view .LVU466
1345:Core/Src/main.c ****   /* SdramTiming */
 1291              		.loc 1 1345 30 is_stmt 0 view .LVU467
 1292 003e 8362     		str	r3, [r0, #40]
1347:Core/Src/main.c ****   SdramTiming.ExitSelfRefreshDelay = 7;
 1293              		.loc 1 1347 3 is_stmt 1 view .LVU468
1347:Core/Src/main.c ****   SdramTiming.ExitSelfRefreshDelay = 7;
 1294              		.loc 1 1347 33 is_stmt 0 view .LVU469
ARM GAS  /tmp/ccRZlU69.s 			page 57


 1295 0040 0223     		movs	r3, #2
 1296 0042 0193     		str	r3, [sp, #4]
1348:Core/Src/main.c ****   SdramTiming.SelfRefreshTime = 4;
 1297              		.loc 1 1348 3 is_stmt 1 view .LVU470
1348:Core/Src/main.c ****   SdramTiming.SelfRefreshTime = 4;
 1298              		.loc 1 1348 36 is_stmt 0 view .LVU471
 1299 0044 0722     		movs	r2, #7
 1300 0046 0292     		str	r2, [sp, #8]
1349:Core/Src/main.c ****   SdramTiming.RowCycleDelay = 7;
 1301              		.loc 1 1349 3 is_stmt 1 view .LVU472
1349:Core/Src/main.c ****   SdramTiming.RowCycleDelay = 7;
 1302              		.loc 1 1349 31 is_stmt 0 view .LVU473
 1303 0048 0391     		str	r1, [sp, #12]
1350:Core/Src/main.c ****   SdramTiming.WriteRecoveryTime = 3;
 1304              		.loc 1 1350 3 is_stmt 1 view .LVU474
1350:Core/Src/main.c ****   SdramTiming.WriteRecoveryTime = 3;
 1305              		.loc 1 1350 29 is_stmt 0 view .LVU475
 1306 004a 0492     		str	r2, [sp, #16]
1351:Core/Src/main.c ****   SdramTiming.RPDelay = 2;
 1307              		.loc 1 1351 3 is_stmt 1 view .LVU476
1351:Core/Src/main.c ****   SdramTiming.RPDelay = 2;
 1308              		.loc 1 1351 33 is_stmt 0 view .LVU477
 1309 004c 0322     		movs	r2, #3
 1310 004e 0592     		str	r2, [sp, #20]
1352:Core/Src/main.c ****   SdramTiming.RCDDelay = 2;
 1311              		.loc 1 1352 3 is_stmt 1 view .LVU478
1352:Core/Src/main.c ****   SdramTiming.RCDDelay = 2;
 1312              		.loc 1 1352 23 is_stmt 0 view .LVU479
 1313 0050 0693     		str	r3, [sp, #24]
1353:Core/Src/main.c **** 
 1314              		.loc 1 1353 3 is_stmt 1 view .LVU480
1353:Core/Src/main.c **** 
 1315              		.loc 1 1353 24 is_stmt 0 view .LVU481
 1316 0052 0793     		str	r3, [sp, #28]
1355:Core/Src/main.c ****   {
 1317              		.loc 1 1355 3 is_stmt 1 view .LVU482
1355:Core/Src/main.c ****   {
 1318              		.loc 1 1355 7 is_stmt 0 view .LVU483
 1319 0054 6944     		add	r1, sp, r1
 1320 0056 FFF7FEFF 		bl	HAL_SDRAM_Init
 1321              	.LVL46:
1355:Core/Src/main.c ****   {
 1322              		.loc 1 1355 6 view .LVU484
 1323 005a 10B9     		cbnz	r0, .L54
1363:Core/Src/main.c **** 
 1324              		.loc 1 1363 1 view .LVU485
 1325 005c 09B0     		add	sp, sp, #36
 1326              	.LCFI14:
 1327              		.cfi_remember_state
 1328              		.cfi_def_cfa_offset 4
 1329              		@ sp needed
 1330 005e 5DF804FB 		ldr	pc, [sp], #4
 1331              	.L54:
 1332              	.LCFI15:
 1333              		.cfi_restore_state
1357:Core/Src/main.c ****   }
 1334              		.loc 1 1357 5 is_stmt 1 view .LVU486
ARM GAS  /tmp/ccRZlU69.s 			page 58


 1335 0062 FFF7FEFF 		bl	Error_Handler
 1336              	.LVL47:
 1337              	.L56:
 1338 0066 00BF     		.align	2
 1339              	.L55:
 1340 0068 00000000 		.word	hsdram1
 1341 006c 400100A0 		.word	-1610612416
 1342              		.cfi_endproc
 1343              	.LFE164:
 1345              		.section	.text.MX_I2C3_Init,"ax",%progbits
 1346              		.align	1
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1351              	MX_I2C3_Init:
 1352              	.LFB149:
 528:Core/Src/main.c **** 
 1353              		.loc 1 528 1 view -0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357 0000 08B5     		push	{r3, lr}
 1358              	.LCFI16:
 1359              		.cfi_def_cfa_offset 8
 1360              		.cfi_offset 3, -8
 1361              		.cfi_offset 14, -4
 537:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00C0EAFF;
 1362              		.loc 1 537 3 view .LVU488
 537:Core/Src/main.c ****   hi2c3.Init.Timing = 0x00C0EAFF;
 1363              		.loc 1 537 18 is_stmt 0 view .LVU489
 1364 0002 1148     		ldr	r0, .L65
 1365 0004 114B     		ldr	r3, .L65+4
 1366 0006 0360     		str	r3, [r0]
 538:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 1367              		.loc 1 538 3 is_stmt 1 view .LVU490
 538:Core/Src/main.c ****   hi2c3.Init.OwnAddress1 = 0;
 1368              		.loc 1 538 21 is_stmt 0 view .LVU491
 1369 0008 114B     		ldr	r3, .L65+8
 1370 000a 4360     		str	r3, [r0, #4]
 539:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1371              		.loc 1 539 3 is_stmt 1 view .LVU492
 539:Core/Src/main.c ****   hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1372              		.loc 1 539 26 is_stmt 0 view .LVU493
 1373 000c 0023     		movs	r3, #0
 1374 000e 8360     		str	r3, [r0, #8]
 540:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1375              		.loc 1 540 3 is_stmt 1 view .LVU494
 540:Core/Src/main.c ****   hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1376              		.loc 1 540 29 is_stmt 0 view .LVU495
 1377 0010 0122     		movs	r2, #1
 1378 0012 C260     		str	r2, [r0, #12]
 541:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 1379              		.loc 1 541 3 is_stmt 1 view .LVU496
 541:Core/Src/main.c ****   hi2c3.Init.OwnAddress2 = 0;
 1380              		.loc 1 541 30 is_stmt 0 view .LVU497
 1381 0014 0361     		str	r3, [r0, #16]
 542:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
ARM GAS  /tmp/ccRZlU69.s 			page 59


 1382              		.loc 1 542 3 is_stmt 1 view .LVU498
 542:Core/Src/main.c ****   hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1383              		.loc 1 542 26 is_stmt 0 view .LVU499
 1384 0016 4361     		str	r3, [r0, #20]
 543:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1385              		.loc 1 543 3 is_stmt 1 view .LVU500
 543:Core/Src/main.c ****   hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1386              		.loc 1 543 31 is_stmt 0 view .LVU501
 1387 0018 8361     		str	r3, [r0, #24]
 544:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1388              		.loc 1 544 3 is_stmt 1 view .LVU502
 544:Core/Src/main.c ****   hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1389              		.loc 1 544 30 is_stmt 0 view .LVU503
 1390 001a C361     		str	r3, [r0, #28]
 545:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1391              		.loc 1 545 3 is_stmt 1 view .LVU504
 545:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 1392              		.loc 1 545 28 is_stmt 0 view .LVU505
 1393 001c 0362     		str	r3, [r0, #32]
 546:Core/Src/main.c ****   {
 1394              		.loc 1 546 3 is_stmt 1 view .LVU506
 546:Core/Src/main.c ****   {
 1395              		.loc 1 546 7 is_stmt 0 view .LVU507
 1396 001e FFF7FEFF 		bl	HAL_I2C_Init
 1397              	.LVL48:
 546:Core/Src/main.c ****   {
 1398              		.loc 1 546 6 view .LVU508
 1399 0022 50B9     		cbnz	r0, .L62
 553:Core/Src/main.c ****   {
 1400              		.loc 1 553 3 is_stmt 1 view .LVU509
 553:Core/Src/main.c ****   {
 1401              		.loc 1 553 7 is_stmt 0 view .LVU510
 1402 0024 0021     		movs	r1, #0
 1403 0026 0848     		ldr	r0, .L65
 1404 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1405              	.LVL49:
 553:Core/Src/main.c ****   {
 1406              		.loc 1 553 6 view .LVU511
 1407 002c 38B9     		cbnz	r0, .L63
 560:Core/Src/main.c ****   {
 1408              		.loc 1 560 3 is_stmt 1 view .LVU512
 560:Core/Src/main.c ****   {
 1409              		.loc 1 560 7 is_stmt 0 view .LVU513
 1410 002e 0021     		movs	r1, #0
 1411 0030 0548     		ldr	r0, .L65
 1412 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1413              	.LVL50:
 560:Core/Src/main.c ****   {
 1414              		.loc 1 560 6 view .LVU514
 1415 0036 20B9     		cbnz	r0, .L64
 568:Core/Src/main.c **** 
 1416              		.loc 1 568 1 view .LVU515
 1417 0038 08BD     		pop	{r3, pc}
 1418              	.L62:
 548:Core/Src/main.c ****   }
 1419              		.loc 1 548 5 is_stmt 1 view .LVU516
 1420 003a FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccRZlU69.s 			page 60


 1421              	.LVL51:
 1422              	.L63:
 555:Core/Src/main.c ****   }
 1423              		.loc 1 555 5 view .LVU517
 1424 003e FFF7FEFF 		bl	Error_Handler
 1425              	.LVL52:
 1426              	.L64:
 562:Core/Src/main.c ****   }
 1427              		.loc 1 562 5 view .LVU518
 1428 0042 FFF7FEFF 		bl	Error_Handler
 1429              	.LVL53:
 1430              	.L66:
 1431 0046 00BF     		.align	2
 1432              	.L65:
 1433 0048 00000000 		.word	hi2c3
 1434 004c 005C0040 		.word	1073765376
 1435 0050 FFEAC000 		.word	12643071
 1436              		.cfi_endproc
 1437              	.LFE149:
 1439              		.section	.text.MX_LTDC_Init,"ax",%progbits
 1440              		.align	1
 1441              		.syntax unified
 1442              		.thumb
 1443              		.thumb_func
 1445              	MX_LTDC_Init:
 1446              	.LFB150:
 576:Core/Src/main.c **** 
 1447              		.loc 1 576 1 view -0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 56
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451 0000 00B5     		push	{lr}
 1452              	.LCFI17:
 1453              		.cfi_def_cfa_offset 4
 1454              		.cfi_offset 14, -4
 1455 0002 8FB0     		sub	sp, sp, #60
 1456              	.LCFI18:
 1457              		.cfi_def_cfa_offset 64
 582:Core/Src/main.c **** 
 1458              		.loc 1 582 3 view .LVU520
 582:Core/Src/main.c **** 
 1459              		.loc 1 582 24 is_stmt 0 view .LVU521
 1460 0004 3422     		movs	r2, #52
 1461 0006 0021     		movs	r1, #0
 1462 0008 01A8     		add	r0, sp, #4
 1463 000a FFF7FEFF 		bl	memset
 1464              	.LVL54:
 587:Core/Src/main.c ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 1465              		.loc 1 587 3 is_stmt 1 view .LVU522
 587:Core/Src/main.c ****   hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 1466              		.loc 1 587 18 is_stmt 0 view .LVU523
 1467 000e 2748     		ldr	r0, .L73
 1468 0010 274B     		ldr	r3, .L73+4
 1469 0012 0360     		str	r3, [r0]
 588:Core/Src/main.c ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 1470              		.loc 1 588 3 is_stmt 1 view .LVU524
 588:Core/Src/main.c ****   hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
ARM GAS  /tmp/ccRZlU69.s 			page 61


 1471              		.loc 1 588 25 is_stmt 0 view .LVU525
 1472 0014 0023     		movs	r3, #0
 1473 0016 4360     		str	r3, [r0, #4]
 589:Core/Src/main.c ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 1474              		.loc 1 589 3 is_stmt 1 view .LVU526
 589:Core/Src/main.c ****   hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 1475              		.loc 1 589 25 is_stmt 0 view .LVU527
 1476 0018 8360     		str	r3, [r0, #8]
 590:Core/Src/main.c ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 1477              		.loc 1 590 3 is_stmt 1 view .LVU528
 590:Core/Src/main.c ****   hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 1478              		.loc 1 590 25 is_stmt 0 view .LVU529
 1479 001a C360     		str	r3, [r0, #12]
 591:Core/Src/main.c ****   hltdc.Init.HorizontalSync = 40;
 1480              		.loc 1 591 3 is_stmt 1 view .LVU530
 591:Core/Src/main.c ****   hltdc.Init.HorizontalSync = 40;
 1481              		.loc 1 591 25 is_stmt 0 view .LVU531
 1482 001c 0361     		str	r3, [r0, #16]
 592:Core/Src/main.c ****   hltdc.Init.VerticalSync = 9;
 1483              		.loc 1 592 3 is_stmt 1 view .LVU532
 592:Core/Src/main.c ****   hltdc.Init.VerticalSync = 9;
 1484              		.loc 1 592 29 is_stmt 0 view .LVU533
 1485 001e 2822     		movs	r2, #40
 1486 0020 4261     		str	r2, [r0, #20]
 593:Core/Src/main.c ****   hltdc.Init.AccumulatedHBP = 53;
 1487              		.loc 1 593 3 is_stmt 1 view .LVU534
 593:Core/Src/main.c ****   hltdc.Init.AccumulatedHBP = 53;
 1488              		.loc 1 593 27 is_stmt 0 view .LVU535
 1489 0022 0922     		movs	r2, #9
 1490 0024 8261     		str	r2, [r0, #24]
 594:Core/Src/main.c ****   hltdc.Init.AccumulatedVBP = 11;
 1491              		.loc 1 594 3 is_stmt 1 view .LVU536
 594:Core/Src/main.c ****   hltdc.Init.AccumulatedVBP = 11;
 1492              		.loc 1 594 29 is_stmt 0 view .LVU537
 1493 0026 3522     		movs	r2, #53
 1494 0028 C261     		str	r2, [r0, #28]
 595:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveW = 533;
 1495              		.loc 1 595 3 is_stmt 1 view .LVU538
 595:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveW = 533;
 1496              		.loc 1 595 29 is_stmt 0 view .LVU539
 1497 002a 0B22     		movs	r2, #11
 1498 002c 0262     		str	r2, [r0, #32]
 596:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveH = 283;
 1499              		.loc 1 596 3 is_stmt 1 view .LVU540
 596:Core/Src/main.c ****   hltdc.Init.AccumulatedActiveH = 283;
 1500              		.loc 1 596 33 is_stmt 0 view .LVU541
 1501 002e 40F21522 		movw	r2, #533
 1502 0032 4262     		str	r2, [r0, #36]
 597:Core/Src/main.c ****   hltdc.Init.TotalWidth = 565;
 1503              		.loc 1 597 3 is_stmt 1 view .LVU542
 597:Core/Src/main.c ****   hltdc.Init.TotalWidth = 565;
 1504              		.loc 1 597 33 is_stmt 0 view .LVU543
 1505 0034 40F21B12 		movw	r2, #283
 1506 0038 8262     		str	r2, [r0, #40]
 598:Core/Src/main.c ****   hltdc.Init.TotalHeigh = 285;
 1507              		.loc 1 598 3 is_stmt 1 view .LVU544
 598:Core/Src/main.c ****   hltdc.Init.TotalHeigh = 285;
ARM GAS  /tmp/ccRZlU69.s 			page 62


 1508              		.loc 1 598 25 is_stmt 0 view .LVU545
 1509 003a 40F23522 		movw	r2, #565
 1510 003e C262     		str	r2, [r0, #44]
 599:Core/Src/main.c ****   hltdc.Init.Backcolor.Blue = 0;
 1511              		.loc 1 599 3 is_stmt 1 view .LVU546
 599:Core/Src/main.c ****   hltdc.Init.Backcolor.Blue = 0;
 1512              		.loc 1 599 25 is_stmt 0 view .LVU547
 1513 0040 40F21D12 		movw	r2, #285
 1514 0044 0263     		str	r2, [r0, #48]
 600:Core/Src/main.c ****   hltdc.Init.Backcolor.Green = 0;
 1515              		.loc 1 600 3 is_stmt 1 view .LVU548
 600:Core/Src/main.c ****   hltdc.Init.Backcolor.Green = 0;
 1516              		.loc 1 600 29 is_stmt 0 view .LVU549
 1517 0046 80F83430 		strb	r3, [r0, #52]
 601:Core/Src/main.c ****   hltdc.Init.Backcolor.Red = 0;
 1518              		.loc 1 601 3 is_stmt 1 view .LVU550
 601:Core/Src/main.c ****   hltdc.Init.Backcolor.Red = 0;
 1519              		.loc 1 601 30 is_stmt 0 view .LVU551
 1520 004a 80F83530 		strb	r3, [r0, #53]
 602:Core/Src/main.c ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 1521              		.loc 1 602 3 is_stmt 1 view .LVU552
 602:Core/Src/main.c ****   if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 1522              		.loc 1 602 28 is_stmt 0 view .LVU553
 1523 004e 80F83630 		strb	r3, [r0, #54]
 603:Core/Src/main.c ****   {
 1524              		.loc 1 603 3 is_stmt 1 view .LVU554
 603:Core/Src/main.c ****   {
 1525              		.loc 1 603 7 is_stmt 0 view .LVU555
 1526 0052 FFF7FEFF 		bl	HAL_LTDC_Init
 1527              	.LVL55:
 603:Core/Src/main.c ****   {
 1528              		.loc 1 603 6 view .LVU556
 1529 0056 28BB     		cbnz	r0, .L71
 607:Core/Src/main.c ****   pLayerCfg.WindowX1 = 480;
 1530              		.loc 1 607 3 is_stmt 1 view .LVU557
 607:Core/Src/main.c ****   pLayerCfg.WindowX1 = 480;
 1531              		.loc 1 607 22 is_stmt 0 view .LVU558
 1532 0058 0022     		movs	r2, #0
 1533 005a 0192     		str	r2, [sp, #4]
 608:Core/Src/main.c ****   pLayerCfg.WindowY0 = 0;
 1534              		.loc 1 608 3 is_stmt 1 view .LVU559
 608:Core/Src/main.c ****   pLayerCfg.WindowY0 = 0;
 1535              		.loc 1 608 22 is_stmt 0 view .LVU560
 1536 005c 4FF4F071 		mov	r1, #480
 1537 0060 0291     		str	r1, [sp, #8]
 609:Core/Src/main.c ****   pLayerCfg.WindowY1 = 272;
 1538              		.loc 1 609 3 is_stmt 1 view .LVU561
 609:Core/Src/main.c ****   pLayerCfg.WindowY1 = 272;
 1539              		.loc 1 609 22 is_stmt 0 view .LVU562
 1540 0062 0392     		str	r2, [sp, #12]
 610:Core/Src/main.c ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 1541              		.loc 1 610 3 is_stmt 1 view .LVU563
 610:Core/Src/main.c ****   pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 1542              		.loc 1 610 22 is_stmt 0 view .LVU564
 1543 0064 4FF48873 		mov	r3, #272
 1544 0068 0493     		str	r3, [sp, #16]
 611:Core/Src/main.c ****   pLayerCfg.Alpha = 255;
ARM GAS  /tmp/ccRZlU69.s 			page 63


 1545              		.loc 1 611 3 is_stmt 1 view .LVU565
 611:Core/Src/main.c ****   pLayerCfg.Alpha = 255;
 1546              		.loc 1 611 25 is_stmt 0 view .LVU566
 1547 006a 0220     		movs	r0, #2
 1548 006c 0590     		str	r0, [sp, #20]
 612:Core/Src/main.c ****   pLayerCfg.Alpha0 = 0;
 1549              		.loc 1 612 3 is_stmt 1 view .LVU567
 612:Core/Src/main.c ****   pLayerCfg.Alpha0 = 0;
 1550              		.loc 1 612 19 is_stmt 0 view .LVU568
 1551 006e FF20     		movs	r0, #255
 1552 0070 0690     		str	r0, [sp, #24]
 613:Core/Src/main.c ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 1553              		.loc 1 613 3 is_stmt 1 view .LVU569
 613:Core/Src/main.c ****   pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 1554              		.loc 1 613 20 is_stmt 0 view .LVU570
 1555 0072 0792     		str	r2, [sp, #28]
 614:Core/Src/main.c ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 1556              		.loc 1 614 3 is_stmt 1 view .LVU571
 614:Core/Src/main.c ****   pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 1557              		.loc 1 614 29 is_stmt 0 view .LVU572
 1558 0074 4FF4C060 		mov	r0, #1536
 1559 0078 0890     		str	r0, [sp, #32]
 615:Core/Src/main.c ****   pLayerCfg.FBStartAdress = 0xC0000000;
 1560              		.loc 1 615 3 is_stmt 1 view .LVU573
 615:Core/Src/main.c ****   pLayerCfg.FBStartAdress = 0xC0000000;
 1561              		.loc 1 615 29 is_stmt 0 view .LVU574
 1562 007a 0720     		movs	r0, #7
 1563 007c 0990     		str	r0, [sp, #36]
 616:Core/Src/main.c ****   pLayerCfg.ImageWidth = 480;
 1564              		.loc 1 616 3 is_stmt 1 view .LVU575
 616:Core/Src/main.c ****   pLayerCfg.ImageWidth = 480;
 1565              		.loc 1 616 27 is_stmt 0 view .LVU576
 1566 007e 4FF04040 		mov	r0, #-1073741824
 1567 0082 0A90     		str	r0, [sp, #40]
 617:Core/Src/main.c ****   pLayerCfg.ImageHeight = 272;
 1568              		.loc 1 617 3 is_stmt 1 view .LVU577
 617:Core/Src/main.c ****   pLayerCfg.ImageHeight = 272;
 1569              		.loc 1 617 24 is_stmt 0 view .LVU578
 1570 0084 0B91     		str	r1, [sp, #44]
 618:Core/Src/main.c ****   pLayerCfg.Backcolor.Blue = 0;
 1571              		.loc 1 618 3 is_stmt 1 view .LVU579
 618:Core/Src/main.c ****   pLayerCfg.Backcolor.Blue = 0;
 1572              		.loc 1 618 25 is_stmt 0 view .LVU580
 1573 0086 0C93     		str	r3, [sp, #48]
 619:Core/Src/main.c ****   pLayerCfg.Backcolor.Green = 0;
 1574              		.loc 1 619 3 is_stmt 1 view .LVU581
 619:Core/Src/main.c ****   pLayerCfg.Backcolor.Green = 0;
 1575              		.loc 1 619 28 is_stmt 0 view .LVU582
 1576 0088 8DF83420 		strb	r2, [sp, #52]
 620:Core/Src/main.c ****   pLayerCfg.Backcolor.Red = 0;
 1577              		.loc 1 620 3 is_stmt 1 view .LVU583
 620:Core/Src/main.c ****   pLayerCfg.Backcolor.Red = 0;
 1578              		.loc 1 620 29 is_stmt 0 view .LVU584
 1579 008c 8DF83520 		strb	r2, [sp, #53]
 621:Core/Src/main.c ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 1580              		.loc 1 621 3 is_stmt 1 view .LVU585
 621:Core/Src/main.c ****   if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
ARM GAS  /tmp/ccRZlU69.s 			page 64


 1581              		.loc 1 621 27 is_stmt 0 view .LVU586
 1582 0090 8DF83620 		strb	r2, [sp, #54]
 622:Core/Src/main.c ****   {
 1583              		.loc 1 622 3 is_stmt 1 view .LVU587
 622:Core/Src/main.c ****   {
 1584              		.loc 1 622 7 is_stmt 0 view .LVU588
 1585 0094 01A9     		add	r1, sp, #4
 1586 0096 0548     		ldr	r0, .L73
 1587 0098 FFF7FEFF 		bl	HAL_LTDC_ConfigLayer
 1588              	.LVL56:
 622:Core/Src/main.c ****   {
 1589              		.loc 1 622 6 view .LVU589
 1590 009c 20B9     		cbnz	r0, .L72
 630:Core/Src/main.c **** 
 1591              		.loc 1 630 1 view .LVU590
 1592 009e 0FB0     		add	sp, sp, #60
 1593              	.LCFI19:
 1594              		.cfi_remember_state
 1595              		.cfi_def_cfa_offset 4
 1596              		@ sp needed
 1597 00a0 5DF804FB 		ldr	pc, [sp], #4
 1598              	.L71:
 1599              	.LCFI20:
 1600              		.cfi_restore_state
 605:Core/Src/main.c ****   }
 1601              		.loc 1 605 5 is_stmt 1 view .LVU591
 1602 00a4 FFF7FEFF 		bl	Error_Handler
 1603              	.LVL57:
 1604              	.L72:
 624:Core/Src/main.c ****   }
 1605              		.loc 1 624 5 view .LVU592
 1606 00a8 FFF7FEFF 		bl	Error_Handler
 1607              	.LVL58:
 1608              	.L74:
 1609              		.align	2
 1610              	.L73:
 1611 00ac 00000000 		.word	hltdc
 1612 00b0 00680140 		.word	1073833984
 1613              		.cfi_endproc
 1614              	.LFE150:
 1616              		.section	.text.MX_QUADSPI_Init,"ax",%progbits
 1617              		.align	1
 1618              		.syntax unified
 1619              		.thumb
 1620              		.thumb_func
 1622              	MX_QUADSPI_Init:
 1623              	.LFB151:
 638:Core/Src/main.c **** 
 1624              		.loc 1 638 1 view -0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628 0000 08B5     		push	{r3, lr}
 1629              	.LCFI21:
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 3, -8
 1632              		.cfi_offset 14, -4
ARM GAS  /tmp/ccRZlU69.s 			page 65


 648:Core/Src/main.c ****   hqspi.Init.ClockPrescaler = 1;
 1633              		.loc 1 648 3 view .LVU594
 648:Core/Src/main.c ****   hqspi.Init.ClockPrescaler = 1;
 1634              		.loc 1 648 18 is_stmt 0 view .LVU595
 1635 0002 0C48     		ldr	r0, .L79
 1636 0004 0C4B     		ldr	r3, .L79+4
 1637 0006 0360     		str	r3, [r0]
 649:Core/Src/main.c ****   hqspi.Init.FifoThreshold = 4;
 1638              		.loc 1 649 3 is_stmt 1 view .LVU596
 649:Core/Src/main.c ****   hqspi.Init.FifoThreshold = 4;
 1639              		.loc 1 649 29 is_stmt 0 view .LVU597
 1640 0008 0123     		movs	r3, #1
 1641 000a 4360     		str	r3, [r0, #4]
 650:Core/Src/main.c ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 1642              		.loc 1 650 3 is_stmt 1 view .LVU598
 650:Core/Src/main.c ****   hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 1643              		.loc 1 650 28 is_stmt 0 view .LVU599
 1644 000c 0423     		movs	r3, #4
 1645 000e 8360     		str	r3, [r0, #8]
 651:Core/Src/main.c ****   hqspi.Init.FlashSize = 24;
 1646              		.loc 1 651 3 is_stmt 1 view .LVU600
 651:Core/Src/main.c ****   hqspi.Init.FlashSize = 24;
 1647              		.loc 1 651 29 is_stmt 0 view .LVU601
 1648 0010 1023     		movs	r3, #16
 1649 0012 C360     		str	r3, [r0, #12]
 652:Core/Src/main.c ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 1650              		.loc 1 652 3 is_stmt 1 view .LVU602
 652:Core/Src/main.c ****   hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 1651              		.loc 1 652 24 is_stmt 0 view .LVU603
 1652 0014 1823     		movs	r3, #24
 1653 0016 0361     		str	r3, [r0, #16]
 653:Core/Src/main.c ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1654              		.loc 1 653 3 is_stmt 1 view .LVU604
 653:Core/Src/main.c ****   hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 1655              		.loc 1 653 33 is_stmt 0 view .LVU605
 1656 0018 4FF4A063 		mov	r3, #1280
 1657 001c 4361     		str	r3, [r0, #20]
 654:Core/Src/main.c ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1658              		.loc 1 654 3 is_stmt 1 view .LVU606
 654:Core/Src/main.c ****   hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 1659              		.loc 1 654 24 is_stmt 0 view .LVU607
 1660 001e 0023     		movs	r3, #0
 1661 0020 8361     		str	r3, [r0, #24]
 655:Core/Src/main.c ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1662              		.loc 1 655 3 is_stmt 1 view .LVU608
 655:Core/Src/main.c ****   hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 1663              		.loc 1 655 22 is_stmt 0 view .LVU609
 1664 0022 C361     		str	r3, [r0, #28]
 656:Core/Src/main.c ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 1665              		.loc 1 656 3 is_stmt 1 view .LVU610
 656:Core/Src/main.c ****   if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 1666              		.loc 1 656 24 is_stmt 0 view .LVU611
 1667 0024 0362     		str	r3, [r0, #32]
 657:Core/Src/main.c ****   {
 1668              		.loc 1 657 3 is_stmt 1 view .LVU612
 657:Core/Src/main.c ****   {
 1669              		.loc 1 657 7 is_stmt 0 view .LVU613
ARM GAS  /tmp/ccRZlU69.s 			page 66


 1670 0026 FFF7FEFF 		bl	HAL_QSPI_Init
 1671              	.LVL59:
 657:Core/Src/main.c ****   {
 1672              		.loc 1 657 6 view .LVU614
 1673 002a 00B9     		cbnz	r0, .L78
 665:Core/Src/main.c **** 
 1674              		.loc 1 665 1 view .LVU615
 1675 002c 08BD     		pop	{r3, pc}
 1676              	.L78:
 659:Core/Src/main.c ****   }
 1677              		.loc 1 659 5 is_stmt 1 view .LVU616
 1678 002e FFF7FEFF 		bl	Error_Handler
 1679              	.LVL60:
 1680              	.L80:
 1681 0032 00BF     		.align	2
 1682              	.L79:
 1683 0034 00000000 		.word	hqspi
 1684 0038 001000A0 		.word	-1610608640
 1685              		.cfi_endproc
 1686              	.LFE151:
 1688              		.section	.text.MX_RTC_Init,"ax",%progbits
 1689              		.align	1
 1690              		.syntax unified
 1691              		.thumb
 1692              		.thumb_func
 1694              	MX_RTC_Init:
 1695              	.LFB152:
 673:Core/Src/main.c **** 
 1696              		.loc 1 673 1 view -0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 64
 1699              		@ frame_needed = 0, uses_anonymous_args = 0
 1700 0000 10B5     		push	{r4, lr}
 1701              	.LCFI22:
 1702              		.cfi_def_cfa_offset 8
 1703              		.cfi_offset 4, -8
 1704              		.cfi_offset 14, -4
 1705 0002 90B0     		sub	sp, sp, #64
 1706              	.LCFI23:
 1707              		.cfi_def_cfa_offset 72
 679:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1708              		.loc 1 679 3 view .LVU618
 679:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1709              		.loc 1 679 19 is_stmt 0 view .LVU619
 1710 0004 0024     		movs	r4, #0
 1711 0006 0B94     		str	r4, [sp, #44]
 1712 0008 0C94     		str	r4, [sp, #48]
 1713 000a 0D94     		str	r4, [sp, #52]
 1714 000c 0E94     		str	r4, [sp, #56]
 1715 000e 0F94     		str	r4, [sp, #60]
 680:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 1716              		.loc 1 680 3 is_stmt 1 view .LVU620
 680:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 1717              		.loc 1 680 19 is_stmt 0 view .LVU621
 1718 0010 0A94     		str	r4, [sp, #40]
 681:Core/Src/main.c **** 
 1719              		.loc 1 681 3 is_stmt 1 view .LVU622
ARM GAS  /tmp/ccRZlU69.s 			page 67


 681:Core/Src/main.c **** 
 1720              		.loc 1 681 20 is_stmt 0 view .LVU623
 1721 0012 2822     		movs	r2, #40
 1722 0014 2146     		mov	r1, r4
 1723 0016 6846     		mov	r0, sp
 1724 0018 FFF7FEFF 		bl	memset
 1725              	.LVL61:
 689:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1726              		.loc 1 689 3 is_stmt 1 view .LVU624
 689:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1727              		.loc 1 689 17 is_stmt 0 view .LVU625
 1728 001c 3148     		ldr	r0, .L95
 1729 001e 324B     		ldr	r3, .L95+4
 1730 0020 0360     		str	r3, [r0]
 690:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1731              		.loc 1 690 3 is_stmt 1 view .LVU626
 690:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1732              		.loc 1 690 24 is_stmt 0 view .LVU627
 1733 0022 4460     		str	r4, [r0, #4]
 691:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1734              		.loc 1 691 3 is_stmt 1 view .LVU628
 691:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1735              		.loc 1 691 26 is_stmt 0 view .LVU629
 1736 0024 7F23     		movs	r3, #127
 1737 0026 8360     		str	r3, [r0, #8]
 692:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1738              		.loc 1 692 3 is_stmt 1 view .LVU630
 692:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1739              		.loc 1 692 25 is_stmt 0 view .LVU631
 1740 0028 FF23     		movs	r3, #255
 1741 002a C360     		str	r3, [r0, #12]
 693:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1742              		.loc 1 693 3 is_stmt 1 view .LVU632
 693:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1743              		.loc 1 693 20 is_stmt 0 view .LVU633
 1744 002c 0461     		str	r4, [r0, #16]
 694:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1745              		.loc 1 694 3 is_stmt 1 view .LVU634
 694:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1746              		.loc 1 694 28 is_stmt 0 view .LVU635
 1747 002e 4461     		str	r4, [r0, #20]
 695:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1748              		.loc 1 695 3 is_stmt 1 view .LVU636
 695:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1749              		.loc 1 695 24 is_stmt 0 view .LVU637
 1750 0030 8461     		str	r4, [r0, #24]
 696:Core/Src/main.c ****   {
 1751              		.loc 1 696 3 is_stmt 1 view .LVU638
 696:Core/Src/main.c ****   {
 1752              		.loc 1 696 7 is_stmt 0 view .LVU639
 1753 0032 FFF7FEFF 		bl	HAL_RTC_Init
 1754              	.LVL62:
 696:Core/Src/main.c ****   {
 1755              		.loc 1 696 6 view .LVU640
 1756 0036 0028     		cmp	r0, #0
 1757 0038 47D1     		bne	.L89
 707:Core/Src/main.c ****   sTime.Minutes = 0x0;
ARM GAS  /tmp/ccRZlU69.s 			page 68


 1758              		.loc 1 707 3 is_stmt 1 view .LVU641
 707:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1759              		.loc 1 707 15 is_stmt 0 view .LVU642
 1760 003a 0023     		movs	r3, #0
 1761 003c 8DF82C30 		strb	r3, [sp, #44]
 708:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1762              		.loc 1 708 3 is_stmt 1 view .LVU643
 708:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1763              		.loc 1 708 17 is_stmt 0 view .LVU644
 1764 0040 8DF82D30 		strb	r3, [sp, #45]
 709:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1765              		.loc 1 709 3 is_stmt 1 view .LVU645
 709:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1766              		.loc 1 709 17 is_stmt 0 view .LVU646
 1767 0044 8DF82E30 		strb	r3, [sp, #46]
 710:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1768              		.loc 1 710 3 is_stmt 1 view .LVU647
 710:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1769              		.loc 1 710 24 is_stmt 0 view .LVU648
 1770 0048 0E93     		str	r3, [sp, #56]
 711:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1771              		.loc 1 711 3 is_stmt 1 view .LVU649
 711:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1772              		.loc 1 711 24 is_stmt 0 view .LVU650
 1773 004a 0F93     		str	r3, [sp, #60]
 712:Core/Src/main.c ****   {
 1774              		.loc 1 712 3 is_stmt 1 view .LVU651
 712:Core/Src/main.c ****   {
 1775              		.loc 1 712 7 is_stmt 0 view .LVU652
 1776 004c 0122     		movs	r2, #1
 1777 004e 0BA9     		add	r1, sp, #44
 1778 0050 2448     		ldr	r0, .L95
 1779 0052 FFF7FEFF 		bl	HAL_RTC_SetTime
 1780              	.LVL63:
 712:Core/Src/main.c ****   {
 1781              		.loc 1 712 6 view .LVU653
 1782 0056 0028     		cmp	r0, #0
 1783 0058 39D1     		bne	.L90
 716:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 1784              		.loc 1 716 3 is_stmt 1 view .LVU654
 716:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 1785              		.loc 1 716 17 is_stmt 0 view .LVU655
 1786 005a 0122     		movs	r2, #1
 1787 005c 8DF82820 		strb	r2, [sp, #40]
 717:Core/Src/main.c ****   sDate.Date = 0x1;
 1788              		.loc 1 717 3 is_stmt 1 view .LVU656
 717:Core/Src/main.c ****   sDate.Date = 0x1;
 1789              		.loc 1 717 15 is_stmt 0 view .LVU657
 1790 0060 8DF82920 		strb	r2, [sp, #41]
 718:Core/Src/main.c ****   sDate.Year = 0x0;
 1791              		.loc 1 718 3 is_stmt 1 view .LVU658
 718:Core/Src/main.c ****   sDate.Year = 0x0;
 1792              		.loc 1 718 14 is_stmt 0 view .LVU659
 1793 0064 8DF82A20 		strb	r2, [sp, #42]
 719:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 1794              		.loc 1 719 3 is_stmt 1 view .LVU660
 719:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
ARM GAS  /tmp/ccRZlU69.s 			page 69


 1795              		.loc 1 719 14 is_stmt 0 view .LVU661
 1796 0068 0023     		movs	r3, #0
 1797 006a 8DF82B30 		strb	r3, [sp, #43]
 720:Core/Src/main.c ****   {
 1798              		.loc 1 720 3 is_stmt 1 view .LVU662
 720:Core/Src/main.c ****   {
 1799              		.loc 1 720 7 is_stmt 0 view .LVU663
 1800 006e 0AA9     		add	r1, sp, #40
 1801 0070 1C48     		ldr	r0, .L95
 1802 0072 FFF7FEFF 		bl	HAL_RTC_SetDate
 1803              	.LVL64:
 720:Core/Src/main.c ****   {
 1804              		.loc 1 720 6 view .LVU664
 1805 0076 60BB     		cbnz	r0, .L91
 727:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = 0x0;
 1806              		.loc 1 727 3 is_stmt 1 view .LVU665
 727:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = 0x0;
 1807              		.loc 1 727 26 is_stmt 0 view .LVU666
 1808 0078 0023     		movs	r3, #0
 1809 007a 8DF80030 		strb	r3, [sp]
 728:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = 0x0;
 1810              		.loc 1 728 3 is_stmt 1 view .LVU667
 728:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = 0x0;
 1811              		.loc 1 728 28 is_stmt 0 view .LVU668
 1812 007e 8DF80130 		strb	r3, [sp, #1]
 729:Core/Src/main.c ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 1813              		.loc 1 729 3 is_stmt 1 view .LVU669
 729:Core/Src/main.c ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 1814              		.loc 1 729 28 is_stmt 0 view .LVU670
 1815 0082 8DF80230 		strb	r3, [sp, #2]
 730:Core/Src/main.c ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1816              		.loc 1 730 3 is_stmt 1 view .LVU671
 730:Core/Src/main.c ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1817              		.loc 1 730 31 is_stmt 0 view .LVU672
 1818 0086 0193     		str	r3, [sp, #4]
 731:Core/Src/main.c ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1819              		.loc 1 731 3 is_stmt 1 view .LVU673
 731:Core/Src/main.c ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1820              		.loc 1 731 35 is_stmt 0 view .LVU674
 1821 0088 0393     		str	r3, [sp, #12]
 732:Core/Src/main.c ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 1822              		.loc 1 732 3 is_stmt 1 view .LVU675
 732:Core/Src/main.c ****   sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 1823              		.loc 1 732 35 is_stmt 0 view .LVU676
 1824 008a 0493     		str	r3, [sp, #16]
 733:Core/Src/main.c ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 1825              		.loc 1 733 3 is_stmt 1 view .LVU677
 733:Core/Src/main.c ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 1826              		.loc 1 733 20 is_stmt 0 view .LVU678
 1827 008c 0593     		str	r3, [sp, #20]
 734:Core/Src/main.c ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 1828              		.loc 1 734 3 is_stmt 1 view .LVU679
 734:Core/Src/main.c ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 1829              		.loc 1 734 29 is_stmt 0 view .LVU680
 1830 008e 0693     		str	r3, [sp, #24]
 735:Core/Src/main.c ****   sAlarm.AlarmDateWeekDay = 0x1;
 1831              		.loc 1 735 3 is_stmt 1 view .LVU681
ARM GAS  /tmp/ccRZlU69.s 			page 70


 735:Core/Src/main.c ****   sAlarm.AlarmDateWeekDay = 0x1;
 1832              		.loc 1 735 30 is_stmt 0 view .LVU682
 1833 0090 0793     		str	r3, [sp, #28]
 736:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 1834              		.loc 1 736 3 is_stmt 1 view .LVU683
 736:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 1835              		.loc 1 736 27 is_stmt 0 view .LVU684
 1836 0092 0122     		movs	r2, #1
 1837 0094 8DF82020 		strb	r2, [sp, #32]
 737:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1838              		.loc 1 737 3 is_stmt 1 view .LVU685
 737:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1839              		.loc 1 737 16 is_stmt 0 view .LVU686
 1840 0098 4FF48073 		mov	r3, #256
 1841 009c 0993     		str	r3, [sp, #36]
 738:Core/Src/main.c ****   {
 1842              		.loc 1 738 3 is_stmt 1 view .LVU687
 738:Core/Src/main.c ****   {
 1843              		.loc 1 738 7 is_stmt 0 view .LVU688
 1844 009e 6946     		mov	r1, sp
 1845 00a0 1048     		ldr	r0, .L95
 1846 00a2 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1847              	.LVL65:
 738:Core/Src/main.c ****   {
 1848              		.loc 1 738 6 view .LVU689
 1849 00a6 B0B9     		cbnz	r0, .L92
 745:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1850              		.loc 1 745 3 is_stmt 1 view .LVU690
 745:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 1851              		.loc 1 745 16 is_stmt 0 view .LVU691
 1852 00a8 4FF40073 		mov	r3, #512
 1853 00ac 0993     		str	r3, [sp, #36]
 746:Core/Src/main.c ****   {
 1854              		.loc 1 746 3 is_stmt 1 view .LVU692
 746:Core/Src/main.c ****   {
 1855              		.loc 1 746 7 is_stmt 0 view .LVU693
 1856 00ae 0122     		movs	r2, #1
 1857 00b0 6946     		mov	r1, sp
 1858 00b2 0C48     		ldr	r0, .L95
 1859 00b4 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 1860              	.LVL66:
 746:Core/Src/main.c ****   {
 1861              		.loc 1 746 6 view .LVU694
 1862 00b8 78B9     		cbnz	r0, .L93
 753:Core/Src/main.c ****   {
 1863              		.loc 1 753 3 is_stmt 1 view .LVU695
 753:Core/Src/main.c ****   {
 1864              		.loc 1 753 7 is_stmt 0 view .LVU696
 1865 00ba 0222     		movs	r2, #2
 1866 00bc 0021     		movs	r1, #0
 1867 00be 0948     		ldr	r0, .L95
 1868 00c0 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 1869              	.LVL67:
 753:Core/Src/main.c ****   {
 1870              		.loc 1 753 6 view .LVU697
 1871 00c4 58B9     		cbnz	r0, .L94
 761:Core/Src/main.c **** 
ARM GAS  /tmp/ccRZlU69.s 			page 71


 1872              		.loc 1 761 1 view .LVU698
 1873 00c6 10B0     		add	sp, sp, #64
 1874              	.LCFI24:
 1875              		.cfi_remember_state
 1876              		.cfi_def_cfa_offset 8
 1877              		@ sp needed
 1878 00c8 10BD     		pop	{r4, pc}
 1879              	.L89:
 1880              	.LCFI25:
 1881              		.cfi_restore_state
 698:Core/Src/main.c ****   }
 1882              		.loc 1 698 5 is_stmt 1 view .LVU699
 1883 00ca FFF7FEFF 		bl	Error_Handler
 1884              	.LVL68:
 1885              	.L90:
 714:Core/Src/main.c ****   }
 1886              		.loc 1 714 5 view .LVU700
 1887 00ce FFF7FEFF 		bl	Error_Handler
 1888              	.LVL69:
 1889              	.L91:
 722:Core/Src/main.c ****   }
 1890              		.loc 1 722 5 view .LVU701
 1891 00d2 FFF7FEFF 		bl	Error_Handler
 1892              	.LVL70:
 1893              	.L92:
 740:Core/Src/main.c ****   }
 1894              		.loc 1 740 5 view .LVU702
 1895 00d6 FFF7FEFF 		bl	Error_Handler
 1896              	.LVL71:
 1897              	.L93:
 748:Core/Src/main.c ****   }
 1898              		.loc 1 748 5 view .LVU703
 1899 00da FFF7FEFF 		bl	Error_Handler
 1900              	.LVL72:
 1901              	.L94:
 755:Core/Src/main.c ****   }
 1902              		.loc 1 755 5 view .LVU704
 1903 00de FFF7FEFF 		bl	Error_Handler
 1904              	.LVL73:
 1905              	.L96:
 1906 00e2 00BF     		.align	2
 1907              	.L95:
 1908 00e4 00000000 		.word	hrtc
 1909 00e8 00280040 		.word	1073752064
 1910              		.cfi_endproc
 1911              	.LFE152:
 1913              		.section	.text.MX_SAI2_Init,"ax",%progbits
 1914              		.align	1
 1915              		.syntax unified
 1916              		.thumb
 1917              		.thumb_func
 1919              	MX_SAI2_Init:
 1920              	.LFB153:
 769:Core/Src/main.c **** 
 1921              		.loc 1 769 1 view -0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccRZlU69.s 			page 72


 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925 0000 08B5     		push	{r3, lr}
 1926              	.LCFI26:
 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 3, -8
 1929              		.cfi_offset 14, -4
 778:Core/Src/main.c ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 1930              		.loc 1 778 3 view .LVU706
 778:Core/Src/main.c ****   hsai_BlockA2.Init.Protocol = SAI_FREE_PROTOCOL;
 1931              		.loc 1 778 25 is_stmt 0 view .LVU707
 1932 0002 2348     		ldr	r0, .L103
 1933 0004 234B     		ldr	r3, .L103+4
 1934 0006 0360     		str	r3, [r0]
 779:Core/Src/main.c ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 1935              		.loc 1 779 3 is_stmt 1 view .LVU708
 779:Core/Src/main.c ****   hsai_BlockA2.Init.AudioMode = SAI_MODEMASTER_TX;
 1936              		.loc 1 779 30 is_stmt 0 view .LVU709
 1937 0008 0023     		movs	r3, #0
 1938 000a 0363     		str	r3, [r0, #48]
 780:Core/Src/main.c ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_8;
 1939              		.loc 1 780 3 is_stmt 1 view .LVU710
 780:Core/Src/main.c ****   hsai_BlockA2.Init.DataSize = SAI_DATASIZE_8;
 1940              		.loc 1 780 31 is_stmt 0 view .LVU711
 1941 000c 4360     		str	r3, [r0, #4]
 781:Core/Src/main.c ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1942              		.loc 1 781 3 is_stmt 1 view .LVU712
 781:Core/Src/main.c ****   hsai_BlockA2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 1943              		.loc 1 781 30 is_stmt 0 view .LVU713
 1944 000e 4022     		movs	r2, #64
 1945 0010 4263     		str	r2, [r0, #52]
 782:Core/Src/main.c ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1946              		.loc 1 782 3 is_stmt 1 view .LVU714
 782:Core/Src/main.c ****   hsai_BlockA2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 1947              		.loc 1 782 30 is_stmt 0 view .LVU715
 1948 0012 8363     		str	r3, [r0, #56]
 783:Core/Src/main.c ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 1949              		.loc 1 783 3 is_stmt 1 view .LVU716
 783:Core/Src/main.c ****   hsai_BlockA2.Init.Synchro = SAI_ASYNCHRONOUS;
 1950              		.loc 1 783 35 is_stmt 0 view .LVU717
 1951 0014 C363     		str	r3, [r0, #60]
 784:Core/Src/main.c ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1952              		.loc 1 784 3 is_stmt 1 view .LVU718
 784:Core/Src/main.c ****   hsai_BlockA2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 1953              		.loc 1 784 29 is_stmt 0 view .LVU719
 1954 0016 8360     		str	r3, [r0, #8]
 785:Core/Src/main.c ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 1955              		.loc 1 785 3 is_stmt 1 view .LVU720
 785:Core/Src/main.c ****   hsai_BlockA2.Init.NoDivider = SAI_MASTERDIVIDER_ENABLE;
 1956              		.loc 1 785 33 is_stmt 0 view .LVU721
 1957 0018 0361     		str	r3, [r0, #16]
 786:Core/Src/main.c ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1958              		.loc 1 786 3 is_stmt 1 view .LVU722
 786:Core/Src/main.c ****   hsai_BlockA2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 1959              		.loc 1 786 31 is_stmt 0 view .LVU723
 1960 001a 4361     		str	r3, [r0, #20]
 787:Core/Src/main.c ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 1961              		.loc 1 787 3 is_stmt 1 view .LVU724
ARM GAS  /tmp/ccRZlU69.s 			page 73


 787:Core/Src/main.c ****   hsai_BlockA2.Init.AudioFrequency = SAI_AUDIO_FREQUENCY_192K;
 1962              		.loc 1 787 35 is_stmt 0 view .LVU725
 1963 001c 8361     		str	r3, [r0, #24]
 788:Core/Src/main.c ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1964              		.loc 1 788 3 is_stmt 1 view .LVU726
 788:Core/Src/main.c ****   hsai_BlockA2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 1965              		.loc 1 788 36 is_stmt 0 view .LVU727
 1966 001e 1E4A     		ldr	r2, .L103+8
 1967 0020 C261     		str	r2, [r0, #28]
 789:Core/Src/main.c ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 1968              		.loc 1 789 3 is_stmt 1 view .LVU728
 789:Core/Src/main.c ****   hsai_BlockA2.Init.MonoStereoMode = SAI_STEREOMODE;
 1969              		.loc 1 789 32 is_stmt 0 view .LVU729
 1970 0022 C360     		str	r3, [r0, #12]
 790:Core/Src/main.c ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 1971              		.loc 1 790 3 is_stmt 1 view .LVU730
 790:Core/Src/main.c ****   hsai_BlockA2.Init.CompandingMode = SAI_NOCOMPANDING;
 1972              		.loc 1 790 36 is_stmt 0 view .LVU731
 1973 0024 4362     		str	r3, [r0, #36]
 791:Core/Src/main.c ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1974              		.loc 1 791 3 is_stmt 1 view .LVU732
 791:Core/Src/main.c ****   hsai_BlockA2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 1975              		.loc 1 791 36 is_stmt 0 view .LVU733
 1976 0026 8362     		str	r3, [r0, #40]
 792:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 1977              		.loc 1 792 3 is_stmt 1 view .LVU734
 792:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FrameLength = 8;
 1978              		.loc 1 792 30 is_stmt 0 view .LVU735
 1979 0028 C362     		str	r3, [r0, #44]
 793:Core/Src/main.c ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 1980              		.loc 1 793 3 is_stmt 1 view .LVU736
 793:Core/Src/main.c ****   hsai_BlockA2.FrameInit.ActiveFrameLength = 1;
 1981              		.loc 1 793 38 is_stmt 0 view .LVU737
 1982 002a 0822     		movs	r2, #8
 1983 002c 0264     		str	r2, [r0, #64]
 794:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1984              		.loc 1 794 3 is_stmt 1 view .LVU738
 794:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 1985              		.loc 1 794 44 is_stmt 0 view .LVU739
 1986 002e 0122     		movs	r2, #1
 1987 0030 4264     		str	r2, [r0, #68]
 795:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1988              		.loc 1 795 3 is_stmt 1 view .LVU740
 795:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 1989              		.loc 1 795 39 is_stmt 0 view .LVU741
 1990 0032 8364     		str	r3, [r0, #72]
 796:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1991              		.loc 1 796 3 is_stmt 1 view .LVU742
 796:Core/Src/main.c ****   hsai_BlockA2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 1992              		.loc 1 796 37 is_stmt 0 view .LVU743
 1993 0034 C364     		str	r3, [r0, #76]
 797:Core/Src/main.c ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 1994              		.loc 1 797 3 is_stmt 1 view .LVU744
 797:Core/Src/main.c ****   hsai_BlockA2.SlotInit.FirstBitOffset = 0;
 1995              		.loc 1 797 35 is_stmt 0 view .LVU745
 1996 0036 0365     		str	r3, [r0, #80]
 798:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
ARM GAS  /tmp/ccRZlU69.s 			page 74


 1997              		.loc 1 798 3 is_stmt 1 view .LVU746
 798:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 1998              		.loc 1 798 40 is_stmt 0 view .LVU747
 1999 0038 4365     		str	r3, [r0, #84]
 799:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 2000              		.loc 1 799 3 is_stmt 1 view .LVU748
 799:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotNumber = 1;
 2001              		.loc 1 799 34 is_stmt 0 view .LVU749
 2002 003a 8365     		str	r3, [r0, #88]
 800:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 2003              		.loc 1 800 3 is_stmt 1 view .LVU750
 800:Core/Src/main.c ****   hsai_BlockA2.SlotInit.SlotActive = 0x00000000;
 2004              		.loc 1 800 36 is_stmt 0 view .LVU751
 2005 003c C265     		str	r2, [r0, #92]
 801:Core/Src/main.c ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 2006              		.loc 1 801 3 is_stmt 1 view .LVU752
 801:Core/Src/main.c ****   if (HAL_SAI_Init(&hsai_BlockA2) != HAL_OK)
 2007              		.loc 1 801 36 is_stmt 0 view .LVU753
 2008 003e 0366     		str	r3, [r0, #96]
 802:Core/Src/main.c ****   {
 2009              		.loc 1 802 3 is_stmt 1 view .LVU754
 802:Core/Src/main.c ****   {
 2010              		.loc 1 802 7 is_stmt 0 view .LVU755
 2011 0040 FFF7FEFF 		bl	HAL_SAI_Init
 2012              	.LVL74:
 802:Core/Src/main.c ****   {
 2013              		.loc 1 802 6 view .LVU756
 2014 0044 00BB     		cbnz	r0, .L101
 806:Core/Src/main.c ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 2015              		.loc 1 806 3 is_stmt 1 view .LVU757
 806:Core/Src/main.c ****   hsai_BlockB2.Init.Protocol = SAI_FREE_PROTOCOL;
 2016              		.loc 1 806 25 is_stmt 0 view .LVU758
 2017 0046 1548     		ldr	r0, .L103+12
 2018 0048 154B     		ldr	r3, .L103+16
 2019 004a 0360     		str	r3, [r0]
 807:Core/Src/main.c ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 2020              		.loc 1 807 3 is_stmt 1 view .LVU759
 807:Core/Src/main.c ****   hsai_BlockB2.Init.AudioMode = SAI_MODESLAVE_RX;
 2021              		.loc 1 807 30 is_stmt 0 view .LVU760
 2022 004c 0023     		movs	r3, #0
 2023 004e 0363     		str	r3, [r0, #48]
 808:Core/Src/main.c ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_8;
 2024              		.loc 1 808 3 is_stmt 1 view .LVU761
 808:Core/Src/main.c ****   hsai_BlockB2.Init.DataSize = SAI_DATASIZE_8;
 2025              		.loc 1 808 31 is_stmt 0 view .LVU762
 2026 0050 0322     		movs	r2, #3
 2027 0052 4260     		str	r2, [r0, #4]
 809:Core/Src/main.c ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 2028              		.loc 1 809 3 is_stmt 1 view .LVU763
 809:Core/Src/main.c ****   hsai_BlockB2.Init.FirstBit = SAI_FIRSTBIT_MSB;
 2029              		.loc 1 809 30 is_stmt 0 view .LVU764
 2030 0054 4022     		movs	r2, #64
 2031 0056 4263     		str	r2, [r0, #52]
 810:Core/Src/main.c ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 2032              		.loc 1 810 3 is_stmt 1 view .LVU765
 810:Core/Src/main.c ****   hsai_BlockB2.Init.ClockStrobing = SAI_CLOCKSTROBING_FALLINGEDGE;
 2033              		.loc 1 810 30 is_stmt 0 view .LVU766
ARM GAS  /tmp/ccRZlU69.s 			page 75


 2034 0058 8363     		str	r3, [r0, #56]
 811:Core/Src/main.c ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 2035              		.loc 1 811 3 is_stmt 1 view .LVU767
 811:Core/Src/main.c ****   hsai_BlockB2.Init.Synchro = SAI_SYNCHRONOUS;
 2036              		.loc 1 811 35 is_stmt 0 view .LVU768
 2037 005a C363     		str	r3, [r0, #60]
 812:Core/Src/main.c ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 2038              		.loc 1 812 3 is_stmt 1 view .LVU769
 812:Core/Src/main.c ****   hsai_BlockB2.Init.OutputDrive = SAI_OUTPUTDRIVE_DISABLE;
 2039              		.loc 1 812 29 is_stmt 0 view .LVU770
 2040 005c 0122     		movs	r2, #1
 2041 005e 8260     		str	r2, [r0, #8]
 813:Core/Src/main.c ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 2042              		.loc 1 813 3 is_stmt 1 view .LVU771
 813:Core/Src/main.c ****   hsai_BlockB2.Init.FIFOThreshold = SAI_FIFOTHRESHOLD_EMPTY;
 2043              		.loc 1 813 33 is_stmt 0 view .LVU772
 2044 0060 0361     		str	r3, [r0, #16]
 814:Core/Src/main.c ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 2045              		.loc 1 814 3 is_stmt 1 view .LVU773
 814:Core/Src/main.c ****   hsai_BlockB2.Init.SynchroExt = SAI_SYNCEXT_DISABLE;
 2046              		.loc 1 814 35 is_stmt 0 view .LVU774
 2047 0062 8361     		str	r3, [r0, #24]
 815:Core/Src/main.c ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 2048              		.loc 1 815 3 is_stmt 1 view .LVU775
 815:Core/Src/main.c ****   hsai_BlockB2.Init.MonoStereoMode = SAI_STEREOMODE;
 2049              		.loc 1 815 32 is_stmt 0 view .LVU776
 2050 0064 C360     		str	r3, [r0, #12]
 816:Core/Src/main.c ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 2051              		.loc 1 816 3 is_stmt 1 view .LVU777
 816:Core/Src/main.c ****   hsai_BlockB2.Init.CompandingMode = SAI_NOCOMPANDING;
 2052              		.loc 1 816 36 is_stmt 0 view .LVU778
 2053 0066 4362     		str	r3, [r0, #36]
 817:Core/Src/main.c ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 2054              		.loc 1 817 3 is_stmt 1 view .LVU779
 817:Core/Src/main.c ****   hsai_BlockB2.Init.TriState = SAI_OUTPUT_NOTRELEASED;
 2055              		.loc 1 817 36 is_stmt 0 view .LVU780
 2056 0068 8362     		str	r3, [r0, #40]
 818:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 2057              		.loc 1 818 3 is_stmt 1 view .LVU781
 818:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FrameLength = 8;
 2058              		.loc 1 818 30 is_stmt 0 view .LVU782
 2059 006a C362     		str	r3, [r0, #44]
 819:Core/Src/main.c ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 2060              		.loc 1 819 3 is_stmt 1 view .LVU783
 819:Core/Src/main.c ****   hsai_BlockB2.FrameInit.ActiveFrameLength = 1;
 2061              		.loc 1 819 38 is_stmt 0 view .LVU784
 2062 006c 0821     		movs	r1, #8
 2063 006e 0164     		str	r1, [r0, #64]
 820:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 2064              		.loc 1 820 3 is_stmt 1 view .LVU785
 820:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSDefinition = SAI_FS_STARTFRAME;
 2065              		.loc 1 820 44 is_stmt 0 view .LVU786
 2066 0070 4264     		str	r2, [r0, #68]
 821:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 2067              		.loc 1 821 3 is_stmt 1 view .LVU787
 821:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSPolarity = SAI_FS_ACTIVE_LOW;
 2068              		.loc 1 821 39 is_stmt 0 view .LVU788
ARM GAS  /tmp/ccRZlU69.s 			page 76


 2069 0072 8364     		str	r3, [r0, #72]
 822:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 2070              		.loc 1 822 3 is_stmt 1 view .LVU789
 822:Core/Src/main.c ****   hsai_BlockB2.FrameInit.FSOffset = SAI_FS_FIRSTBIT;
 2071              		.loc 1 822 37 is_stmt 0 view .LVU790
 2072 0074 C364     		str	r3, [r0, #76]
 823:Core/Src/main.c ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 2073              		.loc 1 823 3 is_stmt 1 view .LVU791
 823:Core/Src/main.c ****   hsai_BlockB2.SlotInit.FirstBitOffset = 0;
 2074              		.loc 1 823 35 is_stmt 0 view .LVU792
 2075 0076 0365     		str	r3, [r0, #80]
 824:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 2076              		.loc 1 824 3 is_stmt 1 view .LVU793
 824:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotSize = SAI_SLOTSIZE_DATASIZE;
 2077              		.loc 1 824 40 is_stmt 0 view .LVU794
 2078 0078 4365     		str	r3, [r0, #84]
 825:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 2079              		.loc 1 825 3 is_stmt 1 view .LVU795
 825:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotNumber = 1;
 2080              		.loc 1 825 34 is_stmt 0 view .LVU796
 2081 007a 8365     		str	r3, [r0, #88]
 826:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 2082              		.loc 1 826 3 is_stmt 1 view .LVU797
 826:Core/Src/main.c ****   hsai_BlockB2.SlotInit.SlotActive = 0x00000000;
 2083              		.loc 1 826 36 is_stmt 0 view .LVU798
 2084 007c C265     		str	r2, [r0, #92]
 827:Core/Src/main.c ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 2085              		.loc 1 827 3 is_stmt 1 view .LVU799
 827:Core/Src/main.c ****   if (HAL_SAI_Init(&hsai_BlockB2) != HAL_OK)
 2086              		.loc 1 827 36 is_stmt 0 view .LVU800
 2087 007e 0366     		str	r3, [r0, #96]
 828:Core/Src/main.c ****   {
 2088              		.loc 1 828 3 is_stmt 1 view .LVU801
 828:Core/Src/main.c ****   {
 2089              		.loc 1 828 7 is_stmt 0 view .LVU802
 2090 0080 FFF7FEFF 		bl	HAL_SAI_Init
 2091              	.LVL75:
 828:Core/Src/main.c ****   {
 2092              		.loc 1 828 6 view .LVU803
 2093 0084 10B9     		cbnz	r0, .L102
 836:Core/Src/main.c **** 
 2094              		.loc 1 836 1 view .LVU804
 2095 0086 08BD     		pop	{r3, pc}
 2096              	.L101:
 804:Core/Src/main.c ****   }
 2097              		.loc 1 804 5 is_stmt 1 view .LVU805
 2098 0088 FFF7FEFF 		bl	Error_Handler
 2099              	.LVL76:
 2100              	.L102:
 830:Core/Src/main.c ****   }
 2101              		.loc 1 830 5 view .LVU806
 2102 008c FFF7FEFF 		bl	Error_Handler
 2103              	.LVL77:
 2104              	.L104:
 2105              		.align	2
 2106              	.L103:
 2107 0090 00000000 		.word	hsai_BlockA2
ARM GAS  /tmp/ccRZlU69.s 			page 77


 2108 0094 045C0140 		.word	1073830916
 2109 0098 00EE0200 		.word	192000
 2110 009c 00000000 		.word	hsai_BlockB2
 2111 00a0 245C0140 		.word	1073830948
 2112              		.cfi_endproc
 2113              	.LFE153:
 2115              		.section	.text.MX_SPDIFRX_Init,"ax",%progbits
 2116              		.align	1
 2117              		.syntax unified
 2118              		.thumb
 2119              		.thumb_func
 2121              	MX_SPDIFRX_Init:
 2122              	.LFB155:
 872:Core/Src/main.c **** 
 2123              		.loc 1 872 1 view -0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 0, uses_anonymous_args = 0
 2127 0000 08B5     		push	{r3, lr}
 2128              	.LCFI27:
 2129              		.cfi_def_cfa_offset 8
 2130              		.cfi_offset 3, -8
 2131              		.cfi_offset 14, -4
 881:Core/Src/main.c ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 2132              		.loc 1 881 3 view .LVU808
 881:Core/Src/main.c ****   hspdif.Init.InputSelection = SPDIFRX_INPUT_IN0;
 2133              		.loc 1 881 19 is_stmt 0 view .LVU809
 2134 0002 0A48     		ldr	r0, .L109
 2135 0004 4FF04023 		mov	r3, #1073758208
 2136 0008 0360     		str	r3, [r0]
 882:Core/Src/main.c ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 2137              		.loc 1 882 3 is_stmt 1 view .LVU810
 882:Core/Src/main.c ****   hspdif.Init.Retries = SPDIFRX_MAXRETRIES_NONE;
 2138              		.loc 1 882 30 is_stmt 0 view .LVU811
 2139 000a 0023     		movs	r3, #0
 2140 000c 4360     		str	r3, [r0, #4]
 883:Core/Src/main.c ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 2141              		.loc 1 883 3 is_stmt 1 view .LVU812
 883:Core/Src/main.c ****   hspdif.Init.WaitForActivity = SPDIFRX_WAITFORACTIVITY_OFF;
 2142              		.loc 1 883 23 is_stmt 0 view .LVU813
 2143 000e 8360     		str	r3, [r0, #8]
 884:Core/Src/main.c ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 2144              		.loc 1 884 3 is_stmt 1 view .LVU814
 884:Core/Src/main.c ****   hspdif.Init.ChannelSelection = SPDIFRX_CHANNEL_A;
 2145              		.loc 1 884 31 is_stmt 0 view .LVU815
 2146 0010 C360     		str	r3, [r0, #12]
 885:Core/Src/main.c ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 2147              		.loc 1 885 3 is_stmt 1 view .LVU816
 885:Core/Src/main.c ****   hspdif.Init.DataFormat = SPDIFRX_DATAFORMAT_LSB;
 2148              		.loc 1 885 32 is_stmt 0 view .LVU817
 2149 0012 0361     		str	r3, [r0, #16]
 886:Core/Src/main.c ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 2150              		.loc 1 886 3 is_stmt 1 view .LVU818
 886:Core/Src/main.c ****   hspdif.Init.StereoMode = SPDIFRX_STEREOMODE_DISABLE;
 2151              		.loc 1 886 26 is_stmt 0 view .LVU819
 2152 0014 4361     		str	r3, [r0, #20]
 887:Core/Src/main.c ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
ARM GAS  /tmp/ccRZlU69.s 			page 78


 2153              		.loc 1 887 3 is_stmt 1 view .LVU820
 887:Core/Src/main.c ****   hspdif.Init.PreambleTypeMask = SPDIFRX_PREAMBLETYPEMASK_OFF;
 2154              		.loc 1 887 26 is_stmt 0 view .LVU821
 2155 0016 8361     		str	r3, [r0, #24]
 888:Core/Src/main.c ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 2156              		.loc 1 888 3 is_stmt 1 view .LVU822
 888:Core/Src/main.c ****   hspdif.Init.ChannelStatusMask = SPDIFRX_CHANNELSTATUS_OFF;
 2157              		.loc 1 888 32 is_stmt 0 view .LVU823
 2158 0018 C361     		str	r3, [r0, #28]
 889:Core/Src/main.c ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 2159              		.loc 1 889 3 is_stmt 1 view .LVU824
 889:Core/Src/main.c ****   hspdif.Init.ValidityBitMask = SPDIFRX_VALIDITYMASK_OFF;
 2160              		.loc 1 889 33 is_stmt 0 view .LVU825
 2161 001a 0362     		str	r3, [r0, #32]
 890:Core/Src/main.c ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 2162              		.loc 1 890 3 is_stmt 1 view .LVU826
 890:Core/Src/main.c ****   hspdif.Init.ParityErrorMask = SPDIFRX_PARITYERRORMASK_OFF;
 2163              		.loc 1 890 31 is_stmt 0 view .LVU827
 2164 001c 4362     		str	r3, [r0, #36]
 891:Core/Src/main.c ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 2165              		.loc 1 891 3 is_stmt 1 view .LVU828
 891:Core/Src/main.c ****   if (HAL_SPDIFRX_Init(&hspdif) != HAL_OK)
 2166              		.loc 1 891 31 is_stmt 0 view .LVU829
 2167 001e 8362     		str	r3, [r0, #40]
 892:Core/Src/main.c ****   {
 2168              		.loc 1 892 3 is_stmt 1 view .LVU830
 892:Core/Src/main.c ****   {
 2169              		.loc 1 892 7 is_stmt 0 view .LVU831
 2170 0020 FFF7FEFF 		bl	HAL_SPDIFRX_Init
 2171              	.LVL78:
 892:Core/Src/main.c ****   {
 2172              		.loc 1 892 6 view .LVU832
 2173 0024 00B9     		cbnz	r0, .L108
 900:Core/Src/main.c **** 
 2174              		.loc 1 900 1 view .LVU833
 2175 0026 08BD     		pop	{r3, pc}
 2176              	.L108:
 894:Core/Src/main.c ****   }
 2177              		.loc 1 894 5 is_stmt 1 view .LVU834
 2178 0028 FFF7FEFF 		bl	Error_Handler
 2179              	.LVL79:
 2180              	.L110:
 2181              		.align	2
 2182              	.L109:
 2183 002c 00000000 		.word	hspdif
 2184              		.cfi_endproc
 2185              	.LFE155:
 2187              		.section	.text.MX_TIM1_Init,"ax",%progbits
 2188              		.align	1
 2189              		.syntax unified
 2190              		.thumb
 2191              		.thumb_func
 2193              	MX_TIM1_Init:
 2194              	.LFB156:
 908:Core/Src/main.c **** 
 2195              		.loc 1 908 1 view -0
 2196              		.cfi_startproc
ARM GAS  /tmp/ccRZlU69.s 			page 79


 2197              		@ args = 0, pretend = 0, frame = 104
 2198              		@ frame_needed = 0, uses_anonymous_args = 0
 2199 0000 10B5     		push	{r4, lr}
 2200              	.LCFI28:
 2201              		.cfi_def_cfa_offset 8
 2202              		.cfi_offset 4, -8
 2203              		.cfi_offset 14, -4
 2204 0002 9AB0     		sub	sp, sp, #104
 2205              	.LCFI29:
 2206              		.cfi_def_cfa_offset 112
 914:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2207              		.loc 1 914 3 view .LVU836
 914:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2208              		.loc 1 914 26 is_stmt 0 view .LVU837
 2209 0004 0024     		movs	r4, #0
 2210 0006 1694     		str	r4, [sp, #88]
 2211 0008 1794     		str	r4, [sp, #92]
 2212 000a 1894     		str	r4, [sp, #96]
 2213 000c 1994     		str	r4, [sp, #100]
 915:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2214              		.loc 1 915 3 is_stmt 1 view .LVU838
 915:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2215              		.loc 1 915 27 is_stmt 0 view .LVU839
 2216 000e 1394     		str	r4, [sp, #76]
 2217 0010 1494     		str	r4, [sp, #80]
 2218 0012 1594     		str	r4, [sp, #84]
 916:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 2219              		.loc 1 916 3 is_stmt 1 view .LVU840
 916:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 2220              		.loc 1 916 22 is_stmt 0 view .LVU841
 2221 0014 0C94     		str	r4, [sp, #48]
 2222 0016 0D94     		str	r4, [sp, #52]
 2223 0018 0E94     		str	r4, [sp, #56]
 2224 001a 0F94     		str	r4, [sp, #60]
 2225 001c 1094     		str	r4, [sp, #64]
 2226 001e 1194     		str	r4, [sp, #68]
 2227 0020 1294     		str	r4, [sp, #72]
 917:Core/Src/main.c **** 
 2228              		.loc 1 917 3 is_stmt 1 view .LVU842
 917:Core/Src/main.c **** 
 2229              		.loc 1 917 34 is_stmt 0 view .LVU843
 2230 0022 2C22     		movs	r2, #44
 2231 0024 2146     		mov	r1, r4
 2232 0026 01A8     		add	r0, sp, #4
 2233 0028 FFF7FEFF 		bl	memset
 2234              	.LVL80:
 922:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 2235              		.loc 1 922 3 is_stmt 1 view .LVU844
 922:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 2236              		.loc 1 922 18 is_stmt 0 view .LVU845
 2237 002c 2D48     		ldr	r0, .L125
 2238 002e 2E4B     		ldr	r3, .L125+4
 2239 0030 0360     		str	r3, [r0]
 923:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 2240              		.loc 1 923 3 is_stmt 1 view .LVU846
 923:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 2241              		.loc 1 923 24 is_stmt 0 view .LVU847
ARM GAS  /tmp/ccRZlU69.s 			page 80


 2242 0032 4460     		str	r4, [r0, #4]
 924:Core/Src/main.c ****   htim1.Init.Period = 65535;
 2243              		.loc 1 924 3 is_stmt 1 view .LVU848
 924:Core/Src/main.c ****   htim1.Init.Period = 65535;
 2244              		.loc 1 924 26 is_stmt 0 view .LVU849
 2245 0034 8460     		str	r4, [r0, #8]
 925:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2246              		.loc 1 925 3 is_stmt 1 view .LVU850
 925:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2247              		.loc 1 925 21 is_stmt 0 view .LVU851
 2248 0036 4FF6FF73 		movw	r3, #65535
 2249 003a C360     		str	r3, [r0, #12]
 926:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 2250              		.loc 1 926 3 is_stmt 1 view .LVU852
 926:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 2251              		.loc 1 926 28 is_stmt 0 view .LVU853
 2252 003c 0461     		str	r4, [r0, #16]
 927:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2253              		.loc 1 927 3 is_stmt 1 view .LVU854
 927:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2254              		.loc 1 927 32 is_stmt 0 view .LVU855
 2255 003e 4461     		str	r4, [r0, #20]
 928:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 2256              		.loc 1 928 3 is_stmt 1 view .LVU856
 928:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 2257              		.loc 1 928 32 is_stmt 0 view .LVU857
 2258 0040 8461     		str	r4, [r0, #24]
 929:Core/Src/main.c ****   {
 2259              		.loc 1 929 3 is_stmt 1 view .LVU858
 929:Core/Src/main.c ****   {
 2260              		.loc 1 929 7 is_stmt 0 view .LVU859
 2261 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2262              	.LVL81:
 929:Core/Src/main.c ****   {
 2263              		.loc 1 929 6 view .LVU860
 2264 0046 0028     		cmp	r0, #0
 2265 0048 3FD1     		bne	.L119
 933:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 2266              		.loc 1 933 3 is_stmt 1 view .LVU861
 933:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 2267              		.loc 1 933 34 is_stmt 0 view .LVU862
 2268 004a 4FF48053 		mov	r3, #4096
 2269 004e 1693     		str	r3, [sp, #88]
 934:Core/Src/main.c ****   {
 2270              		.loc 1 934 3 is_stmt 1 view .LVU863
 934:Core/Src/main.c ****   {
 2271              		.loc 1 934 7 is_stmt 0 view .LVU864
 2272 0050 16A9     		add	r1, sp, #88
 2273 0052 2448     		ldr	r0, .L125
 2274 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2275              	.LVL82:
 934:Core/Src/main.c ****   {
 2276              		.loc 1 934 6 view .LVU865
 2277 0058 0028     		cmp	r0, #0
 2278 005a 38D1     		bne	.L120
 938:Core/Src/main.c ****   {
 2279              		.loc 1 938 3 is_stmt 1 view .LVU866
ARM GAS  /tmp/ccRZlU69.s 			page 81


 938:Core/Src/main.c ****   {
 2280              		.loc 1 938 7 is_stmt 0 view .LVU867
 2281 005c 2148     		ldr	r0, .L125
 2282 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2283              	.LVL83:
 938:Core/Src/main.c ****   {
 2284              		.loc 1 938 6 view .LVU868
 2285 0062 0028     		cmp	r0, #0
 2286 0064 35D1     		bne	.L121
 942:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2287              		.loc 1 942 3 is_stmt 1 view .LVU869
 942:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2288              		.loc 1 942 37 is_stmt 0 view .LVU870
 2289 0066 0023     		movs	r3, #0
 2290 0068 1393     		str	r3, [sp, #76]
 943:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2291              		.loc 1 943 3 is_stmt 1 view .LVU871
 943:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2292              		.loc 1 943 38 is_stmt 0 view .LVU872
 2293 006a 1493     		str	r3, [sp, #80]
 944:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2294              		.loc 1 944 3 is_stmt 1 view .LVU873
 944:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2295              		.loc 1 944 33 is_stmt 0 view .LVU874
 2296 006c 1593     		str	r3, [sp, #84]
 945:Core/Src/main.c ****   {
 2297              		.loc 1 945 3 is_stmt 1 view .LVU875
 945:Core/Src/main.c ****   {
 2298              		.loc 1 945 7 is_stmt 0 view .LVU876
 2299 006e 13A9     		add	r1, sp, #76
 2300 0070 1C48     		ldr	r0, .L125
 2301 0072 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2302              	.LVL84:
 945:Core/Src/main.c ****   {
 2303              		.loc 1 945 6 view .LVU877
 2304 0076 0028     		cmp	r0, #0
 2305 0078 2DD1     		bne	.L122
 949:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2306              		.loc 1 949 3 is_stmt 1 view .LVU878
 949:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2307              		.loc 1 949 20 is_stmt 0 view .LVU879
 2308 007a 6023     		movs	r3, #96
 2309 007c 0C93     		str	r3, [sp, #48]
 950:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2310              		.loc 1 950 3 is_stmt 1 view .LVU880
 950:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2311              		.loc 1 950 19 is_stmt 0 view .LVU881
 2312 007e 0022     		movs	r2, #0
 2313 0080 0D92     		str	r2, [sp, #52]
 951:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2314              		.loc 1 951 3 is_stmt 1 view .LVU882
 951:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2315              		.loc 1 951 24 is_stmt 0 view .LVU883
 2316 0082 0E92     		str	r2, [sp, #56]
 952:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2317              		.loc 1 952 3 is_stmt 1 view .LVU884
 952:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /tmp/ccRZlU69.s 			page 82


 2318              		.loc 1 952 25 is_stmt 0 view .LVU885
 2319 0084 0F92     		str	r2, [sp, #60]
 953:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2320              		.loc 1 953 3 is_stmt 1 view .LVU886
 953:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2321              		.loc 1 953 24 is_stmt 0 view .LVU887
 2322 0086 1092     		str	r2, [sp, #64]
 954:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2323              		.loc 1 954 3 is_stmt 1 view .LVU888
 954:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2324              		.loc 1 954 25 is_stmt 0 view .LVU889
 2325 0088 1192     		str	r2, [sp, #68]
 955:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2326              		.loc 1 955 3 is_stmt 1 view .LVU890
 955:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2327              		.loc 1 955 26 is_stmt 0 view .LVU891
 2328 008a 1292     		str	r2, [sp, #72]
 956:Core/Src/main.c ****   {
 2329              		.loc 1 956 3 is_stmt 1 view .LVU892
 956:Core/Src/main.c ****   {
 2330              		.loc 1 956 7 is_stmt 0 view .LVU893
 2331 008c 0CA9     		add	r1, sp, #48
 2332 008e 1548     		ldr	r0, .L125
 2333 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2334              	.LVL85:
 956:Core/Src/main.c ****   {
 2335              		.loc 1 956 6 view .LVU894
 2336 0094 08BB     		cbnz	r0, .L123
 960:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2337              		.loc 1 960 3 is_stmt 1 view .LVU895
 960:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2338              		.loc 1 960 40 is_stmt 0 view .LVU896
 2339 0096 0023     		movs	r3, #0
 2340 0098 0193     		str	r3, [sp, #4]
 961:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2341              		.loc 1 961 3 is_stmt 1 view .LVU897
 961:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2342              		.loc 1 961 41 is_stmt 0 view .LVU898
 2343 009a 0293     		str	r3, [sp, #8]
 962:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 2344              		.loc 1 962 3 is_stmt 1 view .LVU899
 962:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 2345              		.loc 1 962 34 is_stmt 0 view .LVU900
 2346 009c 0393     		str	r3, [sp, #12]
 963:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2347              		.loc 1 963 3 is_stmt 1 view .LVU901
 963:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2348              		.loc 1 963 33 is_stmt 0 view .LVU902
 2349 009e 0493     		str	r3, [sp, #16]
 964:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2350              		.loc 1 964 3 is_stmt 1 view .LVU903
 964:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2351              		.loc 1 964 35 is_stmt 0 view .LVU904
 2352 00a0 0593     		str	r3, [sp, #20]
 965:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 2353              		.loc 1 965 3 is_stmt 1 view .LVU905
 965:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
ARM GAS  /tmp/ccRZlU69.s 			page 83


 2354              		.loc 1 965 38 is_stmt 0 view .LVU906
 2355 00a2 4FF40052 		mov	r2, #8192
 2356 00a6 0692     		str	r2, [sp, #24]
 966:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 2357              		.loc 1 966 3 is_stmt 1 view .LVU907
 966:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 2358              		.loc 1 966 36 is_stmt 0 view .LVU908
 2359 00a8 0793     		str	r3, [sp, #28]
 967:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 2360              		.loc 1 967 3 is_stmt 1 view .LVU909
 967:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 2361              		.loc 1 967 36 is_stmt 0 view .LVU910
 2362 00aa 0893     		str	r3, [sp, #32]
 968:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 2363              		.loc 1 968 3 is_stmt 1 view .LVU911
 968:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 2364              		.loc 1 968 39 is_stmt 0 view .LVU912
 2365 00ac 4FF00072 		mov	r2, #33554432
 2366 00b0 0992     		str	r2, [sp, #36]
 969:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2367              		.loc 1 969 3 is_stmt 1 view .LVU913
 969:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2368              		.loc 1 969 37 is_stmt 0 view .LVU914
 2369 00b2 0A93     		str	r3, [sp, #40]
 970:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 2370              		.loc 1 970 3 is_stmt 1 view .LVU915
 970:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 2371              		.loc 1 970 40 is_stmt 0 view .LVU916
 2372 00b4 0B93     		str	r3, [sp, #44]
 971:Core/Src/main.c ****   {
 2373              		.loc 1 971 3 is_stmt 1 view .LVU917
 971:Core/Src/main.c ****   {
 2374              		.loc 1 971 7 is_stmt 0 view .LVU918
 2375 00b6 01A9     		add	r1, sp, #4
 2376 00b8 0A48     		ldr	r0, .L125
 2377 00ba FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2378              	.LVL86:
 971:Core/Src/main.c ****   {
 2379              		.loc 1 971 6 view .LVU919
 2380 00be 70B9     		cbnz	r0, .L124
 978:Core/Src/main.c **** 
 2381              		.loc 1 978 3 is_stmt 1 view .LVU920
 2382 00c0 0848     		ldr	r0, .L125
 2383 00c2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2384              	.LVL87:
 980:Core/Src/main.c **** 
 2385              		.loc 1 980 1 is_stmt 0 view .LVU921
 2386 00c6 1AB0     		add	sp, sp, #104
 2387              	.LCFI30:
 2388              		.cfi_remember_state
 2389              		.cfi_def_cfa_offset 8
 2390              		@ sp needed
 2391 00c8 10BD     		pop	{r4, pc}
 2392              	.L119:
 2393              	.LCFI31:
 2394              		.cfi_restore_state
 931:Core/Src/main.c ****   }
ARM GAS  /tmp/ccRZlU69.s 			page 84


 2395              		.loc 1 931 5 is_stmt 1 view .LVU922
 2396 00ca FFF7FEFF 		bl	Error_Handler
 2397              	.LVL88:
 2398              	.L120:
 936:Core/Src/main.c ****   }
 2399              		.loc 1 936 5 view .LVU923
 2400 00ce FFF7FEFF 		bl	Error_Handler
 2401              	.LVL89:
 2402              	.L121:
 940:Core/Src/main.c ****   }
 2403              		.loc 1 940 5 view .LVU924
 2404 00d2 FFF7FEFF 		bl	Error_Handler
 2405              	.LVL90:
 2406              	.L122:
 947:Core/Src/main.c ****   }
 2407              		.loc 1 947 5 view .LVU925
 2408 00d6 FFF7FEFF 		bl	Error_Handler
 2409              	.LVL91:
 2410              	.L123:
 958:Core/Src/main.c ****   }
 2411              		.loc 1 958 5 view .LVU926
 2412 00da FFF7FEFF 		bl	Error_Handler
 2413              	.LVL92:
 2414              	.L124:
 973:Core/Src/main.c ****   }
 2415              		.loc 1 973 5 view .LVU927
 2416 00de FFF7FEFF 		bl	Error_Handler
 2417              	.LVL93:
 2418              	.L126:
 2419 00e2 00BF     		.align	2
 2420              	.L125:
 2421 00e4 00000000 		.word	htim1
 2422 00e8 00000140 		.word	1073807360
 2423              		.cfi_endproc
 2424              	.LFE156:
 2426              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2427              		.align	1
 2428              		.syntax unified
 2429              		.thumb
 2430              		.thumb_func
 2432              	MX_TIM2_Init:
 2433              	.LFB157:
 988:Core/Src/main.c **** 
 2434              		.loc 1 988 1 view -0
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 56
 2437              		@ frame_needed = 0, uses_anonymous_args = 0
 2438 0000 00B5     		push	{lr}
 2439              	.LCFI32:
 2440              		.cfi_def_cfa_offset 4
 2441              		.cfi_offset 14, -4
 2442 0002 8FB0     		sub	sp, sp, #60
 2443              	.LCFI33:
 2444              		.cfi_def_cfa_offset 64
 994:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2445              		.loc 1 994 3 view .LVU929
 994:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  /tmp/ccRZlU69.s 			page 85


 2446              		.loc 1 994 26 is_stmt 0 view .LVU930
 2447 0004 0023     		movs	r3, #0
 2448 0006 0A93     		str	r3, [sp, #40]
 2449 0008 0B93     		str	r3, [sp, #44]
 2450 000a 0C93     		str	r3, [sp, #48]
 2451 000c 0D93     		str	r3, [sp, #52]
 995:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2452              		.loc 1 995 3 is_stmt 1 view .LVU931
 995:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2453              		.loc 1 995 27 is_stmt 0 view .LVU932
 2454 000e 0793     		str	r3, [sp, #28]
 2455 0010 0893     		str	r3, [sp, #32]
 2456 0012 0993     		str	r3, [sp, #36]
 996:Core/Src/main.c **** 
 2457              		.loc 1 996 3 is_stmt 1 view .LVU933
 996:Core/Src/main.c **** 
 2458              		.loc 1 996 22 is_stmt 0 view .LVU934
 2459 0014 0093     		str	r3, [sp]
 2460 0016 0193     		str	r3, [sp, #4]
 2461 0018 0293     		str	r3, [sp, #8]
 2462 001a 0393     		str	r3, [sp, #12]
 2463 001c 0493     		str	r3, [sp, #16]
 2464 001e 0593     		str	r3, [sp, #20]
 2465 0020 0693     		str	r3, [sp, #24]
1001:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2466              		.loc 1 1001 3 is_stmt 1 view .LVU935
1001:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2467              		.loc 1 1001 18 is_stmt 0 view .LVU936
 2468 0022 1E48     		ldr	r0, .L139
 2469 0024 4FF08042 		mov	r2, #1073741824
 2470 0028 0260     		str	r2, [r0]
1002:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2471              		.loc 1 1002 3 is_stmt 1 view .LVU937
1002:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2472              		.loc 1 1002 24 is_stmt 0 view .LVU938
 2473 002a 4360     		str	r3, [r0, #4]
1003:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 2474              		.loc 1 1003 3 is_stmt 1 view .LVU939
1003:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 2475              		.loc 1 1003 26 is_stmt 0 view .LVU940
 2476 002c 8360     		str	r3, [r0, #8]
1004:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2477              		.loc 1 1004 3 is_stmt 1 view .LVU941
1004:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2478              		.loc 1 1004 21 is_stmt 0 view .LVU942
 2479 002e 4FF0FF32 		mov	r2, #-1
 2480 0032 C260     		str	r2, [r0, #12]
1005:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2481              		.loc 1 1005 3 is_stmt 1 view .LVU943
1005:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2482              		.loc 1 1005 28 is_stmt 0 view .LVU944
 2483 0034 0361     		str	r3, [r0, #16]
1006:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2484              		.loc 1 1006 3 is_stmt 1 view .LVU945
1006:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2485              		.loc 1 1006 32 is_stmt 0 view .LVU946
 2486 0036 8361     		str	r3, [r0, #24]
ARM GAS  /tmp/ccRZlU69.s 			page 86


1007:Core/Src/main.c ****   {
 2487              		.loc 1 1007 3 is_stmt 1 view .LVU947
1007:Core/Src/main.c ****   {
 2488              		.loc 1 1007 7 is_stmt 0 view .LVU948
 2489 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2490              	.LVL94:
1007:Core/Src/main.c ****   {
 2491              		.loc 1 1007 6 view .LVU949
 2492 003c 20BB     		cbnz	r0, .L134
1011:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2493              		.loc 1 1011 3 is_stmt 1 view .LVU950
1011:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2494              		.loc 1 1011 34 is_stmt 0 view .LVU951
 2495 003e 4FF48053 		mov	r3, #4096
 2496 0042 0A93     		str	r3, [sp, #40]
1012:Core/Src/main.c ****   {
 2497              		.loc 1 1012 3 is_stmt 1 view .LVU952
1012:Core/Src/main.c ****   {
 2498              		.loc 1 1012 7 is_stmt 0 view .LVU953
 2499 0044 0AA9     		add	r1, sp, #40
 2500 0046 1548     		ldr	r0, .L139
 2501 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2502              	.LVL95:
1012:Core/Src/main.c ****   {
 2503              		.loc 1 1012 6 view .LVU954
 2504 004c F0B9     		cbnz	r0, .L135
1016:Core/Src/main.c ****   {
 2505              		.loc 1 1016 3 is_stmt 1 view .LVU955
1016:Core/Src/main.c ****   {
 2506              		.loc 1 1016 7 is_stmt 0 view .LVU956
 2507 004e 1348     		ldr	r0, .L139
 2508 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2509              	.LVL96:
1016:Core/Src/main.c ****   {
 2510              		.loc 1 1016 6 view .LVU957
 2511 0054 E0B9     		cbnz	r0, .L136
1020:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2512              		.loc 1 1020 3 is_stmt 1 view .LVU958
1020:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2513              		.loc 1 1020 37 is_stmt 0 view .LVU959
 2514 0056 0023     		movs	r3, #0
 2515 0058 0793     		str	r3, [sp, #28]
1021:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2516              		.loc 1 1021 3 is_stmt 1 view .LVU960
1021:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2517              		.loc 1 1021 33 is_stmt 0 view .LVU961
 2518 005a 0993     		str	r3, [sp, #36]
1022:Core/Src/main.c ****   {
 2519              		.loc 1 1022 3 is_stmt 1 view .LVU962
1022:Core/Src/main.c ****   {
 2520              		.loc 1 1022 7 is_stmt 0 view .LVU963
 2521 005c 07A9     		add	r1, sp, #28
 2522 005e 0F48     		ldr	r0, .L139
 2523 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2524              	.LVL97:
1022:Core/Src/main.c ****   {
 2525              		.loc 1 1022 6 view .LVU964
ARM GAS  /tmp/ccRZlU69.s 			page 87


 2526 0064 B0B9     		cbnz	r0, .L137
1026:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2527              		.loc 1 1026 3 is_stmt 1 view .LVU965
1026:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2528              		.loc 1 1026 20 is_stmt 0 view .LVU966
 2529 0066 6023     		movs	r3, #96
 2530 0068 0093     		str	r3, [sp]
1027:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2531              		.loc 1 1027 3 is_stmt 1 view .LVU967
1027:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2532              		.loc 1 1027 19 is_stmt 0 view .LVU968
 2533 006a 0022     		movs	r2, #0
 2534 006c 0192     		str	r2, [sp, #4]
1028:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2535              		.loc 1 1028 3 is_stmt 1 view .LVU969
1028:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2536              		.loc 1 1028 24 is_stmt 0 view .LVU970
 2537 006e 0292     		str	r2, [sp, #8]
1029:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2538              		.loc 1 1029 3 is_stmt 1 view .LVU971
1029:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2539              		.loc 1 1029 24 is_stmt 0 view .LVU972
 2540 0070 0492     		str	r2, [sp, #16]
1030:Core/Src/main.c ****   {
 2541              		.loc 1 1030 3 is_stmt 1 view .LVU973
1030:Core/Src/main.c ****   {
 2542              		.loc 1 1030 7 is_stmt 0 view .LVU974
 2543 0072 6946     		mov	r1, sp
 2544 0074 0948     		ldr	r0, .L139
 2545 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2546              	.LVL98:
1030:Core/Src/main.c ****   {
 2547              		.loc 1 1030 6 view .LVU975
 2548 007a 68B9     		cbnz	r0, .L138
1037:Core/Src/main.c **** 
 2549              		.loc 1 1037 3 is_stmt 1 view .LVU976
 2550 007c 0748     		ldr	r0, .L139
 2551 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2552              	.LVL99:
1039:Core/Src/main.c **** 
 2553              		.loc 1 1039 1 is_stmt 0 view .LVU977
 2554 0082 0FB0     		add	sp, sp, #60
 2555              	.LCFI34:
 2556              		.cfi_remember_state
 2557              		.cfi_def_cfa_offset 4
 2558              		@ sp needed
 2559 0084 5DF804FB 		ldr	pc, [sp], #4
 2560              	.L134:
 2561              	.LCFI35:
 2562              		.cfi_restore_state
1009:Core/Src/main.c ****   }
 2563              		.loc 1 1009 5 is_stmt 1 view .LVU978
 2564 0088 FFF7FEFF 		bl	Error_Handler
 2565              	.LVL100:
 2566              	.L135:
1014:Core/Src/main.c ****   }
 2567              		.loc 1 1014 5 view .LVU979
ARM GAS  /tmp/ccRZlU69.s 			page 88


 2568 008c FFF7FEFF 		bl	Error_Handler
 2569              	.LVL101:
 2570              	.L136:
1018:Core/Src/main.c ****   }
 2571              		.loc 1 1018 5 view .LVU980
 2572 0090 FFF7FEFF 		bl	Error_Handler
 2573              	.LVL102:
 2574              	.L137:
1024:Core/Src/main.c ****   }
 2575              		.loc 1 1024 5 view .LVU981
 2576 0094 FFF7FEFF 		bl	Error_Handler
 2577              	.LVL103:
 2578              	.L138:
1032:Core/Src/main.c ****   }
 2579              		.loc 1 1032 5 view .LVU982
 2580 0098 FFF7FEFF 		bl	Error_Handler
 2581              	.LVL104:
 2582              	.L140:
 2583              		.align	2
 2584              	.L139:
 2585 009c 00000000 		.word	htim2
 2586              		.cfi_endproc
 2587              	.LFE157:
 2589              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2590              		.align	1
 2591              		.syntax unified
 2592              		.thumb
 2593              		.thumb_func
 2595              	MX_TIM3_Init:
 2596              	.LFB158:
1047:Core/Src/main.c **** 
 2597              		.loc 1 1047 1 view -0
 2598              		.cfi_startproc
 2599              		@ args = 0, pretend = 0, frame = 56
 2600              		@ frame_needed = 0, uses_anonymous_args = 0
 2601 0000 00B5     		push	{lr}
 2602              	.LCFI36:
 2603              		.cfi_def_cfa_offset 4
 2604              		.cfi_offset 14, -4
 2605 0002 8FB0     		sub	sp, sp, #60
 2606              	.LCFI37:
 2607              		.cfi_def_cfa_offset 64
1053:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2608              		.loc 1 1053 3 view .LVU984
1053:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2609              		.loc 1 1053 26 is_stmt 0 view .LVU985
 2610 0004 0023     		movs	r3, #0
 2611 0006 0A93     		str	r3, [sp, #40]
 2612 0008 0B93     		str	r3, [sp, #44]
 2613 000a 0C93     		str	r3, [sp, #48]
 2614 000c 0D93     		str	r3, [sp, #52]
1054:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2615              		.loc 1 1054 3 is_stmt 1 view .LVU986
1054:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2616              		.loc 1 1054 27 is_stmt 0 view .LVU987
 2617 000e 0793     		str	r3, [sp, #28]
 2618 0010 0893     		str	r3, [sp, #32]
ARM GAS  /tmp/ccRZlU69.s 			page 89


 2619 0012 0993     		str	r3, [sp, #36]
1055:Core/Src/main.c **** 
 2620              		.loc 1 1055 3 is_stmt 1 view .LVU988
1055:Core/Src/main.c **** 
 2621              		.loc 1 1055 22 is_stmt 0 view .LVU989
 2622 0014 0093     		str	r3, [sp]
 2623 0016 0193     		str	r3, [sp, #4]
 2624 0018 0293     		str	r3, [sp, #8]
 2625 001a 0393     		str	r3, [sp, #12]
 2626 001c 0493     		str	r3, [sp, #16]
 2627 001e 0593     		str	r3, [sp, #20]
 2628 0020 0693     		str	r3, [sp, #24]
1060:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2629              		.loc 1 1060 3 is_stmt 1 view .LVU990
1060:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2630              		.loc 1 1060 18 is_stmt 0 view .LVU991
 2631 0022 1E48     		ldr	r0, .L153
 2632 0024 1E4A     		ldr	r2, .L153+4
 2633 0026 0260     		str	r2, [r0]
1061:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2634              		.loc 1 1061 3 is_stmt 1 view .LVU992
1061:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2635              		.loc 1 1061 24 is_stmt 0 view .LVU993
 2636 0028 4360     		str	r3, [r0, #4]
1062:Core/Src/main.c ****   htim3.Init.Period = 65535;
 2637              		.loc 1 1062 3 is_stmt 1 view .LVU994
1062:Core/Src/main.c ****   htim3.Init.Period = 65535;
 2638              		.loc 1 1062 26 is_stmt 0 view .LVU995
 2639 002a 8360     		str	r3, [r0, #8]
1063:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2640              		.loc 1 1063 3 is_stmt 1 view .LVU996
1063:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2641              		.loc 1 1063 21 is_stmt 0 view .LVU997
 2642 002c 4FF6FF72 		movw	r2, #65535
 2643 0030 C260     		str	r2, [r0, #12]
1064:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2644              		.loc 1 1064 3 is_stmt 1 view .LVU998
1064:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2645              		.loc 1 1064 28 is_stmt 0 view .LVU999
 2646 0032 0361     		str	r3, [r0, #16]
1065:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2647              		.loc 1 1065 3 is_stmt 1 view .LVU1000
1065:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 2648              		.loc 1 1065 32 is_stmt 0 view .LVU1001
 2649 0034 8361     		str	r3, [r0, #24]
1066:Core/Src/main.c ****   {
 2650              		.loc 1 1066 3 is_stmt 1 view .LVU1002
1066:Core/Src/main.c ****   {
 2651              		.loc 1 1066 7 is_stmt 0 view .LVU1003
 2652 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2653              	.LVL105:
1066:Core/Src/main.c ****   {
 2654              		.loc 1 1066 6 view .LVU1004
 2655 003a 20BB     		cbnz	r0, .L148
1070:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 2656              		.loc 1 1070 3 is_stmt 1 view .LVU1005
1070:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
ARM GAS  /tmp/ccRZlU69.s 			page 90


 2657              		.loc 1 1070 34 is_stmt 0 view .LVU1006
 2658 003c 4FF48053 		mov	r3, #4096
 2659 0040 0A93     		str	r3, [sp, #40]
1071:Core/Src/main.c ****   {
 2660              		.loc 1 1071 3 is_stmt 1 view .LVU1007
1071:Core/Src/main.c ****   {
 2661              		.loc 1 1071 7 is_stmt 0 view .LVU1008
 2662 0042 0AA9     		add	r1, sp, #40
 2663 0044 1548     		ldr	r0, .L153
 2664 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2665              	.LVL106:
1071:Core/Src/main.c ****   {
 2666              		.loc 1 1071 6 view .LVU1009
 2667 004a F0B9     		cbnz	r0, .L149
1075:Core/Src/main.c ****   {
 2668              		.loc 1 1075 3 is_stmt 1 view .LVU1010
1075:Core/Src/main.c ****   {
 2669              		.loc 1 1075 7 is_stmt 0 view .LVU1011
 2670 004c 1348     		ldr	r0, .L153
 2671 004e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2672              	.LVL107:
1075:Core/Src/main.c ****   {
 2673              		.loc 1 1075 6 view .LVU1012
 2674 0052 E0B9     		cbnz	r0, .L150
1079:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2675              		.loc 1 1079 3 is_stmt 1 view .LVU1013
1079:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2676              		.loc 1 1079 37 is_stmt 0 view .LVU1014
 2677 0054 0023     		movs	r3, #0
 2678 0056 0793     		str	r3, [sp, #28]
1080:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2679              		.loc 1 1080 3 is_stmt 1 view .LVU1015
1080:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2680              		.loc 1 1080 33 is_stmt 0 view .LVU1016
 2681 0058 0993     		str	r3, [sp, #36]
1081:Core/Src/main.c ****   {
 2682              		.loc 1 1081 3 is_stmt 1 view .LVU1017
1081:Core/Src/main.c ****   {
 2683              		.loc 1 1081 7 is_stmt 0 view .LVU1018
 2684 005a 07A9     		add	r1, sp, #28
 2685 005c 0F48     		ldr	r0, .L153
 2686 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2687              	.LVL108:
1081:Core/Src/main.c ****   {
 2688              		.loc 1 1081 6 view .LVU1019
 2689 0062 B0B9     		cbnz	r0, .L151
1085:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2690              		.loc 1 1085 3 is_stmt 1 view .LVU1020
1085:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2691              		.loc 1 1085 20 is_stmt 0 view .LVU1021
 2692 0064 6023     		movs	r3, #96
 2693 0066 0093     		str	r3, [sp]
1086:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2694              		.loc 1 1086 3 is_stmt 1 view .LVU1022
1086:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2695              		.loc 1 1086 19 is_stmt 0 view .LVU1023
 2696 0068 0022     		movs	r2, #0
ARM GAS  /tmp/ccRZlU69.s 			page 91


 2697 006a 0192     		str	r2, [sp, #4]
1087:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2698              		.loc 1 1087 3 is_stmt 1 view .LVU1024
1087:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2699              		.loc 1 1087 24 is_stmt 0 view .LVU1025
 2700 006c 0292     		str	r2, [sp, #8]
1088:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2701              		.loc 1 1088 3 is_stmt 1 view .LVU1026
1088:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2702              		.loc 1 1088 24 is_stmt 0 view .LVU1027
 2703 006e 0492     		str	r2, [sp, #16]
1089:Core/Src/main.c ****   {
 2704              		.loc 1 1089 3 is_stmt 1 view .LVU1028
1089:Core/Src/main.c ****   {
 2705              		.loc 1 1089 7 is_stmt 0 view .LVU1029
 2706 0070 6946     		mov	r1, sp
 2707 0072 0A48     		ldr	r0, .L153
 2708 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2709              	.LVL109:
1089:Core/Src/main.c ****   {
 2710              		.loc 1 1089 6 view .LVU1030
 2711 0078 68B9     		cbnz	r0, .L152
1096:Core/Src/main.c **** 
 2712              		.loc 1 1096 3 is_stmt 1 view .LVU1031
 2713 007a 0848     		ldr	r0, .L153
 2714 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2715              	.LVL110:
1098:Core/Src/main.c **** 
 2716              		.loc 1 1098 1 is_stmt 0 view .LVU1032
 2717 0080 0FB0     		add	sp, sp, #60
 2718              	.LCFI38:
 2719              		.cfi_remember_state
 2720              		.cfi_def_cfa_offset 4
 2721              		@ sp needed
 2722 0082 5DF804FB 		ldr	pc, [sp], #4
 2723              	.L148:
 2724              	.LCFI39:
 2725              		.cfi_restore_state
1068:Core/Src/main.c ****   }
 2726              		.loc 1 1068 5 is_stmt 1 view .LVU1033
 2727 0086 FFF7FEFF 		bl	Error_Handler
 2728              	.LVL111:
 2729              	.L149:
1073:Core/Src/main.c ****   }
 2730              		.loc 1 1073 5 view .LVU1034
 2731 008a FFF7FEFF 		bl	Error_Handler
 2732              	.LVL112:
 2733              	.L150:
1077:Core/Src/main.c ****   }
 2734              		.loc 1 1077 5 view .LVU1035
 2735 008e FFF7FEFF 		bl	Error_Handler
 2736              	.LVL113:
 2737              	.L151:
1083:Core/Src/main.c ****   }
 2738              		.loc 1 1083 5 view .LVU1036
 2739 0092 FFF7FEFF 		bl	Error_Handler
 2740              	.LVL114:
ARM GAS  /tmp/ccRZlU69.s 			page 92


 2741              	.L152:
1091:Core/Src/main.c ****   }
 2742              		.loc 1 1091 5 view .LVU1037
 2743 0096 FFF7FEFF 		bl	Error_Handler
 2744              	.LVL115:
 2745              	.L154:
 2746 009a 00BF     		.align	2
 2747              	.L153:
 2748 009c 00000000 		.word	htim3
 2749 00a0 00040040 		.word	1073742848
 2750              		.cfi_endproc
 2751              	.LFE158:
 2753              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2754              		.align	1
 2755              		.syntax unified
 2756              		.thumb
 2757              		.thumb_func
 2759              	MX_TIM5_Init:
 2760              	.LFB159:
1106:Core/Src/main.c **** 
 2761              		.loc 1 1106 1 view -0
 2762              		.cfi_startproc
 2763              		@ args = 0, pretend = 0, frame = 56
 2764              		@ frame_needed = 0, uses_anonymous_args = 0
 2765 0000 00B5     		push	{lr}
 2766              	.LCFI40:
 2767              		.cfi_def_cfa_offset 4
 2768              		.cfi_offset 14, -4
 2769 0002 8FB0     		sub	sp, sp, #60
 2770              	.LCFI41:
 2771              		.cfi_def_cfa_offset 64
1112:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2772              		.loc 1 1112 3 view .LVU1039
1112:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2773              		.loc 1 1112 26 is_stmt 0 view .LVU1040
 2774 0004 0023     		movs	r3, #0
 2775 0006 0A93     		str	r3, [sp, #40]
 2776 0008 0B93     		str	r3, [sp, #44]
 2777 000a 0C93     		str	r3, [sp, #48]
 2778 000c 0D93     		str	r3, [sp, #52]
1113:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2779              		.loc 1 1113 3 is_stmt 1 view .LVU1041
1113:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2780              		.loc 1 1113 27 is_stmt 0 view .LVU1042
 2781 000e 0793     		str	r3, [sp, #28]
 2782 0010 0893     		str	r3, [sp, #32]
 2783 0012 0993     		str	r3, [sp, #36]
1114:Core/Src/main.c **** 
 2784              		.loc 1 1114 3 is_stmt 1 view .LVU1043
1114:Core/Src/main.c **** 
 2785              		.loc 1 1114 22 is_stmt 0 view .LVU1044
 2786 0014 0093     		str	r3, [sp]
 2787 0016 0193     		str	r3, [sp, #4]
 2788 0018 0293     		str	r3, [sp, #8]
 2789 001a 0393     		str	r3, [sp, #12]
 2790 001c 0493     		str	r3, [sp, #16]
 2791 001e 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccRZlU69.s 			page 93


 2792 0020 0693     		str	r3, [sp, #24]
1119:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 2793              		.loc 1 1119 3 is_stmt 1 view .LVU1045
1119:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 2794              		.loc 1 1119 18 is_stmt 0 view .LVU1046
 2795 0022 1E48     		ldr	r0, .L167
 2796 0024 1E4A     		ldr	r2, .L167+4
 2797 0026 0260     		str	r2, [r0]
1120:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2798              		.loc 1 1120 3 is_stmt 1 view .LVU1047
1120:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2799              		.loc 1 1120 24 is_stmt 0 view .LVU1048
 2800 0028 4360     		str	r3, [r0, #4]
1121:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
 2801              		.loc 1 1121 3 is_stmt 1 view .LVU1049
1121:Core/Src/main.c ****   htim5.Init.Period = 4294967295;
 2802              		.loc 1 1121 26 is_stmt 0 view .LVU1050
 2803 002a 8360     		str	r3, [r0, #8]
1122:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2804              		.loc 1 1122 3 is_stmt 1 view .LVU1051
1122:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2805              		.loc 1 1122 21 is_stmt 0 view .LVU1052
 2806 002c 4FF0FF32 		mov	r2, #-1
 2807 0030 C260     		str	r2, [r0, #12]
1123:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2808              		.loc 1 1123 3 is_stmt 1 view .LVU1053
1123:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2809              		.loc 1 1123 28 is_stmt 0 view .LVU1054
 2810 0032 0361     		str	r3, [r0, #16]
1124:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 2811              		.loc 1 1124 3 is_stmt 1 view .LVU1055
1124:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 2812              		.loc 1 1124 32 is_stmt 0 view .LVU1056
 2813 0034 8361     		str	r3, [r0, #24]
1125:Core/Src/main.c ****   {
 2814              		.loc 1 1125 3 is_stmt 1 view .LVU1057
1125:Core/Src/main.c ****   {
 2815              		.loc 1 1125 7 is_stmt 0 view .LVU1058
 2816 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2817              	.LVL116:
1125:Core/Src/main.c ****   {
 2818              		.loc 1 1125 6 view .LVU1059
 2819 003a 28BB     		cbnz	r0, .L162
1129:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 2820              		.loc 1 1129 3 is_stmt 1 view .LVU1060
1129:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 2821              		.loc 1 1129 34 is_stmt 0 view .LVU1061
 2822 003c 4FF48053 		mov	r3, #4096
 2823 0040 0A93     		str	r3, [sp, #40]
1130:Core/Src/main.c ****   {
 2824              		.loc 1 1130 3 is_stmt 1 view .LVU1062
1130:Core/Src/main.c ****   {
 2825              		.loc 1 1130 7 is_stmt 0 view .LVU1063
 2826 0042 0AA9     		add	r1, sp, #40
 2827 0044 1548     		ldr	r0, .L167
 2828 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2829              	.LVL117:
ARM GAS  /tmp/ccRZlU69.s 			page 94


1130:Core/Src/main.c ****   {
 2830              		.loc 1 1130 6 view .LVU1064
 2831 004a F8B9     		cbnz	r0, .L163
1134:Core/Src/main.c ****   {
 2832              		.loc 1 1134 3 is_stmt 1 view .LVU1065
1134:Core/Src/main.c ****   {
 2833              		.loc 1 1134 7 is_stmt 0 view .LVU1066
 2834 004c 1348     		ldr	r0, .L167
 2835 004e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2836              	.LVL118:
1134:Core/Src/main.c ****   {
 2837              		.loc 1 1134 6 view .LVU1067
 2838 0052 E8B9     		cbnz	r0, .L164
1138:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2839              		.loc 1 1138 3 is_stmt 1 view .LVU1068
1138:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2840              		.loc 1 1138 37 is_stmt 0 view .LVU1069
 2841 0054 0023     		movs	r3, #0
 2842 0056 0793     		str	r3, [sp, #28]
1139:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2843              		.loc 1 1139 3 is_stmt 1 view .LVU1070
1139:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2844              		.loc 1 1139 33 is_stmt 0 view .LVU1071
 2845 0058 0993     		str	r3, [sp, #36]
1140:Core/Src/main.c ****   {
 2846              		.loc 1 1140 3 is_stmt 1 view .LVU1072
1140:Core/Src/main.c ****   {
 2847              		.loc 1 1140 7 is_stmt 0 view .LVU1073
 2848 005a 07A9     		add	r1, sp, #28
 2849 005c 0F48     		ldr	r0, .L167
 2850 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2851              	.LVL119:
1140:Core/Src/main.c ****   {
 2852              		.loc 1 1140 6 view .LVU1074
 2853 0062 B8B9     		cbnz	r0, .L165
1144:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2854              		.loc 1 1144 3 is_stmt 1 view .LVU1075
1144:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2855              		.loc 1 1144 20 is_stmt 0 view .LVU1076
 2856 0064 6023     		movs	r3, #96
 2857 0066 0093     		str	r3, [sp]
1145:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2858              		.loc 1 1145 3 is_stmt 1 view .LVU1077
1145:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2859              		.loc 1 1145 19 is_stmt 0 view .LVU1078
 2860 0068 0023     		movs	r3, #0
 2861 006a 0193     		str	r3, [sp, #4]
1146:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2862              		.loc 1 1146 3 is_stmt 1 view .LVU1079
1146:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2863              		.loc 1 1146 24 is_stmt 0 view .LVU1080
 2864 006c 0293     		str	r3, [sp, #8]
1147:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2865              		.loc 1 1147 3 is_stmt 1 view .LVU1081
1147:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2866              		.loc 1 1147 24 is_stmt 0 view .LVU1082
 2867 006e 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccRZlU69.s 			page 95


1148:Core/Src/main.c ****   {
 2868              		.loc 1 1148 3 is_stmt 1 view .LVU1083
1148:Core/Src/main.c ****   {
 2869              		.loc 1 1148 7 is_stmt 0 view .LVU1084
 2870 0070 0C22     		movs	r2, #12
 2871 0072 6946     		mov	r1, sp
 2872 0074 0948     		ldr	r0, .L167
 2873 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2874              	.LVL120:
1148:Core/Src/main.c ****   {
 2875              		.loc 1 1148 6 view .LVU1085
 2876 007a 68B9     		cbnz	r0, .L166
1155:Core/Src/main.c **** 
 2877              		.loc 1 1155 3 is_stmt 1 view .LVU1086
 2878 007c 0748     		ldr	r0, .L167
 2879 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2880              	.LVL121:
1157:Core/Src/main.c **** 
 2881              		.loc 1 1157 1 is_stmt 0 view .LVU1087
 2882 0082 0FB0     		add	sp, sp, #60
 2883              	.LCFI42:
 2884              		.cfi_remember_state
 2885              		.cfi_def_cfa_offset 4
 2886              		@ sp needed
 2887 0084 5DF804FB 		ldr	pc, [sp], #4
 2888              	.L162:
 2889              	.LCFI43:
 2890              		.cfi_restore_state
1127:Core/Src/main.c ****   }
 2891              		.loc 1 1127 5 is_stmt 1 view .LVU1088
 2892 0088 FFF7FEFF 		bl	Error_Handler
 2893              	.LVL122:
 2894              	.L163:
1132:Core/Src/main.c ****   }
 2895              		.loc 1 1132 5 view .LVU1089
 2896 008c FFF7FEFF 		bl	Error_Handler
 2897              	.LVL123:
 2898              	.L164:
1136:Core/Src/main.c ****   }
 2899              		.loc 1 1136 5 view .LVU1090
 2900 0090 FFF7FEFF 		bl	Error_Handler
 2901              	.LVL124:
 2902              	.L165:
1142:Core/Src/main.c ****   }
 2903              		.loc 1 1142 5 view .LVU1091
 2904 0094 FFF7FEFF 		bl	Error_Handler
 2905              	.LVL125:
 2906              	.L166:
1150:Core/Src/main.c ****   }
 2907              		.loc 1 1150 5 view .LVU1092
 2908 0098 FFF7FEFF 		bl	Error_Handler
 2909              	.LVL126:
 2910              	.L168:
 2911              		.align	2
 2912              	.L167:
 2913 009c 00000000 		.word	htim5
 2914 00a0 000C0040 		.word	1073744896
ARM GAS  /tmp/ccRZlU69.s 			page 96


 2915              		.cfi_endproc
 2916              	.LFE159:
 2918              		.section	.text.MX_TIM8_Init,"ax",%progbits
 2919              		.align	1
 2920              		.syntax unified
 2921              		.thumb
 2922              		.thumb_func
 2924              	MX_TIM8_Init:
 2925              	.LFB160:
1165:Core/Src/main.c **** 
 2926              		.loc 1 1165 1 view -0
 2927              		.cfi_startproc
 2928              		@ args = 0, pretend = 0, frame = 32
 2929              		@ frame_needed = 0, uses_anonymous_args = 0
 2930 0000 00B5     		push	{lr}
 2931              	.LCFI44:
 2932              		.cfi_def_cfa_offset 4
 2933              		.cfi_offset 14, -4
 2934 0002 89B0     		sub	sp, sp, #36
 2935              	.LCFI45:
 2936              		.cfi_def_cfa_offset 40
1171:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2937              		.loc 1 1171 3 view .LVU1094
1171:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2938              		.loc 1 1171 26 is_stmt 0 view .LVU1095
 2939 0004 0023     		movs	r3, #0
 2940 0006 0493     		str	r3, [sp, #16]
 2941 0008 0593     		str	r3, [sp, #20]
 2942 000a 0693     		str	r3, [sp, #24]
 2943 000c 0793     		str	r3, [sp, #28]
1172:Core/Src/main.c **** 
 2944              		.loc 1 1172 3 is_stmt 1 view .LVU1096
1172:Core/Src/main.c **** 
 2945              		.loc 1 1172 27 is_stmt 0 view .LVU1097
 2946 000e 0193     		str	r3, [sp, #4]
 2947 0010 0293     		str	r3, [sp, #8]
 2948 0012 0393     		str	r3, [sp, #12]
1177:Core/Src/main.c ****   htim8.Init.Prescaler = 0;
 2949              		.loc 1 1177 3 is_stmt 1 view .LVU1098
1177:Core/Src/main.c ****   htim8.Init.Prescaler = 0;
 2950              		.loc 1 1177 18 is_stmt 0 view .LVU1099
 2951 0014 1348     		ldr	r0, .L177
 2952 0016 144A     		ldr	r2, .L177+4
 2953 0018 0260     		str	r2, [r0]
1178:Core/Src/main.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 2954              		.loc 1 1178 3 is_stmt 1 view .LVU1100
1178:Core/Src/main.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 2955              		.loc 1 1178 24 is_stmt 0 view .LVU1101
 2956 001a 4360     		str	r3, [r0, #4]
1179:Core/Src/main.c ****   htim8.Init.Period = 65535;
 2957              		.loc 1 1179 3 is_stmt 1 view .LVU1102
1179:Core/Src/main.c ****   htim8.Init.Period = 65535;
 2958              		.loc 1 1179 26 is_stmt 0 view .LVU1103
 2959 001c 8360     		str	r3, [r0, #8]
1180:Core/Src/main.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2960              		.loc 1 1180 3 is_stmt 1 view .LVU1104
1180:Core/Src/main.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccRZlU69.s 			page 97


 2961              		.loc 1 1180 21 is_stmt 0 view .LVU1105
 2962 001e 4FF6FF72 		movw	r2, #65535
 2963 0022 C260     		str	r2, [r0, #12]
1181:Core/Src/main.c ****   htim8.Init.RepetitionCounter = 0;
 2964              		.loc 1 1181 3 is_stmt 1 view .LVU1106
1181:Core/Src/main.c ****   htim8.Init.RepetitionCounter = 0;
 2965              		.loc 1 1181 28 is_stmt 0 view .LVU1107
 2966 0024 0361     		str	r3, [r0, #16]
1182:Core/Src/main.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2967              		.loc 1 1182 3 is_stmt 1 view .LVU1108
1182:Core/Src/main.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2968              		.loc 1 1182 32 is_stmt 0 view .LVU1109
 2969 0026 4361     		str	r3, [r0, #20]
1183:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 2970              		.loc 1 1183 3 is_stmt 1 view .LVU1110
1183:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 2971              		.loc 1 1183 32 is_stmt 0 view .LVU1111
 2972 0028 8361     		str	r3, [r0, #24]
1184:Core/Src/main.c ****   {
 2973              		.loc 1 1184 3 is_stmt 1 view .LVU1112
1184:Core/Src/main.c ****   {
 2974              		.loc 1 1184 7 is_stmt 0 view .LVU1113
 2975 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2976              	.LVL127:
1184:Core/Src/main.c ****   {
 2977              		.loc 1 1184 6 view .LVU1114
 2978 002e 98B9     		cbnz	r0, .L174
1188:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 2979              		.loc 1 1188 3 is_stmt 1 view .LVU1115
1188:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 2980              		.loc 1 1188 34 is_stmt 0 view .LVU1116
 2981 0030 4FF48053 		mov	r3, #4096
 2982 0034 0493     		str	r3, [sp, #16]
1189:Core/Src/main.c ****   {
 2983              		.loc 1 1189 3 is_stmt 1 view .LVU1117
1189:Core/Src/main.c ****   {
 2984              		.loc 1 1189 7 is_stmt 0 view .LVU1118
 2985 0036 04A9     		add	r1, sp, #16
 2986 0038 0A48     		ldr	r0, .L177
 2987 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2988              	.LVL128:
1189:Core/Src/main.c ****   {
 2989              		.loc 1 1189 6 view .LVU1119
 2990 003e 68B9     		cbnz	r0, .L175
1193:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2991              		.loc 1 1193 3 is_stmt 1 view .LVU1120
1193:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 2992              		.loc 1 1193 37 is_stmt 0 view .LVU1121
 2993 0040 0023     		movs	r3, #0
 2994 0042 0193     		str	r3, [sp, #4]
1194:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2995              		.loc 1 1194 3 is_stmt 1 view .LVU1122
1194:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2996              		.loc 1 1194 38 is_stmt 0 view .LVU1123
 2997 0044 0293     		str	r3, [sp, #8]
1195:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 2998              		.loc 1 1195 3 is_stmt 1 view .LVU1124
ARM GAS  /tmp/ccRZlU69.s 			page 98


1195:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 2999              		.loc 1 1195 33 is_stmt 0 view .LVU1125
 3000 0046 0393     		str	r3, [sp, #12]
1196:Core/Src/main.c ****   {
 3001              		.loc 1 1196 3 is_stmt 1 view .LVU1126
1196:Core/Src/main.c ****   {
 3002              		.loc 1 1196 7 is_stmt 0 view .LVU1127
 3003 0048 01A9     		add	r1, sp, #4
 3004 004a 0648     		ldr	r0, .L177
 3005 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 3006              	.LVL129:
1196:Core/Src/main.c ****   {
 3007              		.loc 1 1196 6 view .LVU1128
 3008 0050 30B9     		cbnz	r0, .L176
1204:Core/Src/main.c **** 
 3009              		.loc 1 1204 1 view .LVU1129
 3010 0052 09B0     		add	sp, sp, #36
 3011              	.LCFI46:
 3012              		.cfi_remember_state
 3013              		.cfi_def_cfa_offset 4
 3014              		@ sp needed
 3015 0054 5DF804FB 		ldr	pc, [sp], #4
 3016              	.L174:
 3017              	.LCFI47:
 3018              		.cfi_restore_state
1186:Core/Src/main.c ****   }
 3019              		.loc 1 1186 5 is_stmt 1 view .LVU1130
 3020 0058 FFF7FEFF 		bl	Error_Handler
 3021              	.LVL130:
 3022              	.L175:
1191:Core/Src/main.c ****   }
 3023              		.loc 1 1191 5 view .LVU1131
 3024 005c FFF7FEFF 		bl	Error_Handler
 3025              	.LVL131:
 3026              	.L176:
1198:Core/Src/main.c ****   }
 3027              		.loc 1 1198 5 view .LVU1132
 3028 0060 FFF7FEFF 		bl	Error_Handler
 3029              	.LVL132:
 3030              	.L178:
 3031              		.align	2
 3032              	.L177:
 3033 0064 00000000 		.word	htim8
 3034 0068 00040140 		.word	1073808384
 3035              		.cfi_endproc
 3036              	.LFE160:
 3038              		.section	.text.MX_TIM12_Init,"ax",%progbits
 3039              		.align	1
 3040              		.syntax unified
 3041              		.thumb
 3042              		.thumb_func
 3044              	MX_TIM12_Init:
 3045              	.LFB161:
1212:Core/Src/main.c **** 
 3046              		.loc 1 1212 1 view -0
 3047              		.cfi_startproc
 3048              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/ccRZlU69.s 			page 99


 3049              		@ frame_needed = 0, uses_anonymous_args = 0
 3050 0000 00B5     		push	{lr}
 3051              	.LCFI48:
 3052              		.cfi_def_cfa_offset 4
 3053              		.cfi_offset 14, -4
 3054 0002 89B0     		sub	sp, sp, #36
 3055              	.LCFI49:
 3056              		.cfi_def_cfa_offset 40
1218:Core/Src/main.c **** 
 3057              		.loc 1 1218 3 view .LVU1134
1218:Core/Src/main.c **** 
 3058              		.loc 1 1218 22 is_stmt 0 view .LVU1135
 3059 0004 0023     		movs	r3, #0
 3060 0006 0193     		str	r3, [sp, #4]
 3061 0008 0293     		str	r3, [sp, #8]
 3062 000a 0393     		str	r3, [sp, #12]
 3063 000c 0493     		str	r3, [sp, #16]
 3064 000e 0593     		str	r3, [sp, #20]
 3065 0010 0693     		str	r3, [sp, #24]
 3066 0012 0793     		str	r3, [sp, #28]
1223:Core/Src/main.c ****   htim12.Init.Prescaler = 0;
 3067              		.loc 1 1223 3 is_stmt 1 view .LVU1136
1223:Core/Src/main.c ****   htim12.Init.Prescaler = 0;
 3068              		.loc 1 1223 19 is_stmt 0 view .LVU1137
 3069 0014 1048     		ldr	r0, .L185
 3070 0016 114A     		ldr	r2, .L185+4
 3071 0018 0260     		str	r2, [r0]
1224:Core/Src/main.c ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 3072              		.loc 1 1224 3 is_stmt 1 view .LVU1138
1224:Core/Src/main.c ****   htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 3073              		.loc 1 1224 25 is_stmt 0 view .LVU1139
 3074 001a 4360     		str	r3, [r0, #4]
1225:Core/Src/main.c ****   htim12.Init.Period = 65535;
 3075              		.loc 1 1225 3 is_stmt 1 view .LVU1140
1225:Core/Src/main.c ****   htim12.Init.Period = 65535;
 3076              		.loc 1 1225 27 is_stmt 0 view .LVU1141
 3077 001c 8360     		str	r3, [r0, #8]
1226:Core/Src/main.c ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3078              		.loc 1 1226 3 is_stmt 1 view .LVU1142
1226:Core/Src/main.c ****   htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3079              		.loc 1 1226 22 is_stmt 0 view .LVU1143
 3080 001e 4FF6FF72 		movw	r2, #65535
 3081 0022 C260     		str	r2, [r0, #12]
1227:Core/Src/main.c ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3082              		.loc 1 1227 3 is_stmt 1 view .LVU1144
1227:Core/Src/main.c ****   htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3083              		.loc 1 1227 29 is_stmt 0 view .LVU1145
 3084 0024 0361     		str	r3, [r0, #16]
1228:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 3085              		.loc 1 1228 3 is_stmt 1 view .LVU1146
1228:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 3086              		.loc 1 1228 33 is_stmt 0 view .LVU1147
 3087 0026 8361     		str	r3, [r0, #24]
1229:Core/Src/main.c ****   {
 3088              		.loc 1 1229 3 is_stmt 1 view .LVU1148
1229:Core/Src/main.c ****   {
 3089              		.loc 1 1229 7 is_stmt 0 view .LVU1149
ARM GAS  /tmp/ccRZlU69.s 			page 100


 3090 0028 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 3091              	.LVL133:
1229:Core/Src/main.c ****   {
 3092              		.loc 1 1229 6 view .LVU1150
 3093 002c 80B9     		cbnz	r0, .L183
1233:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 3094              		.loc 1 1233 3 is_stmt 1 view .LVU1151
1233:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 3095              		.loc 1 1233 20 is_stmt 0 view .LVU1152
 3096 002e 6023     		movs	r3, #96
 3097 0030 0193     		str	r3, [sp, #4]
1234:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 3098              		.loc 1 1234 3 is_stmt 1 view .LVU1153
1234:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 3099              		.loc 1 1234 19 is_stmt 0 view .LVU1154
 3100 0032 0022     		movs	r2, #0
 3101 0034 0292     		str	r2, [sp, #8]
1235:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 3102              		.loc 1 1235 3 is_stmt 1 view .LVU1155
1235:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 3103              		.loc 1 1235 24 is_stmt 0 view .LVU1156
 3104 0036 0392     		str	r2, [sp, #12]
1236:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 3105              		.loc 1 1236 3 is_stmt 1 view .LVU1157
1236:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 3106              		.loc 1 1236 24 is_stmt 0 view .LVU1158
 3107 0038 0592     		str	r2, [sp, #20]
1237:Core/Src/main.c ****   {
 3108              		.loc 1 1237 3 is_stmt 1 view .LVU1159
1237:Core/Src/main.c ****   {
 3109              		.loc 1 1237 7 is_stmt 0 view .LVU1160
 3110 003a 01A9     		add	r1, sp, #4
 3111 003c 0648     		ldr	r0, .L185
 3112 003e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 3113              	.LVL134:
1237:Core/Src/main.c ****   {
 3114              		.loc 1 1237 6 view .LVU1161
 3115 0042 38B9     		cbnz	r0, .L184
1244:Core/Src/main.c **** 
 3116              		.loc 1 1244 3 is_stmt 1 view .LVU1162
 3117 0044 0448     		ldr	r0, .L185
 3118 0046 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 3119              	.LVL135:
1246:Core/Src/main.c **** 
 3120              		.loc 1 1246 1 is_stmt 0 view .LVU1163
 3121 004a 09B0     		add	sp, sp, #36
 3122              	.LCFI50:
 3123              		.cfi_remember_state
 3124              		.cfi_def_cfa_offset 4
 3125              		@ sp needed
 3126 004c 5DF804FB 		ldr	pc, [sp], #4
 3127              	.L183:
 3128              	.LCFI51:
 3129              		.cfi_restore_state
1231:Core/Src/main.c ****   }
 3130              		.loc 1 1231 5 is_stmt 1 view .LVU1164
 3131 0050 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccRZlU69.s 			page 101


 3132              	.LVL136:
 3133              	.L184:
1239:Core/Src/main.c ****   }
 3134              		.loc 1 1239 5 view .LVU1165
 3135 0054 FFF7FEFF 		bl	Error_Handler
 3136              	.LVL137:
 3137              	.L186:
 3138              		.align	2
 3139              	.L185:
 3140 0058 00000000 		.word	htim12
 3141 005c 00180040 		.word	1073747968
 3142              		.cfi_endproc
 3143              	.LFE161:
 3145              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 3146              		.align	1
 3147              		.syntax unified
 3148              		.thumb
 3149              		.thumb_func
 3151              	MX_USART1_UART_Init:
 3152              	.LFB162:
1254:Core/Src/main.c **** 
 3153              		.loc 1 1254 1 view -0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
 3157 0000 08B5     		push	{r3, lr}
 3158              	.LCFI52:
 3159              		.cfi_def_cfa_offset 8
 3160              		.cfi_offset 3, -8
 3161              		.cfi_offset 14, -4
1263:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 3162              		.loc 1 1263 3 view .LVU1167
1263:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 3163              		.loc 1 1263 19 is_stmt 0 view .LVU1168
 3164 0002 0B48     		ldr	r0, .L191
 3165 0004 0B4B     		ldr	r3, .L191+4
 3166 0006 0360     		str	r3, [r0]
1264:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 3167              		.loc 1 1264 3 is_stmt 1 view .LVU1169
1264:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 3168              		.loc 1 1264 24 is_stmt 0 view .LVU1170
 3169 0008 4FF4E133 		mov	r3, #115200
 3170 000c 4360     		str	r3, [r0, #4]
1265:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 3171              		.loc 1 1265 3 is_stmt 1 view .LVU1171
1265:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 3172              		.loc 1 1265 26 is_stmt 0 view .LVU1172
 3173 000e 0023     		movs	r3, #0
 3174 0010 8360     		str	r3, [r0, #8]
1266:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 3175              		.loc 1 1266 3 is_stmt 1 view .LVU1173
1266:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 3176              		.loc 1 1266 24 is_stmt 0 view .LVU1174
 3177 0012 C360     		str	r3, [r0, #12]
1267:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 3178              		.loc 1 1267 3 is_stmt 1 view .LVU1175
1267:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccRZlU69.s 			page 102


 3179              		.loc 1 1267 22 is_stmt 0 view .LVU1176
 3180 0014 0361     		str	r3, [r0, #16]
1268:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3181              		.loc 1 1268 3 is_stmt 1 view .LVU1177
1268:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3182              		.loc 1 1268 20 is_stmt 0 view .LVU1178
 3183 0016 0C22     		movs	r2, #12
 3184 0018 4261     		str	r2, [r0, #20]
1269:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 3185              		.loc 1 1269 3 is_stmt 1 view .LVU1179
1269:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 3186              		.loc 1 1269 25 is_stmt 0 view .LVU1180
 3187 001a 8361     		str	r3, [r0, #24]
1270:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3188              		.loc 1 1270 3 is_stmt 1 view .LVU1181
1270:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3189              		.loc 1 1270 28 is_stmt 0 view .LVU1182
 3190 001c C361     		str	r3, [r0, #28]
1271:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3191              		.loc 1 1271 3 is_stmt 1 view .LVU1183
1271:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3192              		.loc 1 1271 30 is_stmt 0 view .LVU1184
 3193 001e 0362     		str	r3, [r0, #32]
1272:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 3194              		.loc 1 1272 3 is_stmt 1 view .LVU1185
1272:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 3195              		.loc 1 1272 38 is_stmt 0 view .LVU1186
 3196 0020 4362     		str	r3, [r0, #36]
1273:Core/Src/main.c ****   {
 3197              		.loc 1 1273 3 is_stmt 1 view .LVU1187
1273:Core/Src/main.c ****   {
 3198              		.loc 1 1273 7 is_stmt 0 view .LVU1188
 3199 0022 FFF7FEFF 		bl	HAL_UART_Init
 3200              	.LVL138:
1273:Core/Src/main.c ****   {
 3201              		.loc 1 1273 6 view .LVU1189
 3202 0026 00B9     		cbnz	r0, .L190
1281:Core/Src/main.c **** 
 3203              		.loc 1 1281 1 view .LVU1190
 3204 0028 08BD     		pop	{r3, pc}
 3205              	.L190:
1275:Core/Src/main.c ****   }
 3206              		.loc 1 1275 5 is_stmt 1 view .LVU1191
 3207 002a FFF7FEFF 		bl	Error_Handler
 3208              	.LVL139:
 3209              	.L192:
 3210 002e 00BF     		.align	2
 3211              	.L191:
 3212 0030 00000000 		.word	huart1
 3213 0034 00100140 		.word	1073811456
 3214              		.cfi_endproc
 3215              	.LFE162:
 3217              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 3218              		.align	1
 3219              		.syntax unified
 3220              		.thumb
 3221              		.thumb_func
ARM GAS  /tmp/ccRZlU69.s 			page 103


 3223              	MX_USART6_UART_Init:
 3224              	.LFB163:
1289:Core/Src/main.c **** 
 3225              		.loc 1 1289 1 view -0
 3226              		.cfi_startproc
 3227              		@ args = 0, pretend = 0, frame = 0
 3228              		@ frame_needed = 0, uses_anonymous_args = 0
 3229 0000 08B5     		push	{r3, lr}
 3230              	.LCFI53:
 3231              		.cfi_def_cfa_offset 8
 3232              		.cfi_offset 3, -8
 3233              		.cfi_offset 14, -4
1298:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 3234              		.loc 1 1298 3 view .LVU1193
1298:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 3235              		.loc 1 1298 19 is_stmt 0 view .LVU1194
 3236 0002 0B48     		ldr	r0, .L197
 3237 0004 0B4B     		ldr	r3, .L197+4
 3238 0006 0360     		str	r3, [r0]
1299:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 3239              		.loc 1 1299 3 is_stmt 1 view .LVU1195
1299:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 3240              		.loc 1 1299 24 is_stmt 0 view .LVU1196
 3241 0008 4FF4E133 		mov	r3, #115200
 3242 000c 4360     		str	r3, [r0, #4]
1300:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 3243              		.loc 1 1300 3 is_stmt 1 view .LVU1197
1300:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 3244              		.loc 1 1300 26 is_stmt 0 view .LVU1198
 3245 000e 0023     		movs	r3, #0
 3246 0010 8360     		str	r3, [r0, #8]
1301:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 3247              		.loc 1 1301 3 is_stmt 1 view .LVU1199
1301:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 3248              		.loc 1 1301 24 is_stmt 0 view .LVU1200
 3249 0012 C360     		str	r3, [r0, #12]
1302:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 3250              		.loc 1 1302 3 is_stmt 1 view .LVU1201
1302:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 3251              		.loc 1 1302 22 is_stmt 0 view .LVU1202
 3252 0014 0361     		str	r3, [r0, #16]
1303:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3253              		.loc 1 1303 3 is_stmt 1 view .LVU1203
1303:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 3254              		.loc 1 1303 20 is_stmt 0 view .LVU1204
 3255 0016 0C22     		movs	r2, #12
 3256 0018 4261     		str	r2, [r0, #20]
1304:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 3257              		.loc 1 1304 3 is_stmt 1 view .LVU1205
1304:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 3258              		.loc 1 1304 25 is_stmt 0 view .LVU1206
 3259 001a 8361     		str	r3, [r0, #24]
1305:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3260              		.loc 1 1305 3 is_stmt 1 view .LVU1207
1305:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 3261              		.loc 1 1305 28 is_stmt 0 view .LVU1208
 3262 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccRZlU69.s 			page 104


1306:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3263              		.loc 1 1306 3 is_stmt 1 view .LVU1209
1306:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 3264              		.loc 1 1306 30 is_stmt 0 view .LVU1210
 3265 001e 0362     		str	r3, [r0, #32]
1307:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 3266              		.loc 1 1307 3 is_stmt 1 view .LVU1211
1307:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 3267              		.loc 1 1307 38 is_stmt 0 view .LVU1212
 3268 0020 4362     		str	r3, [r0, #36]
1308:Core/Src/main.c ****   {
 3269              		.loc 1 1308 3 is_stmt 1 view .LVU1213
1308:Core/Src/main.c ****   {
 3270              		.loc 1 1308 7 is_stmt 0 view .LVU1214
 3271 0022 FFF7FEFF 		bl	HAL_UART_Init
 3272              	.LVL140:
1308:Core/Src/main.c ****   {
 3273              		.loc 1 1308 6 view .LVU1215
 3274 0026 00B9     		cbnz	r0, .L196
1316:Core/Src/main.c **** 
 3275              		.loc 1 1316 1 view .LVU1216
 3276 0028 08BD     		pop	{r3, pc}
 3277              	.L196:
1310:Core/Src/main.c ****   }
 3278              		.loc 1 1310 5 is_stmt 1 view .LVU1217
 3279 002a FFF7FEFF 		bl	Error_Handler
 3280              	.LVL141:
 3281              	.L198:
 3282 002e 00BF     		.align	2
 3283              	.L197:
 3284 0030 00000000 		.word	huart6
 3285 0034 00140140 		.word	1073812480
 3286              		.cfi_endproc
 3287              	.LFE163:
 3289              		.section	.text.SystemClock_Config,"ax",%progbits
 3290              		.align	1
 3291              		.global	SystemClock_Config
 3292              		.syntax unified
 3293              		.thumb
 3294              		.thumb_func
 3296              	SystemClock_Config:
 3297              	.LFB142:
 237:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 3298              		.loc 1 237 1 view -0
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 80
 3301              		@ frame_needed = 0, uses_anonymous_args = 0
 3302 0000 00B5     		push	{lr}
 3303              	.LCFI54:
 3304              		.cfi_def_cfa_offset 4
 3305              		.cfi_offset 14, -4
 3306 0002 95B0     		sub	sp, sp, #84
 3307              	.LCFI55:
 3308              		.cfi_def_cfa_offset 88
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3309              		.loc 1 238 3 view .LVU1219
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccRZlU69.s 			page 105


 3310              		.loc 1 238 22 is_stmt 0 view .LVU1220
 3311 0004 3022     		movs	r2, #48
 3312 0006 0021     		movs	r1, #0
 3313 0008 08A8     		add	r0, sp, #32
 3314 000a FFF7FEFF 		bl	memset
 3315              	.LVL142:
 239:Core/Src/main.c **** 
 3316              		.loc 1 239 3 is_stmt 1 view .LVU1221
 239:Core/Src/main.c **** 
 3317              		.loc 1 239 22 is_stmt 0 view .LVU1222
 3318 000e 0023     		movs	r3, #0
 3319 0010 0393     		str	r3, [sp, #12]
 3320 0012 0493     		str	r3, [sp, #16]
 3321 0014 0593     		str	r3, [sp, #20]
 3322 0016 0693     		str	r3, [sp, #24]
 3323 0018 0793     		str	r3, [sp, #28]
 243:Core/Src/main.c **** 
 3324              		.loc 1 243 3 is_stmt 1 view .LVU1223
 3325 001a FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 3326              	.LVL143:
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3327              		.loc 1 247 3 view .LVU1224
 3328              	.LBB17:
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3329              		.loc 1 247 3 view .LVU1225
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3330              		.loc 1 247 3 view .LVU1226
 3331 001e 244B     		ldr	r3, .L207
 3332 0020 1A6C     		ldr	r2, [r3, #64]
 3333 0022 42F08052 		orr	r2, r2, #268435456
 3334 0026 1A64     		str	r2, [r3, #64]
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3335              		.loc 1 247 3 view .LVU1227
 3336 0028 1B6C     		ldr	r3, [r3, #64]
 3337 002a 03F08053 		and	r3, r3, #268435456
 3338 002e 0193     		str	r3, [sp, #4]
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3339              		.loc 1 247 3 view .LVU1228
 3340 0030 019B     		ldr	r3, [sp, #4]
 3341              	.LBE17:
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 3342              		.loc 1 247 3 view .LVU1229
 248:Core/Src/main.c **** 
 3343              		.loc 1 248 3 view .LVU1230
 3344              	.LBB18:
 248:Core/Src/main.c **** 
 3345              		.loc 1 248 3 view .LVU1231
 248:Core/Src/main.c **** 
 3346              		.loc 1 248 3 view .LVU1232
 3347 0032 204B     		ldr	r3, .L207+4
 3348 0034 1A68     		ldr	r2, [r3]
 3349 0036 42F44042 		orr	r2, r2, #49152
 3350 003a 1A60     		str	r2, [r3]
 248:Core/Src/main.c **** 
 3351              		.loc 1 248 3 view .LVU1233
 3352 003c 1B68     		ldr	r3, [r3]
 3353 003e 03F44043 		and	r3, r3, #49152
ARM GAS  /tmp/ccRZlU69.s 			page 106


 3354 0042 0293     		str	r3, [sp, #8]
 248:Core/Src/main.c **** 
 3355              		.loc 1 248 3 view .LVU1234
 3356 0044 029B     		ldr	r3, [sp, #8]
 3357              	.LBE18:
 248:Core/Src/main.c **** 
 3358              		.loc 1 248 3 view .LVU1235
 253:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3359              		.loc 1 253 3 view .LVU1236
 253:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 3360              		.loc 1 253 36 is_stmt 0 view .LVU1237
 3361 0046 0923     		movs	r3, #9
 3362 0048 0893     		str	r3, [sp, #32]
 254:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3363              		.loc 1 254 3 is_stmt 1 view .LVU1238
 254:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 3364              		.loc 1 254 30 is_stmt 0 view .LVU1239
 3365 004a 4FF48032 		mov	r2, #65536
 3366 004e 0992     		str	r2, [sp, #36]
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3367              		.loc 1 255 3 is_stmt 1 view .LVU1240
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3368              		.loc 1 255 30 is_stmt 0 view .LVU1241
 3369 0050 0122     		movs	r2, #1
 3370 0052 0D92     		str	r2, [sp, #52]
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3371              		.loc 1 256 3 is_stmt 1 view .LVU1242
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 3372              		.loc 1 256 34 is_stmt 0 view .LVU1243
 3373 0054 0222     		movs	r2, #2
 3374 0056 0E92     		str	r2, [sp, #56]
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 3375              		.loc 1 257 3 is_stmt 1 view .LVU1244
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 3376              		.loc 1 257 35 is_stmt 0 view .LVU1245
 3377 0058 4FF48001 		mov	r1, #4194304
 3378 005c 0F91     		str	r1, [sp, #60]
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 400;
 3379              		.loc 1 258 3 is_stmt 1 view .LVU1246
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 400;
 3380              		.loc 1 258 30 is_stmt 0 view .LVU1247
 3381 005e 1921     		movs	r1, #25
 3382 0060 1091     		str	r1, [sp, #64]
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3383              		.loc 1 259 3 is_stmt 1 view .LVU1248
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 3384              		.loc 1 259 30 is_stmt 0 view .LVU1249
 3385 0062 4FF4C871 		mov	r1, #400
 3386 0066 1191     		str	r1, [sp, #68]
 260:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 3387              		.loc 1 260 3 is_stmt 1 view .LVU1250
 260:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 9;
 3388              		.loc 1 260 30 is_stmt 0 view .LVU1251
 3389 0068 1292     		str	r2, [sp, #72]
 261:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3390              		.loc 1 261 3 is_stmt 1 view .LVU1252
 261:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccRZlU69.s 			page 107


 3391              		.loc 1 261 30 is_stmt 0 view .LVU1253
 3392 006a 1393     		str	r3, [sp, #76]
 262:Core/Src/main.c ****   {
 3393              		.loc 1 262 3 is_stmt 1 view .LVU1254
 262:Core/Src/main.c ****   {
 3394              		.loc 1 262 7 is_stmt 0 view .LVU1255
 3395 006c 08A8     		add	r0, sp, #32
 3396 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 3397              	.LVL144:
 262:Core/Src/main.c ****   {
 3398              		.loc 1 262 6 view .LVU1256
 3399 0072 B0B9     		cbnz	r0, .L204
 269:Core/Src/main.c ****   {
 3400              		.loc 1 269 3 is_stmt 1 view .LVU1257
 269:Core/Src/main.c ****   {
 3401              		.loc 1 269 7 is_stmt 0 view .LVU1258
 3402 0074 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 3403              	.LVL145:
 269:Core/Src/main.c ****   {
 3404              		.loc 1 269 6 view .LVU1259
 3405 0078 A8B9     		cbnz	r0, .L205
 276:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3406              		.loc 1 276 3 is_stmt 1 view .LVU1260
 276:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 3407              		.loc 1 276 31 is_stmt 0 view .LVU1261
 3408 007a 0F23     		movs	r3, #15
 3409 007c 0393     		str	r3, [sp, #12]
 278:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3410              		.loc 1 278 3 is_stmt 1 view .LVU1262
 278:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 3411              		.loc 1 278 34 is_stmt 0 view .LVU1263
 3412 007e 0223     		movs	r3, #2
 3413 0080 0493     		str	r3, [sp, #16]
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3414              		.loc 1 279 3 is_stmt 1 view .LVU1264
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 3415              		.loc 1 279 35 is_stmt 0 view .LVU1265
 3416 0082 0023     		movs	r3, #0
 3417 0084 0593     		str	r3, [sp, #20]
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3418              		.loc 1 280 3 is_stmt 1 view .LVU1266
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 3419              		.loc 1 280 36 is_stmt 0 view .LVU1267
 3420 0086 4FF4A053 		mov	r3, #5120
 3421 008a 0693     		str	r3, [sp, #24]
 281:Core/Src/main.c **** 
 3422              		.loc 1 281 3 is_stmt 1 view .LVU1268
 281:Core/Src/main.c **** 
 3423              		.loc 1 281 36 is_stmt 0 view .LVU1269
 3424 008c 4FF48053 		mov	r3, #4096
 3425 0090 0793     		str	r3, [sp, #28]
 283:Core/Src/main.c ****   {
 3426              		.loc 1 283 3 is_stmt 1 view .LVU1270
 283:Core/Src/main.c ****   {
 3427              		.loc 1 283 7 is_stmt 0 view .LVU1271
 3428 0092 0621     		movs	r1, #6
 3429 0094 03A8     		add	r0, sp, #12
ARM GAS  /tmp/ccRZlU69.s 			page 108


 3430 0096 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3431              	.LVL146:
 283:Core/Src/main.c ****   {
 3432              		.loc 1 283 6 view .LVU1272
 3433 009a 30B9     		cbnz	r0, .L206
 287:Core/Src/main.c **** 
 3434              		.loc 1 287 1 view .LVU1273
 3435 009c 15B0     		add	sp, sp, #84
 3436              	.LCFI56:
 3437              		.cfi_remember_state
 3438              		.cfi_def_cfa_offset 4
 3439              		@ sp needed
 3440 009e 5DF804FB 		ldr	pc, [sp], #4
 3441              	.L204:
 3442              	.LCFI57:
 3443              		.cfi_restore_state
 264:Core/Src/main.c ****   }
 3444              		.loc 1 264 5 is_stmt 1 view .LVU1274
 3445 00a2 FFF7FEFF 		bl	Error_Handler
 3446              	.LVL147:
 3447              	.L205:
 271:Core/Src/main.c ****   }
 3448              		.loc 1 271 5 view .LVU1275
 3449 00a6 FFF7FEFF 		bl	Error_Handler
 3450              	.LVL148:
 3451              	.L206:
 285:Core/Src/main.c ****   }
 3452              		.loc 1 285 5 view .LVU1276
 3453 00aa FFF7FEFF 		bl	Error_Handler
 3454              	.LVL149:
 3455              	.L208:
 3456 00ae 00BF     		.align	2
 3457              	.L207:
 3458 00b0 00380240 		.word	1073887232
 3459 00b4 00700040 		.word	1073770496
 3460              		.cfi_endproc
 3461              	.LFE142:
 3463              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 3464              		.align	1
 3465              		.global	PeriphCommonClock_Config
 3466              		.syntax unified
 3467              		.thumb
 3468              		.thumb_func
 3470              	PeriphCommonClock_Config:
 3471              	.LFB143:
 294:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 3472              		.loc 1 294 1 view -0
 3473              		.cfi_startproc
 3474              		@ args = 0, pretend = 0, frame = 136
 3475              		@ frame_needed = 0, uses_anonymous_args = 0
 3476 0000 00B5     		push	{lr}
 3477              	.LCFI58:
 3478              		.cfi_def_cfa_offset 4
 3479              		.cfi_offset 14, -4
 3480 0002 A3B0     		sub	sp, sp, #140
 3481              	.LCFI59:
 3482              		.cfi_def_cfa_offset 144
ARM GAS  /tmp/ccRZlU69.s 			page 109


 295:Core/Src/main.c **** 
 3483              		.loc 1 295 3 view .LVU1278
 295:Core/Src/main.c **** 
 3484              		.loc 1 295 28 is_stmt 0 view .LVU1279
 3485 0004 8422     		movs	r2, #132
 3486 0006 0021     		movs	r1, #0
 3487 0008 01A8     		add	r0, sp, #4
 3488 000a FFF7FEFF 		bl	memset
 3489              	.LVL150:
 299:Core/Src/main.c ****                               |RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_CLK48;
 3490              		.loc 1 299 3 is_stmt 1 view .LVU1280
 299:Core/Src/main.c ****                               |RCC_PERIPHCLK_SDMMC1|RCC_PERIPHCLK_CLK48;
 3491              		.loc 1 299 44 is_stmt 0 view .LVU1281
 3492 000e 0E4B     		ldr	r3, .L213
 3493 0010 0193     		str	r3, [sp, #4]
 301:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 3494              		.loc 1 301 3 is_stmt 1 view .LVU1282
 301:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 3495              		.loc 1 301 38 is_stmt 0 view .LVU1283
 3496 0012 4FF4C073 		mov	r3, #384
 3497 0016 0693     		str	r3, [sp, #24]
 302:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 3498              		.loc 1 302 3 is_stmt 1 view .LVU1284
 302:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 3499              		.loc 1 302 38 is_stmt 0 view .LVU1285
 3500 0018 0523     		movs	r3, #5
 3501 001a 0893     		str	r3, [sp, #32]
 303:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV8;
 3502              		.loc 1 303 3 is_stmt 1 view .LVU1286
 303:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV8;
 3503              		.loc 1 303 38 is_stmt 0 view .LVU1287
 3504 001c 0223     		movs	r3, #2
 3505 001e 0793     		str	r3, [sp, #28]
 304:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 3506              		.loc 1 304 3 is_stmt 1 view .LVU1288
 304:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
 3507              		.loc 1 304 38 is_stmt 0 view .LVU1289
 3508 0020 0323     		movs	r3, #3
 3509 0022 0993     		str	r3, [sp, #36]
 305:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3510              		.loc 1 305 3 is_stmt 1 view .LVU1290
 305:Core/Src/main.c ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 3511              		.loc 1 305 34 is_stmt 0 view .LVU1291
 3512 0024 0123     		movs	r3, #1
 3513 0026 0B93     		str	r3, [sp, #44]
 306:Core/Src/main.c ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3514              		.loc 1 306 3 is_stmt 1 view .LVU1292
 306:Core/Src/main.c ****   PeriphClkInitStruct.Sai2ClockSelection = RCC_SAI2CLKSOURCE_PLLSAI;
 3515              		.loc 1 306 34 is_stmt 0 view .LVU1293
 3516 0028 4FF40033 		mov	r3, #131072
 3517 002c 0C93     		str	r3, [sp, #48]
 307:Core/Src/main.c ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
 3518              		.loc 1 307 3 is_stmt 1 view .LVU1294
 308:Core/Src/main.c ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3519              		.loc 1 308 3 view .LVU1295
 308:Core/Src/main.c ****   PeriphClkInitStruct.Sdmmc1ClockSelection = RCC_SDMMC1CLKSOURCE_CLK48;
 3520              		.loc 1 308 43 is_stmt 0 view .LVU1296
ARM GAS  /tmp/ccRZlU69.s 			page 110


 3521 002e 4FF00063 		mov	r3, #134217728
 3522 0032 2093     		str	r3, [sp, #128]
 309:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3523              		.loc 1 309 3 is_stmt 1 view .LVU1297
 310:Core/Src/main.c ****   {
 3524              		.loc 1 310 3 view .LVU1298
 310:Core/Src/main.c ****   {
 3525              		.loc 1 310 7 is_stmt 0 view .LVU1299
 3526 0034 01A8     		add	r0, sp, #4
 3527 0036 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3528              	.LVL151:
 310:Core/Src/main.c ****   {
 3529              		.loc 1 310 6 view .LVU1300
 3530 003a 10B9     		cbnz	r0, .L212
 314:Core/Src/main.c **** 
 3531              		.loc 1 314 1 view .LVU1301
 3532 003c 23B0     		add	sp, sp, #140
 3533              	.LCFI60:
 3534              		.cfi_remember_state
 3535              		.cfi_def_cfa_offset 4
 3536              		@ sp needed
 3537 003e 5DF804FB 		ldr	pc, [sp], #4
 3538              	.L212:
 3539              	.LCFI61:
 3540              		.cfi_restore_state
 312:Core/Src/main.c ****   }
 3541              		.loc 1 312 5 is_stmt 1 view .LVU1302
 3542 0042 FFF7FEFF 		bl	Error_Handler
 3543              	.LVL152:
 3544              	.L214:
 3545 0046 00BF     		.align	2
 3546              	.L213:
 3547 0048 0800B000 		.word	11534344
 3548              		.cfi_endproc
 3549              	.LFE143:
 3551              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3552              		.align	2
 3553              	.LC0:
 3554 0000 54455354 		.ascii	"TEST-TX\015\012\000"
 3554      2D54580D 
 3554      0A00
 3555              		.section	.text.main,"ax",%progbits
 3556              		.align	1
 3557              		.global	main
 3558              		.syntax unified
 3559              		.thumb
 3560              		.thumb_func
 3562              	main:
 3563              	.LFB141:
 147:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 3564              		.loc 1 147 1 view -0
 3565              		.cfi_startproc
 3566              		@ args = 0, pretend = 0, frame = 16
 3567              		@ frame_needed = 0, uses_anonymous_args = 0
 3568 0000 00B5     		push	{lr}
 3569              	.LCFI62:
 3570              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccRZlU69.s 			page 111


 3571              		.cfi_offset 14, -4
 3572 0002 85B0     		sub	sp, sp, #20
 3573              	.LCFI63:
 3574              		.cfi_def_cfa_offset 24
 155:Core/Src/main.c **** 
 3575              		.loc 1 155 3 view .LVU1304
 3576 0004 FFF7FEFF 		bl	HAL_Init
 3577              	.LVL153:
 162:Core/Src/main.c **** 
 3578              		.loc 1 162 3 view .LVU1305
 3579 0008 FFF7FEFF 		bl	SystemClock_Config
 3580              	.LVL154:
 165:Core/Src/main.c **** 
 3581              		.loc 1 165 3 view .LVU1306
 3582 000c FFF7FEFF 		bl	PeriphCommonClock_Config
 3583              	.LVL155:
 172:Core/Src/main.c ****   MX_ADC3_Init();
 3584              		.loc 1 172 3 view .LVU1307
 3585 0010 FFF7FEFF 		bl	MX_GPIO_Init
 3586              	.LVL156:
 173:Core/Src/main.c ****   MX_CRC_Init();
 3587              		.loc 1 173 3 view .LVU1308
 3588 0014 FFF7FEFF 		bl	MX_ADC3_Init
 3589              	.LVL157:
 174:Core/Src/main.c ****   MX_DCMI_Init();
 3590              		.loc 1 174 3 view .LVU1309
 3591 0018 FFF7FEFF 		bl	MX_CRC_Init
 3592              	.LVL158:
 175:Core/Src/main.c ****   MX_DMA2D_Init();
 3593              		.loc 1 175 3 view .LVU1310
 3594 001c FFF7FEFF 		bl	MX_DCMI_Init
 3595              	.LVL159:
 176:Core/Src/main.c ****   MX_ETH_Init();
 3596              		.loc 1 176 3 view .LVU1311
 3597 0020 FFF7FEFF 		bl	MX_DMA2D_Init
 3598              	.LVL160:
 177:Core/Src/main.c ****   MX_FMC_Init();
 3599              		.loc 1 177 3 view .LVU1312
 3600 0024 FFF7FEFF 		bl	MX_ETH_Init
 3601              	.LVL161:
 178:Core/Src/main.c ****   MX_I2C3_Init();
 3602              		.loc 1 178 3 view .LVU1313
 3603 0028 FFF7FEFF 		bl	MX_FMC_Init
 3604              	.LVL162:
 179:Core/Src/main.c ****   MX_LTDC_Init();
 3605              		.loc 1 179 3 view .LVU1314
 3606 002c FFF7FEFF 		bl	MX_I2C3_Init
 3607              	.LVL163:
 180:Core/Src/main.c ****   MX_QUADSPI_Init();
 3608              		.loc 1 180 3 view .LVU1315
 3609 0030 FFF7FEFF 		bl	MX_LTDC_Init
 3610              	.LVL164:
 181:Core/Src/main.c ****   MX_RTC_Init();
 3611              		.loc 1 181 3 view .LVU1316
 3612 0034 FFF7FEFF 		bl	MX_QUADSPI_Init
 3613              	.LVL165:
 182:Core/Src/main.c ****   MX_SAI2_Init();
ARM GAS  /tmp/ccRZlU69.s 			page 112


 3614              		.loc 1 182 3 view .LVU1317
 3615 0038 FFF7FEFF 		bl	MX_RTC_Init
 3616              	.LVL166:
 183:Core/Src/main.c ****   MX_SDMMC1_SD_Init();
 3617              		.loc 1 183 3 view .LVU1318
 3618 003c FFF7FEFF 		bl	MX_SAI2_Init
 3619              	.LVL167:
 184:Core/Src/main.c ****   MX_SPDIFRX_Init();
 3620              		.loc 1 184 3 view .LVU1319
 3621 0040 FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 3622              	.LVL168:
 185:Core/Src/main.c ****   MX_TIM1_Init();
 3623              		.loc 1 185 3 view .LVU1320
 3624 0044 FFF7FEFF 		bl	MX_SPDIFRX_Init
 3625              	.LVL169:
 186:Core/Src/main.c ****   MX_TIM2_Init();
 3626              		.loc 1 186 3 view .LVU1321
 3627 0048 FFF7FEFF 		bl	MX_TIM1_Init
 3628              	.LVL170:
 187:Core/Src/main.c ****   MX_TIM3_Init();
 3629              		.loc 1 187 3 view .LVU1322
 3630 004c FFF7FEFF 		bl	MX_TIM2_Init
 3631              	.LVL171:
 188:Core/Src/main.c ****   MX_TIM5_Init();
 3632              		.loc 1 188 3 view .LVU1323
 3633 0050 FFF7FEFF 		bl	MX_TIM3_Init
 3634              	.LVL172:
 189:Core/Src/main.c ****   MX_TIM8_Init();
 3635              		.loc 1 189 3 view .LVU1324
 3636 0054 FFF7FEFF 		bl	MX_TIM5_Init
 3637              	.LVL173:
 190:Core/Src/main.c ****   MX_TIM12_Init();
 3638              		.loc 1 190 3 view .LVU1325
 3639 0058 FFF7FEFF 		bl	MX_TIM8_Init
 3640              	.LVL174:
 191:Core/Src/main.c ****   MX_USART1_UART_Init();
 3641              		.loc 1 191 3 view .LVU1326
 3642 005c FFF7FEFF 		bl	MX_TIM12_Init
 3643              	.LVL175:
 192:Core/Src/main.c ****   MX_USART6_UART_Init();
 3644              		.loc 1 192 3 view .LVU1327
 3645 0060 FFF7FEFF 		bl	MX_USART1_UART_Init
 3646              	.LVL176:
 193:Core/Src/main.c ****   MX_FATFS_Init();
 3647              		.loc 1 193 3 view .LVU1328
 3648 0064 FFF7FEFF 		bl	MX_USART6_UART_Init
 3649              	.LVL177:
 194:Core/Src/main.c ****   MX_USB_HOST_Init();
 3650              		.loc 1 194 3 view .LVU1329
 3651 0068 FFF7FEFF 		bl	MX_FATFS_Init
 3652              	.LVL178:
 195:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3653              		.loc 1 195 3 view .LVU1330
 3654 006c FFF7FEFF 		bl	MX_USB_HOST_Init
 3655              	.LVL179:
 203:Core/Src/main.c ****   uint8_t rx_buffer [1];
 3656              		.loc 1 203 3 view .LVU1331
ARM GAS  /tmp/ccRZlU69.s 			page 113


 203:Core/Src/main.c ****   uint8_t rx_buffer [1];
 3657              		.loc 1 203 17 is_stmt 0 view .LVU1332
 3658 0070 094A     		ldr	r2, .L220
 3659 0072 01AB     		add	r3, sp, #4
 3660 0074 07CA     		ldm	r2, {r0, r1, r2}
 3661 0076 03C3     		stmia	r3!, {r0, r1}
 3662 0078 1A80     		strh	r2, [r3]	@ movhi
 204:Core/Src/main.c ****   uint8_t rx_done = 0;
 3663              		.loc 1 204 3 is_stmt 1 view .LVU1333
 205:Core/Src/main.c **** 
 3664              		.loc 1 205 3 view .LVU1334
 3665              	.LVL180:
 3666              	.L216:
 219:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, 0, 1, 5000);
 3667              		.loc 1 219 9 view .LVU1335
 3668 007a 0022     		movs	r2, #0
 3669 007c 0221     		movs	r1, #2
 3670 007e 0748     		ldr	r0, .L220+4
 3671 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3672              	.LVL181:
 220:Core/Src/main.c **** 	}
 3673              		.loc 1 220 2 view .LVU1336
 3674 0084 41F28833 		movw	r3, #5000
 3675 0088 0122     		movs	r2, #1
 3676 008a 0021     		movs	r1, #0
 3677 008c 0448     		ldr	r0, .L220+8
 3678 008e FFF7FEFF 		bl	HAL_UART_Transmit
 3679              	.LVL182:
 223:Core/Src/main.c **** 
 3680              		.loc 1 223 5 view .LVU1337
 3681 0092 FFF7FEFF 		bl	MX_USB_HOST_Process
 3682              	.LVL183:
 209:Core/Src/main.c ****   {
 3683              		.loc 1 209 9 view .LVU1338
 213:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOI, GPIO_PIN_1, GPIO_PIN_SET);
 3684              		.loc 1 213 8 is_stmt 0 view .LVU1339
 3685 0096 F0E7     		b	.L216
 3686              	.L221:
 3687              		.align	2
 3688              	.L220:
 3689 0098 00000000 		.word	.LC0
 3690 009c 00200240 		.word	1073881088
 3691 00a0 00000000 		.word	huart1
 3692              		.cfi_endproc
 3693              	.LFE141:
 3695              		.section	.bss.MACAddr.0,"aw",%nobits
 3696              		.align	2
 3699              	MACAddr.0:
 3700 0000 00000000 		.space	6
 3700      0000
 3701              		.global	hsdram1
 3702              		.section	.bss.hsdram1,"aw",%nobits
 3703              		.align	2
 3706              	hsdram1:
 3707 0000 00000000 		.space	52
 3707      00000000 
 3707      00000000 
ARM GAS  /tmp/ccRZlU69.s 			page 114


 3707      00000000 
 3707      00000000 
 3708              		.global	huart6
 3709              		.section	.bss.huart6,"aw",%nobits
 3710              		.align	2
 3713              	huart6:
 3714 0000 00000000 		.space	136
 3714      00000000 
 3714      00000000 
 3714      00000000 
 3714      00000000 
 3715              		.global	huart1
 3716              		.section	.bss.huart1,"aw",%nobits
 3717              		.align	2
 3720              	huart1:
 3721 0000 00000000 		.space	136
 3721      00000000 
 3721      00000000 
 3721      00000000 
 3721      00000000 
 3722              		.global	htim12
 3723              		.section	.bss.htim12,"aw",%nobits
 3724              		.align	2
 3727              	htim12:
 3728 0000 00000000 		.space	76
 3728      00000000 
 3728      00000000 
 3728      00000000 
 3728      00000000 
 3729              		.global	htim8
 3730              		.section	.bss.htim8,"aw",%nobits
 3731              		.align	2
 3734              	htim8:
 3735 0000 00000000 		.space	76
 3735      00000000 
 3735      00000000 
 3735      00000000 
 3735      00000000 
 3736              		.global	htim5
 3737              		.section	.bss.htim5,"aw",%nobits
 3738              		.align	2
 3741              	htim5:
 3742 0000 00000000 		.space	76
 3742      00000000 
 3742      00000000 
 3742      00000000 
 3742      00000000 
 3743              		.global	htim3
 3744              		.section	.bss.htim3,"aw",%nobits
 3745              		.align	2
 3748              	htim3:
 3749 0000 00000000 		.space	76
 3749      00000000 
 3749      00000000 
 3749      00000000 
 3749      00000000 
 3750              		.global	htim2
ARM GAS  /tmp/ccRZlU69.s 			page 115


 3751              		.section	.bss.htim2,"aw",%nobits
 3752              		.align	2
 3755              	htim2:
 3756 0000 00000000 		.space	76
 3756      00000000 
 3756      00000000 
 3756      00000000 
 3756      00000000 
 3757              		.global	htim1
 3758              		.section	.bss.htim1,"aw",%nobits
 3759              		.align	2
 3762              	htim1:
 3763 0000 00000000 		.space	76
 3763      00000000 
 3763      00000000 
 3763      00000000 
 3763      00000000 
 3764              		.global	hspdif
 3765              		.section	.bss.hspdif,"aw",%nobits
 3766              		.align	2
 3769              	hspdif:
 3770 0000 00000000 		.space	76
 3770      00000000 
 3770      00000000 
 3770      00000000 
 3770      00000000 
 3771              		.global	hsd1
 3772              		.section	.bss.hsd1,"aw",%nobits
 3773              		.align	2
 3776              	hsd1:
 3777 0000 00000000 		.space	132
 3777      00000000 
 3777      00000000 
 3777      00000000 
 3777      00000000 
 3778              		.global	hsai_BlockB2
 3779              		.section	.bss.hsai_BlockB2,"aw",%nobits
 3780              		.align	2
 3783              	hsai_BlockB2:
 3784 0000 00000000 		.space	132
 3784      00000000 
 3784      00000000 
 3784      00000000 
 3784      00000000 
 3785              		.global	hsai_BlockA2
 3786              		.section	.bss.hsai_BlockA2,"aw",%nobits
 3787              		.align	2
 3790              	hsai_BlockA2:
 3791 0000 00000000 		.space	132
 3791      00000000 
 3791      00000000 
 3791      00000000 
 3791      00000000 
 3792              		.global	hrtc
 3793              		.section	.bss.hrtc,"aw",%nobits
 3794              		.align	2
 3797              	hrtc:
ARM GAS  /tmp/ccRZlU69.s 			page 116


 3798 0000 00000000 		.space	32
 3798      00000000 
 3798      00000000 
 3798      00000000 
 3798      00000000 
 3799              		.global	hqspi
 3800              		.section	.bss.hqspi,"aw",%nobits
 3801              		.align	2
 3804              	hqspi:
 3805 0000 00000000 		.space	76
 3805      00000000 
 3805      00000000 
 3805      00000000 
 3805      00000000 
 3806              		.global	hltdc
 3807              		.section	.bss.hltdc,"aw",%nobits
 3808              		.align	2
 3811              	hltdc:
 3812 0000 00000000 		.space	168
 3812      00000000 
 3812      00000000 
 3812      00000000 
 3812      00000000 
 3813              		.global	hi2c3
 3814              		.section	.bss.hi2c3,"aw",%nobits
 3815              		.align	2
 3818              	hi2c3:
 3819 0000 00000000 		.space	84
 3819      00000000 
 3819      00000000 
 3819      00000000 
 3819      00000000 
 3820              		.global	heth
 3821              		.section	.bss.heth,"aw",%nobits
 3822              		.align	2
 3825              	heth:
 3826 0000 00000000 		.space	176
 3826      00000000 
 3826      00000000 
 3826      00000000 
 3826      00000000 
 3827              		.global	hdma2d
 3828              		.section	.bss.hdma2d,"aw",%nobits
 3829              		.align	2
 3832              	hdma2d:
 3833 0000 00000000 		.space	64
 3833      00000000 
 3833      00000000 
 3833      00000000 
 3833      00000000 
 3834              		.global	hdcmi
 3835              		.section	.bss.hdcmi,"aw",%nobits
 3836              		.align	2
 3839              	hdcmi:
 3840 0000 00000000 		.space	80
 3840      00000000 
 3840      00000000 
ARM GAS  /tmp/ccRZlU69.s 			page 117


 3840      00000000 
 3840      00000000 
 3841              		.global	hcrc
 3842              		.section	.bss.hcrc,"aw",%nobits
 3843              		.align	2
 3846              	hcrc:
 3847 0000 00000000 		.space	36
 3847      00000000 
 3847      00000000 
 3847      00000000 
 3847      00000000 
 3848              		.global	hadc3
 3849              		.section	.bss.hadc3,"aw",%nobits
 3850              		.align	2
 3853              	hadc3:
 3854 0000 00000000 		.space	72
 3854      00000000 
 3854      00000000 
 3854      00000000 
 3854      00000000 
 3855              		.global	TxConfig
 3856              		.section	.bss.TxConfig,"aw",%nobits
 3857              		.align	2
 3860              	TxConfig:
 3861 0000 00000000 		.space	56
 3861      00000000 
 3861      00000000 
 3861      00000000 
 3861      00000000 
 3862              		.global	DMATxDscrTab
 3863              		.section	.TxDecripSection,"aw"
 3864              		.align	2
 3867              	DMATxDscrTab:
 3868 0000 00000000 		.space	160
 3868      00000000 
 3868      00000000 
 3868      00000000 
 3868      00000000 
 3869              		.global	DMARxDscrTab
 3870              		.section	.RxDecripSection,"aw"
 3871              		.align	2
 3874              	DMARxDscrTab:
 3875 0000 00000000 		.space	160
 3875      00000000 
 3875      00000000 
 3875      00000000 
 3875      00000000 
 3876              		.text
 3877              	.Letext0:
 3878              		.file 3 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 3879              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 3880              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3881              		.file 6 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stddef.h"
 3882              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3883              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 3884              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 3885              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
ARM GAS  /tmp/ccRZlU69.s 			page 118


 3886              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3887              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 3888              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_crc.h"
 3889              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 3890              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dcmi.h"
 3891              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 3892              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 3893              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 3894              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 3895              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_ltdc.h"
 3896              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_qspi.h"
 3897              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3898              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sai.h"
 3899              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 3900              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sd.h"
 3901              		.file 26 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spdifrx.h"
 3902              		.file 27 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 3903              		.file 28 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 3904              		.file 29 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 3905              		.file 30 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr.h"
 3906              		.file 31 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 3907              		.file 32 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 3908              		.file 33 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 3909              		.file 34 "/usr/include/newlib/string.h"
 3910              		.file 35 "Core/Inc/main.h"
 3911              		.file 36 "USB_HOST/App/usb_host.h"
 3912              		.file 37 "FATFS/App/fatfs.h"
 3913              		.file 38 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 3914              		.file 39 "<built-in>"
ARM GAS  /tmp/ccRZlU69.s 			page 119


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccRZlU69.s:21     .text.MX_SDMMC1_SD_Init:00000000 $t
     /tmp/ccRZlU69.s:26     .text.MX_SDMMC1_SD_Init:00000000 MX_SDMMC1_SD_Init
     /tmp/ccRZlU69.s:63     .text.MX_SDMMC1_SD_Init:0000001c $d
     /tmp/ccRZlU69.s:3776   .bss.hsd1:00000000 hsd1
     /tmp/ccRZlU69.s:69     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccRZlU69.s:74     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccRZlU69.s:671    .text.MX_GPIO_Init:000002c4 $d
     /tmp/ccRZlU69.s:685    .text.MX_GPIO_Init:000002f0 $t
     /tmp/ccRZlU69.s:707    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccRZlU69.s:713    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccRZlU69.s:747    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
     /tmp/ccRZlU69.s:752    .text.Error_Handler:00000000 $t
     /tmp/ccRZlU69.s:758    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccRZlU69.s:790    .text.MX_ADC3_Init:00000000 $t
     /tmp/ccRZlU69.s:795    .text.MX_ADC3_Init:00000000 MX_ADC3_Init
     /tmp/ccRZlU69.s:902    .text.MX_ADC3_Init:00000060 $d
     /tmp/ccRZlU69.s:3853   .bss.hadc3:00000000 hadc3
     /tmp/ccRZlU69.s:909    .text.MX_CRC_Init:00000000 $t
     /tmp/ccRZlU69.s:914    .text.MX_CRC_Init:00000000 MX_CRC_Init
     /tmp/ccRZlU69.s:962    .text.MX_CRC_Init:00000024 $d
     /tmp/ccRZlU69.s:3846   .bss.hcrc:00000000 hcrc
     /tmp/ccRZlU69.s:968    .text.MX_DCMI_Init:00000000 $t
     /tmp/ccRZlU69.s:973    .text.MX_DCMI_Init:00000000 MX_DCMI_Init
     /tmp/ccRZlU69.s:1038   .text.MX_DCMI_Init:0000002c $d
     /tmp/ccRZlU69.s:3839   .bss.hdcmi:00000000 hdcmi
     /tmp/ccRZlU69.s:1044   .text.MX_DMA2D_Init:00000000 $t
     /tmp/ccRZlU69.s:1049   .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
     /tmp/ccRZlU69.s:1114   .text.MX_DMA2D_Init:00000034 $d
     /tmp/ccRZlU69.s:3832   .bss.hdma2d:00000000 hdma2d
     /tmp/ccRZlU69.s:1120   .text.MX_ETH_Init:00000000 $t
     /tmp/ccRZlU69.s:1125   .text.MX_ETH_Init:00000000 MX_ETH_Init
     /tmp/ccRZlU69.s:1214   .text.MX_ETH_Init:00000054 $d
     /tmp/ccRZlU69.s:3825   .bss.heth:00000000 heth
     /tmp/ccRZlU69.s:3699   .bss.MACAddr.0:00000000 MACAddr.0
     /tmp/ccRZlU69.s:3867   .TxDecripSection:00000000 DMATxDscrTab
     /tmp/ccRZlU69.s:3874   .RxDecripSection:00000000 DMARxDscrTab
     /tmp/ccRZlU69.s:3860   .bss.TxConfig:00000000 TxConfig
     /tmp/ccRZlU69.s:1224   .text.MX_FMC_Init:00000000 $t
     /tmp/ccRZlU69.s:1229   .text.MX_FMC_Init:00000000 MX_FMC_Init
     /tmp/ccRZlU69.s:1340   .text.MX_FMC_Init:00000068 $d
     /tmp/ccRZlU69.s:3706   .bss.hsdram1:00000000 hsdram1
     /tmp/ccRZlU69.s:1346   .text.MX_I2C3_Init:00000000 $t
     /tmp/ccRZlU69.s:1351   .text.MX_I2C3_Init:00000000 MX_I2C3_Init
     /tmp/ccRZlU69.s:1433   .text.MX_I2C3_Init:00000048 $d
     /tmp/ccRZlU69.s:3818   .bss.hi2c3:00000000 hi2c3
     /tmp/ccRZlU69.s:1440   .text.MX_LTDC_Init:00000000 $t
     /tmp/ccRZlU69.s:1445   .text.MX_LTDC_Init:00000000 MX_LTDC_Init
     /tmp/ccRZlU69.s:1611   .text.MX_LTDC_Init:000000ac $d
     /tmp/ccRZlU69.s:3811   .bss.hltdc:00000000 hltdc
     /tmp/ccRZlU69.s:1617   .text.MX_QUADSPI_Init:00000000 $t
     /tmp/ccRZlU69.s:1622   .text.MX_QUADSPI_Init:00000000 MX_QUADSPI_Init
     /tmp/ccRZlU69.s:1683   .text.MX_QUADSPI_Init:00000034 $d
     /tmp/ccRZlU69.s:3804   .bss.hqspi:00000000 hqspi
     /tmp/ccRZlU69.s:1689   .text.MX_RTC_Init:00000000 $t
     /tmp/ccRZlU69.s:1694   .text.MX_RTC_Init:00000000 MX_RTC_Init
ARM GAS  /tmp/ccRZlU69.s 			page 120


     /tmp/ccRZlU69.s:1908   .text.MX_RTC_Init:000000e4 $d
     /tmp/ccRZlU69.s:3797   .bss.hrtc:00000000 hrtc
     /tmp/ccRZlU69.s:1914   .text.MX_SAI2_Init:00000000 $t
     /tmp/ccRZlU69.s:1919   .text.MX_SAI2_Init:00000000 MX_SAI2_Init
     /tmp/ccRZlU69.s:2107   .text.MX_SAI2_Init:00000090 $d
     /tmp/ccRZlU69.s:3790   .bss.hsai_BlockA2:00000000 hsai_BlockA2
     /tmp/ccRZlU69.s:3783   .bss.hsai_BlockB2:00000000 hsai_BlockB2
     /tmp/ccRZlU69.s:2116   .text.MX_SPDIFRX_Init:00000000 $t
     /tmp/ccRZlU69.s:2121   .text.MX_SPDIFRX_Init:00000000 MX_SPDIFRX_Init
     /tmp/ccRZlU69.s:2183   .text.MX_SPDIFRX_Init:0000002c $d
     /tmp/ccRZlU69.s:3769   .bss.hspdif:00000000 hspdif
     /tmp/ccRZlU69.s:2188   .text.MX_TIM1_Init:00000000 $t
     /tmp/ccRZlU69.s:2193   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
     /tmp/ccRZlU69.s:2421   .text.MX_TIM1_Init:000000e4 $d
     /tmp/ccRZlU69.s:3762   .bss.htim1:00000000 htim1
     /tmp/ccRZlU69.s:2427   .text.MX_TIM2_Init:00000000 $t
     /tmp/ccRZlU69.s:2432   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
     /tmp/ccRZlU69.s:2585   .text.MX_TIM2_Init:0000009c $d
     /tmp/ccRZlU69.s:3755   .bss.htim2:00000000 htim2
     /tmp/ccRZlU69.s:2590   .text.MX_TIM3_Init:00000000 $t
     /tmp/ccRZlU69.s:2595   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
     /tmp/ccRZlU69.s:2748   .text.MX_TIM3_Init:0000009c $d
     /tmp/ccRZlU69.s:3748   .bss.htim3:00000000 htim3
     /tmp/ccRZlU69.s:2754   .text.MX_TIM5_Init:00000000 $t
     /tmp/ccRZlU69.s:2759   .text.MX_TIM5_Init:00000000 MX_TIM5_Init
     /tmp/ccRZlU69.s:2913   .text.MX_TIM5_Init:0000009c $d
     /tmp/ccRZlU69.s:3741   .bss.htim5:00000000 htim5
     /tmp/ccRZlU69.s:2919   .text.MX_TIM8_Init:00000000 $t
     /tmp/ccRZlU69.s:2924   .text.MX_TIM8_Init:00000000 MX_TIM8_Init
     /tmp/ccRZlU69.s:3033   .text.MX_TIM8_Init:00000064 $d
     /tmp/ccRZlU69.s:3734   .bss.htim8:00000000 htim8
     /tmp/ccRZlU69.s:3039   .text.MX_TIM12_Init:00000000 $t
     /tmp/ccRZlU69.s:3044   .text.MX_TIM12_Init:00000000 MX_TIM12_Init
     /tmp/ccRZlU69.s:3140   .text.MX_TIM12_Init:00000058 $d
     /tmp/ccRZlU69.s:3727   .bss.htim12:00000000 htim12
     /tmp/ccRZlU69.s:3146   .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccRZlU69.s:3151   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccRZlU69.s:3212   .text.MX_USART1_UART_Init:00000030 $d
     /tmp/ccRZlU69.s:3720   .bss.huart1:00000000 huart1
     /tmp/ccRZlU69.s:3218   .text.MX_USART6_UART_Init:00000000 $t
     /tmp/ccRZlU69.s:3223   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
     /tmp/ccRZlU69.s:3284   .text.MX_USART6_UART_Init:00000030 $d
     /tmp/ccRZlU69.s:3713   .bss.huart6:00000000 huart6
     /tmp/ccRZlU69.s:3290   .text.SystemClock_Config:00000000 $t
     /tmp/ccRZlU69.s:3296   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccRZlU69.s:3458   .text.SystemClock_Config:000000b0 $d
     /tmp/ccRZlU69.s:3464   .text.PeriphCommonClock_Config:00000000 $t
     /tmp/ccRZlU69.s:3470   .text.PeriphCommonClock_Config:00000000 PeriphCommonClock_Config
     /tmp/ccRZlU69.s:3547   .text.PeriphCommonClock_Config:00000048 $d
     /tmp/ccRZlU69.s:3552   .rodata.main.str1.4:00000000 $d
     /tmp/ccRZlU69.s:3556   .text.main:00000000 $t
     /tmp/ccRZlU69.s:3562   .text.main:00000000 main
     /tmp/ccRZlU69.s:3689   .text.main:00000098 $d
     /tmp/ccRZlU69.s:3696   .bss.MACAddr.0:00000000 $d
     /tmp/ccRZlU69.s:3703   .bss.hsdram1:00000000 $d
     /tmp/ccRZlU69.s:3710   .bss.huart6:00000000 $d
     /tmp/ccRZlU69.s:3717   .bss.huart1:00000000 $d
ARM GAS  /tmp/ccRZlU69.s 			page 121


     /tmp/ccRZlU69.s:3724   .bss.htim12:00000000 $d
     /tmp/ccRZlU69.s:3731   .bss.htim8:00000000 $d
     /tmp/ccRZlU69.s:3738   .bss.htim5:00000000 $d
     /tmp/ccRZlU69.s:3745   .bss.htim3:00000000 $d
     /tmp/ccRZlU69.s:3752   .bss.htim2:00000000 $d
     /tmp/ccRZlU69.s:3759   .bss.htim1:00000000 $d
     /tmp/ccRZlU69.s:3766   .bss.hspdif:00000000 $d
     /tmp/ccRZlU69.s:3773   .bss.hsd1:00000000 $d
     /tmp/ccRZlU69.s:3780   .bss.hsai_BlockB2:00000000 $d
     /tmp/ccRZlU69.s:3787   .bss.hsai_BlockA2:00000000 $d
     /tmp/ccRZlU69.s:3794   .bss.hrtc:00000000 $d
     /tmp/ccRZlU69.s:3801   .bss.hqspi:00000000 $d
     /tmp/ccRZlU69.s:3808   .bss.hltdc:00000000 $d
     /tmp/ccRZlU69.s:3815   .bss.hi2c3:00000000 $d
     /tmp/ccRZlU69.s:3822   .bss.heth:00000000 $d
     /tmp/ccRZlU69.s:3829   .bss.hdma2d:00000000 $d
     /tmp/ccRZlU69.s:3836   .bss.hdcmi:00000000 $d
     /tmp/ccRZlU69.s:3843   .bss.hcrc:00000000 $d
     /tmp/ccRZlU69.s:3850   .bss.hadc3:00000000 $d
     /tmp/ccRZlU69.s:3857   .bss.TxConfig:00000000 $d
     /tmp/ccRZlU69.s:3864   .TxDecripSection:00000000 $d
     /tmp/ccRZlU69.s:3871   .RxDecripSection:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_CRC_Init
HAL_DCMI_Init
HAL_DMA2D_Init
HAL_DMA2D_ConfigLayer
HAL_ETH_Init
memset
HAL_SDRAM_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LTDC_Init
HAL_LTDC_ConfigLayer
HAL_QSPI_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RTCEx_SetTimeStamp
HAL_SAI_Init
HAL_SPDIFRX_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
ARM GAS  /tmp/ccRZlU69.s 			page 122


HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_FATFS_Init
MX_USB_HOST_Init
HAL_UART_Transmit
MX_USB_HOST_Process
