ARM GAS  /tmp/ccV7GXjs.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f7xx_hal_pwr_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c"
  20              		.section	.text.HAL_PWREx_EnableBkUpReg,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_PWREx_EnableBkUpReg
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_PWREx_EnableBkUpReg:
  28              	.LFB141:
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @file    stm32f7xx_hal_pwr_ex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          functionalities of PWR extension peripheral:           
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *           + Peripheral Extended features functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @attention
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * All rights reserved.
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * in the root directory of this software component.
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   ******************************************************************************
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #include "stm32f7xx_hal.h"
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
ARM GAS  /tmp/ccV7GXjs.s 			page 2


  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief PWR HAL module driver
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @addtogroup PWREx_Private_Constants
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */    
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_OVERDRIVE_TIMEOUT_VALUE  1000
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_UDERDRIVE_TIMEOUT_VALUE  1000
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_BKPREG_TIMEOUT_VALUE     1000
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** #define PWR_VOSRDY_TIMEOUT_VALUE     1000
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @}
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /* Private functions ---------------------------------------------------------*/
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWREx Exported Functions
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *  @{
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Peripheral Extended features functions 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *  @brief Peripheral Extended features functions 
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** @verbatim   
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  ===============================================================================
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****                  ##### Peripheral extended features functions #####
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  ===============================================================================
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** Main and Backup Regulators configuration ***
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     ================================================
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..] 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The backup domain includes 4 Kbytes of backup SRAM accessible only from 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the CPU, and address in 32-bit, 16-bit or 8-bit mode. Its content is 
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           retained even in Standby or VBAT mode when the low power backup regulator
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           is enabled. It can be considered as an internal EEPROM when VBAT is 
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           always present. You can use the HAL_PWREx_EnableBkUpReg() function to 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           enable the low power backup regulator. 
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) When the backup domain is supplied by VDD (analog switch connected to VDD) 
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the backup SRAM is powered from VDD which replaces the VBAT power supply to 
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           save battery life.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The backup SRAM is not mass erased by a tamper event. It is read 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           protected to prevent confidential data, such as cryptographic private 
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           key, from being accessed. The backup SRAM can be erased only through 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the Flash interface when a protection level change from level 1 to 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           level 0 is requested. 
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       -@- Refer to the description of Read protection (RDP) in the Flash 
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           programming manual.
ARM GAS  /tmp/ccV7GXjs.s 			page 3


  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) The main internal regulator can be configured to have a tradeoff between 
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           performance and power consumption when the device does not operate at 
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           the maximum frequency. This is done through __HAL_PWR_MAINREGULATORMODE_CONFIG() 
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           macro which configure VOS bit in PWR_CR register
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         Refer to the product datasheets for more details.
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** FLASH Power Down configuration ****
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     =======================================
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..] 
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       (+) By setting the FPDS bit in the PWR_CR register by using the 
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           HAL_PWREx_EnableFlashPowerDown() function, the Flash memory also enters power 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           down mode when the device enters Stop mode. When the Flash memory 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           is in power down mode, an additional startup delay is incurred when 
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****           waking up from Stop mode.
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     *** Over-Drive and Under-Drive configuration ****
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     =================================================
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     [..]         
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****        (+) In Run mode: the main regulator has 2 operating modes available:
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         (++) Normal mode: The CPU and core logic operate at maximum frequency at a given 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****              voltage scaling (scale 1, scale 2 or scale 3)
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         (++) Over-drive mode: This mode allows the CPU and the core logic to operate at a 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             higher frequency than the normal mode for a given voltage scaling (scale 1,  
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             scale 2 or scale 3). This mode is enabled through HAL_PWREx_EnableOverDrive() function 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             disabled by HAL_PWREx_DisableOverDrive() function, to enter or exit from Over-drive mod
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****             the sequence described in Reference manual.
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****              
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****        (+) In Stop mode: the main regulator or low power regulator supplies a low power 
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****            voltage to the 1.2V domain, thus preserving the content of registers 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****            and internal SRAM. 2 operating modes are available:
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****          (++) Normal mode: the 1.2V domain is preserved in nominal leakage mode. This mode is only 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               available when the main regulator or the low power regulator is used in Scale 3 or 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               low voltage mode.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****          (++) Under-drive mode: the 1.2V domain is preserved in reduced leakage mode. This mode is 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****               available when the main regulator or the low power regulator is in low voltage mode.
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** @endverbatim
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @{
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables the Backup Regulator.
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableBkUpReg(void)
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
  29              		.loc 1 135 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
ARM GAS  /tmp/ccV7GXjs.s 			page 4


 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
  38              		.loc 1 136 3 view .LVU1
  39              	.LVL0:
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Backup regulator */
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_BRE;
  40              		.loc 1 139 3 view .LVU2
  41              		.loc 1 139 6 is_stmt 0 view .LVU3
  42 0002 0D4B     		ldr	r3, .L8
  43 0004 5A68     		ldr	r2, [r3, #4]
  44              		.loc 1 139 13 view .LVU4
  45 0006 42F40072 		orr	r2, r2, #512
  46 000a 5A60     		str	r2, [r3, #4]
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Workaround for the following hardware bug: */
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Id 19: PWR : No STANDBY wake-up when Back-up RAM enabled (ref. Errata Sheet p23) */
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_EIWUP;
  47              		.loc 1 143 3 is_stmt 1 view .LVU5
  48              		.loc 1 143 6 is_stmt 0 view .LVU6
  49 000c 5A68     		ldr	r2, [r3, #4]
  50              		.loc 1 143 13 view .LVU7
  51 000e 42F48072 		orr	r2, r2, #256
  52 0012 5A60     		str	r2, [r3, #4]
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
  53              		.loc 1 146 3 is_stmt 1 view .LVU8
  54              		.loc 1 146 15 is_stmt 0 view .LVU9
  55 0014 FFF7FEFF 		bl	HAL_GetTick
  56              	.LVL1:
  57 0018 0446     		mov	r4, r0
  58              	.LVL2:
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait till Backup regulator ready flag is set */  
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) == RESET)
  59              		.loc 1 149 3 is_stmt 1 view .LVU10
  60              	.L2:
  61              		.loc 1 149 42 view .LVU11
  62              		.loc 1 149 9 is_stmt 0 view .LVU12
  63 001a 074B     		ldr	r3, .L8
  64 001c 5B68     		ldr	r3, [r3, #4]
  65              		.loc 1 149 42 view .LVU13
  66 001e 13F0080F 		tst	r3, #8
  67 0022 07D1     		bne	.L7
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_BKPREG_TIMEOUT_VALUE)
  68              		.loc 1 151 5 is_stmt 1 view .LVU14
  69              		.loc 1 151 9 is_stmt 0 view .LVU15
  70 0024 FFF7FEFF 		bl	HAL_GetTick
  71              	.LVL3:
  72              		.loc 1 151 23 view .LVU16
  73 0028 001B     		subs	r0, r0, r4
  74              		.loc 1 151 7 view .LVU17
  75 002a B0F57A7F 		cmp	r0, #1000
  76 002e F4D9     		bls	.L2
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
ARM GAS  /tmp/ccV7GXjs.s 			page 5


  77              		.loc 1 153 14 view .LVU18
  78 0030 0320     		movs	r0, #3
  79 0032 00E0     		b	.L3
  80              	.L7:
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     } 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
  81              		.loc 1 156 10 view .LVU19
  82 0034 0020     		movs	r0, #0
  83              	.L3:
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
  84              		.loc 1 157 1 view .LVU20
  85 0036 10BD     		pop	{r4, pc}
  86              	.LVL4:
  87              	.L9:
  88              		.loc 1 157 1 view .LVU21
  89              		.align	2
  90              	.L8:
  91 0038 00700040 		.word	1073770496
  92              		.cfi_endproc
  93              	.LFE141:
  95              		.section	.text.HAL_PWREx_DisableBkUpReg,"ax",%progbits
  96              		.align	1
  97              		.global	HAL_PWREx_DisableBkUpReg
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	HAL_PWREx_DisableBkUpReg:
 103              	.LFB142:
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables the Backup Regulator.
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableBkUpReg(void)
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 104              		.loc 1 164 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 10B5     		push	{r4, lr}
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 113              		.loc 1 165 3 view .LVU23
 114              	.LVL5:
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable Backup regulator */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 &= (uint32_t)~((uint32_t)PWR_CSR1_BRE);
 115              		.loc 1 168 3 view .LVU24
 116              		.loc 1 168 6 is_stmt 0 view .LVU25
 117 0002 0D4B     		ldr	r3, .L17
 118 0004 5A68     		ldr	r2, [r3, #4]
 119              		.loc 1 168 13 view .LVU26
 120 0006 22F40072 		bic	r2, r2, #512
ARM GAS  /tmp/ccV7GXjs.s 			page 6


 121 000a 5A60     		str	r2, [r3, #4]
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Workaround for the following hardware bug: */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Id 19: PWR : No STANDBY wake-up when Back-up RAM enabled (ref. Errata Sheet p23) */
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CSR1 |= PWR_CSR1_EIWUP;
 122              		.loc 1 172 3 is_stmt 1 view .LVU27
 123              		.loc 1 172 6 is_stmt 0 view .LVU28
 124 000c 5A68     		ldr	r2, [r3, #4]
 125              		.loc 1 172 13 view .LVU29
 126 000e 42F48072 		orr	r2, r2, #256
 127 0012 5A60     		str	r2, [r3, #4]
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 128              		.loc 1 175 3 is_stmt 1 view .LVU30
 129              		.loc 1 175 15 is_stmt 0 view .LVU31
 130 0014 FFF7FEFF 		bl	HAL_GetTick
 131              	.LVL6:
 132 0018 0446     		mov	r4, r0
 133              	.LVL7:
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait till Backup regulator ready flag is set */  
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) != RESET)
 134              		.loc 1 178 3 is_stmt 1 view .LVU32
 135              	.L11:
 136              		.loc 1 178 42 view .LVU33
 137              		.loc 1 178 9 is_stmt 0 view .LVU34
 138 001a 074B     		ldr	r3, .L17
 139 001c 5B68     		ldr	r3, [r3, #4]
 140              		.loc 1 178 42 view .LVU35
 141 001e 13F0080F 		tst	r3, #8
 142 0022 07D0     		beq	.L16
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_BKPREG_TIMEOUT_VALUE)
 143              		.loc 1 180 5 is_stmt 1 view .LVU36
 144              		.loc 1 180 9 is_stmt 0 view .LVU37
 145 0024 FFF7FEFF 		bl	HAL_GetTick
 146              	.LVL8:
 147              		.loc 1 180 23 view .LVU38
 148 0028 001B     		subs	r0, r0, r4
 149              		.loc 1 180 7 view .LVU39
 150 002a B0F57A7F 		cmp	r0, #1000
 151 002e F4D9     		bls	.L11
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 152              		.loc 1 182 14 view .LVU40
 153 0030 0320     		movs	r0, #3
 154 0032 00E0     		b	.L12
 155              	.L16:
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     } 
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 156              		.loc 1 185 10 view .LVU41
 157 0034 0020     		movs	r0, #0
 158              	.L12:
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 159              		.loc 1 186 1 view .LVU42
ARM GAS  /tmp/ccV7GXjs.s 			page 7


 160 0036 10BD     		pop	{r4, pc}
 161              	.LVL9:
 162              	.L18:
 163              		.loc 1 186 1 view .LVU43
 164              		.align	2
 165              	.L17:
 166 0038 00700040 		.word	1073770496
 167              		.cfi_endproc
 168              	.LFE142:
 170              		.section	.text.HAL_PWREx_EnableFlashPowerDown,"ax",%progbits
 171              		.align	1
 172              		.global	HAL_PWREx_EnableFlashPowerDown
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	HAL_PWREx_EnableFlashPowerDown:
 178              	.LFB143:
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables the Flash Power Down in Stop mode.
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableFlashPowerDown(void)
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 179              		.loc 1 193 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Flash Power Down */
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_FPDS;
 184              		.loc 1 195 3 view .LVU45
 185              		.loc 1 195 6 is_stmt 0 view .LVU46
 186 0000 024A     		ldr	r2, .L20
 187 0002 1368     		ldr	r3, [r2]
 188              		.loc 1 195 12 view .LVU47
 189 0004 43F40073 		orr	r3, r3, #512
 190 0008 1360     		str	r3, [r2]
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 191              		.loc 1 196 1 view .LVU48
 192 000a 7047     		bx	lr
 193              	.L21:
 194              		.align	2
 195              	.L20:
 196 000c 00700040 		.word	1073770496
 197              		.cfi_endproc
 198              	.LFE143:
 200              		.section	.text.HAL_PWREx_DisableFlashPowerDown,"ax",%progbits
 201              		.align	1
 202              		.global	HAL_PWREx_DisableFlashPowerDown
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 207              	HAL_PWREx_DisableFlashPowerDown:
 208              	.LFB144:
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
ARM GAS  /tmp/ccV7GXjs.s 			page 8


 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables the Flash Power Down in Stop mode.
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableFlashPowerDown(void)
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 209              		.loc 1 203 1 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Flash Power Down */
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_FPDS);
 214              		.loc 1 205 3 view .LVU50
 215              		.loc 1 205 6 is_stmt 0 view .LVU51
 216 0000 024A     		ldr	r2, .L23
 217 0002 1368     		ldr	r3, [r2]
 218              		.loc 1 205 12 view .LVU52
 219 0004 23F40073 		bic	r3, r3, #512
 220 0008 1360     		str	r3, [r2]
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 221              		.loc 1 206 1 view .LVU53
 222 000a 7047     		bx	lr
 223              	.L24:
 224              		.align	2
 225              	.L23:
 226 000c 00700040 		.word	1073770496
 227              		.cfi_endproc
 228              	.LFE144:
 230              		.section	.text.HAL_PWREx_EnableMainRegulatorLowVoltage,"ax",%progbits
 231              		.align	1
 232              		.global	HAL_PWREx_EnableMainRegulatorLowVoltage
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	HAL_PWREx_EnableMainRegulatorLowVoltage:
 238              	.LFB145:
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables Main Regulator low voltage mode.
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableMainRegulatorLowVoltage(void)
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 239              		.loc 1 213 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Main regulator low voltage */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_MRUDS;
 244              		.loc 1 215 3 view .LVU55
 245              		.loc 1 215 6 is_stmt 0 view .LVU56
 246 0000 024A     		ldr	r2, .L26
 247 0002 1368     		ldr	r3, [r2]
 248              		.loc 1 215 12 view .LVU57
 249 0004 43F40063 		orr	r3, r3, #2048
 250 0008 1360     		str	r3, [r2]
ARM GAS  /tmp/ccV7GXjs.s 			page 9


 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 251              		.loc 1 216 1 view .LVU58
 252 000a 7047     		bx	lr
 253              	.L27:
 254              		.align	2
 255              	.L26:
 256 000c 00700040 		.word	1073770496
 257              		.cfi_endproc
 258              	.LFE145:
 260              		.section	.text.HAL_PWREx_DisableMainRegulatorLowVoltage,"ax",%progbits
 261              		.align	1
 262              		.global	HAL_PWREx_DisableMainRegulatorLowVoltage
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 267              	HAL_PWREx_DisableMainRegulatorLowVoltage:
 268              	.LFB146:
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables Main Regulator low voltage mode.
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableMainRegulatorLowVoltage(void)
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {  
 269              		.loc 1 223 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable Main regulator low voltage */
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_MRUDS);
 274              		.loc 1 225 3 view .LVU60
 275              		.loc 1 225 6 is_stmt 0 view .LVU61
 276 0000 024A     		ldr	r2, .L29
 277 0002 1368     		ldr	r3, [r2]
 278              		.loc 1 225 12 view .LVU62
 279 0004 23F40063 		bic	r3, r3, #2048
 280 0008 1360     		str	r3, [r2]
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 281              		.loc 1 226 1 view .LVU63
 282 000a 7047     		bx	lr
 283              	.L30:
 284              		.align	2
 285              	.L29:
 286 000c 00700040 		.word	1073770496
 287              		.cfi_endproc
 288              	.LFE146:
 290              		.section	.text.HAL_PWREx_EnableLowRegulatorLowVoltage,"ax",%progbits
 291              		.align	1
 292              		.global	HAL_PWREx_EnableLowRegulatorLowVoltage
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	HAL_PWREx_EnableLowRegulatorLowVoltage:
 298              	.LFB147:
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
ARM GAS  /tmp/ccV7GXjs.s 			page 10


 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Enables Low Power Regulator low voltage mode.
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowRegulatorLowVoltage(void)
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 299              		.loc 1 233 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable low power regulator */
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 |= PWR_CR1_LPUDS;
 304              		.loc 1 235 3 view .LVU65
 305              		.loc 1 235 6 is_stmt 0 view .LVU66
 306 0000 024A     		ldr	r2, .L32
 307 0002 1368     		ldr	r3, [r2]
 308              		.loc 1 235 12 view .LVU67
 309 0004 43F48063 		orr	r3, r3, #1024
 310 0008 1360     		str	r3, [r2]
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 311              		.loc 1 236 1 view .LVU68
 312 000a 7047     		bx	lr
 313              	.L33:
 314              		.align	2
 315              	.L32:
 316 000c 00700040 		.word	1073770496
 317              		.cfi_endproc
 318              	.LFE147:
 320              		.section	.text.HAL_PWREx_DisableLowRegulatorLowVoltage,"ax",%progbits
 321              		.align	1
 322              		.global	HAL_PWREx_DisableLowRegulatorLowVoltage
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	HAL_PWREx_DisableLowRegulatorLowVoltage:
 328              	.LFB148:
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Disables Low Power Regulator low voltage mode.
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** void HAL_PWREx_DisableLowRegulatorLowVoltage(void)
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 329              		.loc 1 243 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable low power regulator */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 &= (uint32_t)~((uint32_t)PWR_CR1_LPUDS);
 334              		.loc 1 245 3 view .LVU70
 335              		.loc 1 245 6 is_stmt 0 view .LVU71
 336 0000 024A     		ldr	r2, .L35
 337 0002 1368     		ldr	r3, [r2]
 338              		.loc 1 245 12 view .LVU72
 339 0004 23F48063 		bic	r3, r3, #1024
 340 0008 1360     		str	r3, [r2]
ARM GAS  /tmp/ccV7GXjs.s 			page 11


 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 341              		.loc 1 246 1 view .LVU73
 342 000a 7047     		bx	lr
 343              	.L36:
 344              		.align	2
 345              	.L35:
 346 000c 00700040 		.word	1073770496
 347              		.cfi_endproc
 348              	.LFE148:
 350              		.section	.text.HAL_PWREx_EnableOverDrive,"ax",%progbits
 351              		.align	1
 352              		.global	HAL_PWREx_EnableOverDrive
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 357              	HAL_PWREx_EnableOverDrive:
 358              	.LFB149:
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Activates the Over-Drive mode.
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   This mode allows the CPU and the core logic to operate at a higher frequency
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         than the normal mode for a given voltage scaling (scale 1, scale 2 or scale 3).   
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   It is recommended to enter or exit Over-drive mode when the application is not running 
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         critical tasks and when the system clock source is either HSI or HSE. 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 359              		.loc 1 259 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 8
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 10B5     		push	{r4, lr}
 364              	.LCFI2:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 4, -8
 367              		.cfi_offset 14, -4
 368 0002 82B0     		sub	sp, sp, #8
 369              	.LCFI3:
 370              		.cfi_def_cfa_offset 16
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 371              		.loc 1 260 3 view .LVU75
 372              	.LVL10:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 373              		.loc 1 262 3 view .LVU76
 374              	.LBB2:
 375              		.loc 1 262 3 view .LVU77
 376              		.loc 1 262 3 view .LVU78
 377 0004 1B4B     		ldr	r3, .L48
 378 0006 1A6C     		ldr	r2, [r3, #64]
 379 0008 42F08052 		orr	r2, r2, #268435456
 380 000c 1A64     		str	r2, [r3, #64]
 381              		.loc 1 262 3 view .LVU79
 382 000e 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccV7GXjs.s 			page 12


 383 0010 03F08053 		and	r3, r3, #268435456
 384 0014 0193     		str	r3, [sp, #4]
 385              		.loc 1 262 3 view .LVU80
 386 0016 019B     		ldr	r3, [sp, #4]
 387              	.LBE2:
 388              		.loc 1 262 3 view .LVU81
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Over-drive to extend the clock frequency to 216 MHz */
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVE_ENABLE();
 389              		.loc 1 265 3 view .LVU82
 390 0018 174A     		ldr	r2, .L48+4
 391 001a 1368     		ldr	r3, [r2]
 392 001c 43F48033 		orr	r3, r3, #65536
 393 0020 1360     		str	r3, [r2]
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 394              		.loc 1 268 3 view .LVU83
 395              		.loc 1 268 15 is_stmt 0 view .LVU84
 396 0022 FFF7FEFF 		bl	HAL_GetTick
 397              	.LVL11:
 398 0026 0446     		mov	r4, r0
 399              	.LVL12:
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 400              		.loc 1 270 3 is_stmt 1 view .LVU85
 401              	.L38:
 402              		.loc 1 270 9 view .LVU86
 403              		.loc 1 270 10 is_stmt 0 view .LVU87
 404 0028 134B     		ldr	r3, .L48+4
 405 002a 5B68     		ldr	r3, [r3, #4]
 406              		.loc 1 270 9 view .LVU88
 407 002c 13F4803F 		tst	r3, #65536
 408 0030 08D1     		bne	.L46
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 409              		.loc 1 272 5 is_stmt 1 view .LVU89
 410              		.loc 1 272 9 is_stmt 0 view .LVU90
 411 0032 FFF7FEFF 		bl	HAL_GetTick
 412              	.LVL13:
 413              		.loc 1 272 23 view .LVU91
 414 0036 001B     		subs	r0, r0, r4
 415              		.loc 1 272 7 view .LVU92
 416 0038 B0F57A7F 		cmp	r0, #1000
 417 003c F4D9     		bls	.L38
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 418              		.loc 1 274 14 view .LVU93
 419 003e 0320     		movs	r0, #3
 420              	.L39:
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Over-drive switch */
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
ARM GAS  /tmp/ccV7GXjs.s 			page 13


 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   } 
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 421              		.loc 1 292 1 view .LVU94
 422 0040 02B0     		add	sp, sp, #8
 423              	.LCFI4:
 424              		.cfi_remember_state
 425              		.cfi_def_cfa_offset 8
 426              		@ sp needed
 427 0042 10BD     		pop	{r4, pc}
 428              	.LVL14:
 429              	.L46:
 430              	.LCFI5:
 431              		.cfi_restore_state
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 432              		.loc 1 279 3 is_stmt 1 view .LVU95
 433 0044 0C4A     		ldr	r2, .L48+4
 434 0046 1368     		ldr	r3, [r2]
 435 0048 43F40033 		orr	r3, r3, #131072
 436 004c 1360     		str	r3, [r2]
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 437              		.loc 1 282 3 view .LVU96
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 438              		.loc 1 282 15 is_stmt 0 view .LVU97
 439 004e FFF7FEFF 		bl	HAL_GetTick
 440              	.LVL15:
 441 0052 0446     		mov	r4, r0
 442              	.LVL16:
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 443              		.loc 1 284 3 is_stmt 1 view .LVU98
 444              	.L41:
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 445              		.loc 1 284 9 view .LVU99
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 446              		.loc 1 284 10 is_stmt 0 view .LVU100
 447 0054 084B     		ldr	r3, .L48+4
 448 0056 5B68     		ldr	r3, [r3, #4]
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 449              		.loc 1 284 9 view .LVU101
 450 0058 13F4003F 		tst	r3, #131072
 451 005c 07D1     		bne	.L47
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 452              		.loc 1 286 5 is_stmt 1 view .LVU102
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 453              		.loc 1 286 9 is_stmt 0 view .LVU103
 454 005e FFF7FEFF 		bl	HAL_GetTick
 455              	.LVL17:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 456              		.loc 1 286 23 view .LVU104
ARM GAS  /tmp/ccV7GXjs.s 			page 14


 457 0062 001B     		subs	r0, r0, r4
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 458              		.loc 1 286 7 view .LVU105
 459 0064 B0F57A7F 		cmp	r0, #1000
 460 0068 F4D9     		bls	.L41
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 461              		.loc 1 288 14 view .LVU106
 462 006a 0320     		movs	r0, #3
 463 006c E8E7     		b	.L39
 464              	.L47:
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 465              		.loc 1 291 10 view .LVU107
 466 006e 0020     		movs	r0, #0
 467 0070 E6E7     		b	.L39
 468              	.L49:
 469 0072 00BF     		.align	2
 470              	.L48:
 471 0074 00380240 		.word	1073887232
 472 0078 00700040 		.word	1073770496
 473              		.cfi_endproc
 474              	.LFE149:
 476              		.section	.text.HAL_PWREx_DisableOverDrive,"ax",%progbits
 477              		.align	1
 478              		.global	HAL_PWREx_DisableOverDrive
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	HAL_PWREx_DisableOverDrive:
 484              	.LFB150:
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Deactivates the Over-Drive mode.
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   This mode allows the CPU and the core logic to operate at a higher frequency
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         than the normal mode for a given voltage scaling (scale 1, scale 2 or scale 3).    
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   It is recommended to enter or exit Over-drive mode when the application is not running 
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         critical tasks and when the system clock source is either HSI or HSE. 
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         The peripheral clocks must be enabled once the Over-drive mode is activated.
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL status
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableOverDrive(void)
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 485              		.loc 1 305 1 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489 0000 10B5     		push	{r4, lr}
 490              	.LCFI6:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 4, -8
 493              		.cfi_offset 14, -4
 494 0002 82B0     		sub	sp, sp, #8
 495              	.LCFI7:
 496              		.cfi_def_cfa_offset 16
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 497              		.loc 1 306 3 view .LVU109
 498              	.LVL18:
ARM GAS  /tmp/ccV7GXjs.s 			page 15


 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 499              		.loc 1 308 3 view .LVU110
 500              	.LBB3:
 501              		.loc 1 308 3 view .LVU111
 502              		.loc 1 308 3 view .LVU112
 503 0004 1B4B     		ldr	r3, .L61
 504 0006 1A6C     		ldr	r2, [r3, #64]
 505 0008 42F08052 		orr	r2, r2, #268435456
 506 000c 1A64     		str	r2, [r3, #64]
 507              		.loc 1 308 3 view .LVU113
 508 000e 1B6C     		ldr	r3, [r3, #64]
 509 0010 03F08053 		and	r3, r3, #268435456
 510 0014 0193     		str	r3, [sp, #4]
 511              		.loc 1 308 3 view .LVU114
 512 0016 019B     		ldr	r3, [sp, #4]
 513              	.LBE3:
 514              		.loc 1 308 3 view .LVU115
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Over-drive switch */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVESWITCHING_DISABLE();
 515              		.loc 1 311 3 view .LVU116
 516 0018 174A     		ldr	r2, .L61+4
 517 001a 1368     		ldr	r3, [r2]
 518 001c 23F40033 		bic	r3, r3, #131072
 519 0020 1360     		str	r3, [r2]
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 520              		.loc 1 314 3 view .LVU117
 521              		.loc 1 314 15 is_stmt 0 view .LVU118
 522 0022 FFF7FEFF 		bl	HAL_GetTick
 523              	.LVL19:
 524 0026 0446     		mov	r4, r0
 525              	.LVL20:
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****  
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 526              		.loc 1 316 3 is_stmt 1 view .LVU119
 527              	.L51:
 528              		.loc 1 316 9 view .LVU120
 529 0028 134B     		ldr	r3, .L61+4
 530 002a 5B68     		ldr	r3, [r3, #4]
 531 002c 13F4003F 		tst	r3, #131072
 532 0030 08D0     		beq	.L59
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 533              		.loc 1 318 5 view .LVU121
 534              		.loc 1 318 9 is_stmt 0 view .LVU122
 535 0032 FFF7FEFF 		bl	HAL_GetTick
 536              	.LVL21:
 537              		.loc 1 318 23 view .LVU123
 538 0036 001B     		subs	r0, r0, r4
 539              		.loc 1 318 7 view .LVU124
 540 0038 B0F57A7F 		cmp	r0, #1000
 541 003c F4D9     		bls	.L51
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
ARM GAS  /tmp/ccV7GXjs.s 			page 16


 542              		.loc 1 320 14 view .LVU125
 543 003e 0320     		movs	r0, #3
 544              	.L52:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   } 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Disable the Over-drive */
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_OVERDRIVE_DISABLE();
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 545              		.loc 1 339 1 view .LVU126
 546 0040 02B0     		add	sp, sp, #8
 547              	.LCFI8:
 548              		.cfi_remember_state
 549              		.cfi_def_cfa_offset 8
 550              		@ sp needed
 551 0042 10BD     		pop	{r4, pc}
 552              	.LVL22:
 553              	.L59:
 554              	.LCFI9:
 555              		.cfi_restore_state
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 556              		.loc 1 325 3 is_stmt 1 view .LVU127
 557 0044 0C4A     		ldr	r2, .L61+4
 558 0046 1368     		ldr	r3, [r2]
 559 0048 23F48033 		bic	r3, r3, #65536
 560 004c 1360     		str	r3, [r2]
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 561              		.loc 1 328 3 view .LVU128
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 562              		.loc 1 328 15 is_stmt 0 view .LVU129
 563 004e FFF7FEFF 		bl	HAL_GetTick
 564              	.LVL23:
 565 0052 0446     		mov	r4, r0
 566              	.LVL24:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 567              		.loc 1 330 3 is_stmt 1 view .LVU130
 568              	.L54:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 569              		.loc 1 330 9 view .LVU131
 570 0054 084B     		ldr	r3, .L61+4
 571 0056 5B68     		ldr	r3, [r3, #4]
 572 0058 13F4803F 		tst	r3, #65536
 573 005c 07D0     		beq	.L60
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
ARM GAS  /tmp/ccV7GXjs.s 			page 17


 574              		.loc 1 332 5 view .LVU132
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 575              		.loc 1 332 9 is_stmt 0 view .LVU133
 576 005e FFF7FEFF 		bl	HAL_GetTick
 577              	.LVL25:
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 578              		.loc 1 332 23 view .LVU134
 579 0062 001B     		subs	r0, r0, r4
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 580              		.loc 1 332 7 view .LVU135
 581 0064 B0F57A7F 		cmp	r0, #1000
 582 0068 F4D9     		bls	.L54
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 583              		.loc 1 334 14 view .LVU136
 584 006a 0320     		movs	r0, #3
 585 006c E8E7     		b	.L52
 586              	.L60:
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 587              		.loc 1 338 10 view .LVU137
 588 006e 0020     		movs	r0, #0
 589 0070 E6E7     		b	.L52
 590              	.L62:
 591 0072 00BF     		.align	2
 592              	.L61:
 593 0074 00380240 		.word	1073887232
 594 0078 00700040 		.word	1073770496
 595              		.cfi_endproc
 596              	.LFE150:
 598              		.section	.text.HAL_PWREx_EnterUnderDriveSTOPMode,"ax",%progbits
 599              		.align	1
 600              		.global	HAL_PWREx_EnterUnderDriveSTOPMode
 601              		.syntax unified
 602              		.thumb
 603              		.thumb_func
 605              	HAL_PWREx_EnterUnderDriveSTOPMode:
 606              	.LVL26:
 607              	.LFB151:
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief  Enters in Under-Drive STOP mode.
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note    This mode can be selected only when the Under-Drive is already active 
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *   
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note    This mode is enabled only with STOP low power mode.
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          In this mode, the 1.2V domain is preserved in reduced leakage mode. This 
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          mode is only available when the main regulator or the low power regulator 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          is in low voltage mode
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   If the Under-drive mode was enabled, it is automatically disabled after 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         exiting Stop mode. 
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         When the voltage regulator operates in Under-drive mode, an additional  
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         startup delay is induced when waking up from Stop mode.
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                    
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   In Stop mode, all I/O pins keep the same state as in Run mode.
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *   
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   When exiting Stop mode by issuing an interrupt or a wakeup event, 
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock.
ARM GAS  /tmp/ccV7GXjs.s 			page 18


 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *           
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note   When the voltage regulator operates in low power mode, an additional 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         startup delay is incurred when waking up from Stop mode. 
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *     
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  Regulator specifies the regulator state in STOP mode.
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_MAINREGULATOR_UNDERDRIVE_ON:  Main Regulator in under-drive mode 
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                 and Flash memory in power-down when the device is in Stop under-drive mode
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_LOWPOWERREGULATOR_UNDERDRIVE_ON:  Low Power Regulator in under-drive mode 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                and Flash memory in power-down when the device is in Stop under-drive mode
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  STOPEntry specifies if STOP mode in entered with WFI or WFE instruction.
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter STOP mode with WFI instruction
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter STOP mode with WFE instruction
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval None
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnterUnderDriveSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 608              		.loc 1 379 1 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 8
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		.loc 1 379 1 is_stmt 0 view .LVU139
 613 0000 70B5     		push	{r4, r5, r6, lr}
 614              	.LCFI10:
 615              		.cfi_def_cfa_offset 16
 616              		.cfi_offset 4, -16
 617              		.cfi_offset 5, -12
 618              		.cfi_offset 6, -8
 619              		.cfi_offset 14, -4
 620 0002 82B0     		sub	sp, sp, #8
 621              	.LCFI11:
 622              		.cfi_def_cfa_offset 24
 623 0004 0646     		mov	r6, r0
 624 0006 0D46     		mov	r5, r1
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tempreg = 0;
 625              		.loc 1 380 3 is_stmt 1 view .LVU140
 626              	.LVL27:
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 627              		.loc 1 381 3 view .LVU141
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Check the parameters */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_REGULATOR_UNDERDRIVE(Regulator));
 628              		.loc 1 384 3 view .LVU142
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 629              		.loc 1 385 3 view .LVU143
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Power ctrl clock */
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 630              		.loc 1 388 3 view .LVU144
 631              	.LBB4:
 632              		.loc 1 388 3 view .LVU145
 633              		.loc 1 388 3 view .LVU146
 634 0008 1E4B     		ldr	r3, .L73
 635 000a 1A6C     		ldr	r2, [r3, #64]
ARM GAS  /tmp/ccV7GXjs.s 			page 19


 636 000c 42F08052 		orr	r2, r2, #268435456
 637 0010 1A64     		str	r2, [r3, #64]
 638              		.loc 1 388 3 view .LVU147
 639 0012 1B6C     		ldr	r3, [r3, #64]
 640 0014 03F08053 		and	r3, r3, #268435456
 641 0018 0193     		str	r3, [sp, #4]
 642              		.loc 1 388 3 view .LVU148
 643 001a 019B     		ldr	r3, [sp, #4]
 644              	.LBE4:
 645              		.loc 1 388 3 view .LVU149
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Under-drive Mode ---------------------------------------------*/
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Clear Under-drive flag */
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_CLEAR_ODRUDR_FLAG();
 646              		.loc 1 391 3 view .LVU150
 647 001c 1A4B     		ldr	r3, .L73+4
 648 001e 5968     		ldr	r1, [r3, #4]
 649              	.LVL28:
 650              		.loc 1 391 3 is_stmt 0 view .LVU151
 651 0020 1A4A     		ldr	r2, .L73+8
 652 0022 0A43     		orrs	r2, r2, r1
 653 0024 5A60     		str	r2, [r3, #4]
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable the Under-drive */ 
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_PWR_UNDERDRIVE_ENABLE();
 654              		.loc 1 394 3 is_stmt 1 view .LVU152
 655 0026 1A68     		ldr	r2, [r3]
 656 0028 42F44022 		orr	r2, r2, #786432
 657 002c 1A60     		str	r2, [r3]
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Get tick */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tickstart = HAL_GetTick();
 658              		.loc 1 397 3 view .LVU153
 659              		.loc 1 397 15 is_stmt 0 view .LVU154
 660 002e FFF7FEFF 		bl	HAL_GetTick
 661              	.LVL29:
 662              		.loc 1 397 15 view .LVU155
 663 0032 0446     		mov	r4, r0
 664              	.LVL30:
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Wait for UnderDrive mode is ready */
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   while(__HAL_PWR_GET_FLAG(PWR_FLAG_UDRDY))
 665              		.loc 1 400 3 is_stmt 1 view .LVU156
 666              	.L64:
 667              		.loc 1 400 9 view .LVU157
 668 0034 144B     		ldr	r3, .L73+4
 669 0036 5B68     		ldr	r3, [r3, #4]
 670 0038 03F44023 		and	r3, r3, #786432
 671 003c B3F5402F 		cmp	r3, #786432
 672 0040 07D1     		bne	.L71
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     if((HAL_GetTick() - tickstart ) > PWR_UDERDRIVE_TIMEOUT_VALUE)
 673              		.loc 1 402 5 view .LVU158
 674              		.loc 1 402 9 is_stmt 0 view .LVU159
 675 0042 FFF7FEFF 		bl	HAL_GetTick
 676              	.LVL31:
 677              		.loc 1 402 23 view .LVU160
 678 0046 001B     		subs	r0, r0, r4
ARM GAS  /tmp/ccV7GXjs.s 			page 20


 679              		.loc 1 402 7 view .LVU161
 680 0048 B0F57A7F 		cmp	r0, #1000
 681 004c F2D9     		bls	.L64
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       return HAL_TIMEOUT;
 682              		.loc 1 404 14 view .LVU162
 683 004e 0320     		movs	r0, #3
 684 0050 13E0     		b	.L65
 685              	.L71:
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg = PWR->CR1;
 686              		.loc 1 409 3 is_stmt 1 view .LVU163
 687              		.loc 1 409 11 is_stmt 0 view .LVU164
 688 0052 0D4A     		ldr	r2, .L73+4
 689 0054 1168     		ldr	r1, [r2]
 690              	.LVL32:
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Clear PDDS, LPDS, MRLUDS and LPLUDS bits */
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg &= (uint32_t)~(PWR_CR1_PDDS | PWR_CR1_LPDS | PWR_CR1_LPUDS | PWR_CR1_MRUDS);
 691              		.loc 1 411 3 is_stmt 1 view .LVU165
 692              		.loc 1 411 11 is_stmt 0 view .LVU166
 693 0056 0E4B     		ldr	r3, .L73+12
 694 0058 0B40     		ands	r3, r3, r1
 695              	.LVL33:
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Set LPDS, MRLUDS and LPLUDS bits according to PWR_Regulator value */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   tempreg |= Regulator;
 696              		.loc 1 414 3 is_stmt 1 view .LVU167
 697              		.loc 1 414 11 is_stmt 0 view .LVU168
 698 005a 3343     		orrs	r3, r3, r6
 699              	.LVL34:
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Store the new value */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   PWR->CR1 = tempreg;
 700              		.loc 1 417 3 is_stmt 1 view .LVU169
 701              		.loc 1 417 12 is_stmt 0 view .LVU170
 702 005c 1360     		str	r3, [r2]
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 703              		.loc 1 420 3 is_stmt 1 view .LVU171
 704              		.loc 1 420 6 is_stmt 0 view .LVU172
 705 005e 0D4A     		ldr	r2, .L73+16
 706 0060 1369     		ldr	r3, [r2, #16]
 707              	.LVL35:
 708              		.loc 1 420 12 view .LVU173
 709 0062 43F00403 		orr	r3, r3, #4
 710 0066 1361     		str	r3, [r2, #16]
 711              	.LVL36:
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Select STOP mode entry --------------------------------------------------*/
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_SLEEPENTRY_WFI)
 712              		.loc 1 423 3 is_stmt 1 view .LVU174
 713              		.loc 1 423 5 is_stmt 0 view .LVU175
 714 0068 012D     		cmp	r5, #1
ARM GAS  /tmp/ccV7GXjs.s 			page 21


 715 006a 08D0     		beq	.L72
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {   
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __WFI();
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   else
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __WFE();
 716              		.loc 1 431 5 is_stmt 1 view .LVU176
 717              		.syntax unified
 718              	@ 431 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c" 1
 719 006c 20BF     		wfe
 720              	@ 0 "" 2
 721              		.thumb
 722              		.syntax unified
 723              	.L68:
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);
 724              		.loc 1 434 3 view .LVU177
 725              		.loc 1 434 6 is_stmt 0 view .LVU178
 726 006e 094A     		ldr	r2, .L73+16
 727 0070 1369     		ldr	r3, [r2, #16]
 728              		.loc 1 434 12 view .LVU179
 729 0072 23F00403 		bic	r3, r3, #4
 730 0076 1361     		str	r3, [r2, #16]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;  
 731              		.loc 1 436 3 is_stmt 1 view .LVU180
 732              		.loc 1 436 10 is_stmt 0 view .LVU181
 733 0078 0020     		movs	r0, #0
 734              	.LVL37:
 735              	.L65:
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 736              		.loc 1 437 1 view .LVU182
 737 007a 02B0     		add	sp, sp, #8
 738              	.LCFI12:
 739              		.cfi_remember_state
 740              		.cfi_def_cfa_offset 16
 741              		@ sp needed
 742 007c 70BD     		pop	{r4, r5, r6, pc}
 743              	.LVL38:
 744              	.L72:
 745              	.LCFI13:
 746              		.cfi_restore_state
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 747              		.loc 1 426 5 is_stmt 1 view .LVU183
 748              		.syntax unified
 749              	@ 426 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c" 1
 750 007e 30BF     		wfi
 751              	@ 0 "" 2
 752              		.thumb
 753              		.syntax unified
 754 0080 F5E7     		b	.L68
 755              	.L74:
 756 0082 00BF     		.align	2
ARM GAS  /tmp/ccV7GXjs.s 			page 22


 757              	.L73:
 758 0084 00380240 		.word	1073887232
 759 0088 00700040 		.word	1073770496
 760 008c 00010C00 		.word	786688
 761 0090 FCF3FFFF 		.word	-3076
 762 0094 00ED00E0 		.word	-536810240
 763              		.cfi_endproc
 764              	.LFE151:
 766              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
 767              		.align	1
 768              		.global	HAL_PWREx_GetVoltageRange
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 773              	HAL_PWREx_GetVoltageRange:
 774              	.LFB152:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Returns Voltage Scaling Range.
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1, PWR_REGULATOR_VOLTAGE_SCALE2 or 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            PWR_REGULATOR_VOLTAGE_SCALE3)PWR_REGULATOR_VOLTAGE_SCALE1
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */  
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 775              		.loc 1 445 1 view -0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return  (PWR->CR1 & PWR_CR1_VOS);
 780              		.loc 1 446 3 view .LVU185
 781              		.loc 1 446 15 is_stmt 0 view .LVU186
 782 0000 024B     		ldr	r3, .L76
 783 0002 1868     		ldr	r0, [r3]
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 784              		.loc 1 447 1 view .LVU187
 785 0004 00F44040 		and	r0, r0, #49152
 786 0008 7047     		bx	lr
 787              	.L77:
 788 000a 00BF     		.align	2
 789              	.L76:
 790 000c 00700040 		.word	1073770496
 791              		.cfi_endproc
 792              	.LFE152:
 794              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
 795              		.align	1
 796              		.global	HAL_PWREx_ControlVoltageScaling
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 801              	HAL_PWREx_ControlVoltageScaling:
 802              	.LVL39:
 803              	.LFB153:
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** /**
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @brief Configures the main internal regulator output voltage.
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @param  VoltageScaling specifies the regulator output voltage to achieve
ARM GAS  /tmp/ccV7GXjs.s 			page 23


 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE1: Regulator voltage output range 1 mode,
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.4 V,  
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 216 MHz.
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE2: Regulator voltage output range 2 mode,
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,                
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 180 MHz.
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE3: Regulator voltage output range 2 mode,
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.00 V,               
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *                                                system frequency up to 151 MHz.
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note To update the system clock frequency(SYSCLK):
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Set the HSI or HSE as system clock frequency using the HAL_RCC_ClockConfig().
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Call the HAL_RCC_OscConfig() to configure the PLL.
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Call HAL_PWREx_ConfigVoltageScaling() API to adjust the voltage scale.
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        - Set the new system clock frequency using the HAL_RCC_ClockConfig().
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note The scale can be modified only when the HSI or HSE clock source is selected 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *        as system clock source, otherwise the API returns HAL_ERROR.  
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note When the PLL is OFF, the voltage scale 3 is automatically selected and the VOS bits
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   *       value in the PWR_CR1 register are not taken in account.
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note This API forces the PLL state ON to allow the possibility to configure the voltage scale 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @note The new voltage scale is active only when the PLL is ON.  
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   * @retval HAL Status
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   */
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** {
 804              		.loc 1 477 1 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 8
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		.loc 1 477 1 is_stmt 0 view .LVU189
 809 0000 30B5     		push	{r4, r5, lr}
 810              	.LCFI14:
 811              		.cfi_def_cfa_offset 12
 812              		.cfi_offset 4, -12
 813              		.cfi_offset 5, -8
 814              		.cfi_offset 14, -4
 815 0002 83B0     		sub	sp, sp, #12
 816              	.LCFI15:
 817              		.cfi_def_cfa_offset 24
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   uint32_t tickstart = 0;
 818              		.loc 1 478 3 is_stmt 1 view .LVU190
 819              	.LVL40:
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   assert_param(IS_PWR_REGULATOR_VOLTAGE(VoltageScaling));
 820              		.loc 1 480 3 view .LVU191
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Enable Power ctrl clock */
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 821              		.loc 1 483 3 view .LVU192
 822              	.LBB5:
 823              		.loc 1 483 3 view .LVU193
 824              		.loc 1 483 3 view .LVU194
 825 0004 2C4B     		ldr	r3, .L94
 826 0006 1A6C     		ldr	r2, [r3, #64]
 827 0008 42F08052 		orr	r2, r2, #268435456
 828 000c 1A64     		str	r2, [r3, #64]
ARM GAS  /tmp/ccV7GXjs.s 			page 24


 829              		.loc 1 483 3 view .LVU195
 830 000e 1A6C     		ldr	r2, [r3, #64]
 831 0010 02F08052 		and	r2, r2, #268435456
 832 0014 0092     		str	r2, [sp]
 833              		.loc 1 483 3 view .LVU196
 834 0016 009A     		ldr	r2, [sp]
 835              	.LBE5:
 836              		.loc 1 483 3 view .LVU197
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** 
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   /* Check if the PLL is used as system clock or not */
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 837              		.loc 1 486 3 view .LVU198
 838              		.loc 1 486 6 is_stmt 0 view .LVU199
 839 0018 9B68     		ldr	r3, [r3, #8]
 840 001a 03F00C03 		and	r3, r3, #12
 841              		.loc 1 486 5 view .LVU200
 842 001e 082B     		cmp	r3, #8
 843 0020 46D0     		beq	.L86
 844 0022 0546     		mov	r5, r0
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Disable the main PLL */
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_RCC_PLL_DISABLE();
 845              		.loc 1 489 5 is_stmt 1 view .LVU201
 846 0024 244A     		ldr	r2, .L94
 847 0026 1368     		ldr	r3, [r2]
 848 0028 23F08073 		bic	r3, r3, #16777216
 849 002c 1360     		str	r3, [r2]
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();    
 850              		.loc 1 492 5 view .LVU202
 851              		.loc 1 492 17 is_stmt 0 view .LVU203
 852 002e FFF7FEFF 		bl	HAL_GetTick
 853              	.LVL41:
 854              		.loc 1 492 17 view .LVU204
 855 0032 0446     		mov	r4, r0
 856              	.LVL42:
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Wait till PLL is disabled */  
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 857              		.loc 1 494 5 is_stmt 1 view .LVU205
 858              	.L80:
 859              		.loc 1 494 47 view .LVU206
 860              		.loc 1 494 11 is_stmt 0 view .LVU207
 861 0034 204B     		ldr	r3, .L94
 862 0036 1B68     		ldr	r3, [r3]
 863              		.loc 1 494 47 view .LVU208
 864 0038 13F0007F 		tst	r3, #33554432
 865 003c 06D0     		beq	.L91
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 866              		.loc 1 496 7 is_stmt 1 view .LVU209
 867              		.loc 1 496 11 is_stmt 0 view .LVU210
 868 003e FFF7FEFF 		bl	HAL_GetTick
 869              	.LVL43:
 870              		.loc 1 496 25 view .LVU211
 871 0042 031B     		subs	r3, r0, r4
 872              		.loc 1 496 9 view .LVU212
ARM GAS  /tmp/ccV7GXjs.s 			page 25


 873 0044 022B     		cmp	r3, #2
 874 0046 F5D9     		bls	.L80
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 875              		.loc 1 498 16 view .LVU213
 876 0048 0320     		movs	r0, #3
 877 004a 32E0     		b	.L79
 878              	.L91:
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       }
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Set Range */
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(VoltageScaling);
 879              		.loc 1 503 5 is_stmt 1 view .LVU214
 880              	.LBB6:
 881              		.loc 1 503 5 view .LVU215
 882              		.loc 1 503 5 view .LVU216
 883 004c 1B4A     		ldr	r2, .L94+4
 884 004e 1368     		ldr	r3, [r2]
 885 0050 23F44043 		bic	r3, r3, #49152
 886 0054 2B43     		orrs	r3, r3, r5
 887 0056 1360     		str	r3, [r2]
 888              		.loc 1 503 5 view .LVU217
 889 0058 1368     		ldr	r3, [r2]
 890 005a 03F44043 		and	r3, r3, #49152
 891 005e 0193     		str	r3, [sp, #4]
 892              		.loc 1 503 5 view .LVU218
 893 0060 019B     		ldr	r3, [sp, #4]
 894              	.LBE6:
 895              		.loc 1 503 5 view .LVU219
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Enable the main PLL */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     __HAL_RCC_PLL_ENABLE();
 896              		.loc 1 506 5 view .LVU220
 897 0062 02F5E432 		add	r2, r2, #116736
 898 0066 1368     		ldr	r3, [r2]
 899 0068 43F08073 		orr	r3, r3, #16777216
 900 006c 1360     		str	r3, [r2]
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 901              		.loc 1 509 5 view .LVU221
 902              		.loc 1 509 17 is_stmt 0 view .LVU222
 903 006e FFF7FEFF 		bl	HAL_GetTick
 904              	.LVL44:
 905 0072 0446     		mov	r4, r0
 906              	.LVL45:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Wait till PLL is ready */  
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 907              		.loc 1 511 5 is_stmt 1 view .LVU223
 908              	.L82:
 909              		.loc 1 511 47 view .LVU224
 910              		.loc 1 511 11 is_stmt 0 view .LVU225
 911 0074 104B     		ldr	r3, .L94
 912 0076 1B68     		ldr	r3, [r3]
 913              		.loc 1 511 47 view .LVU226
 914 0078 13F0007F 		tst	r3, #33554432
ARM GAS  /tmp/ccV7GXjs.s 			page 26


 915 007c 06D1     		bne	.L92
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 916              		.loc 1 513 7 is_stmt 1 view .LVU227
 917              		.loc 1 513 11 is_stmt 0 view .LVU228
 918 007e FFF7FEFF 		bl	HAL_GetTick
 919              	.LVL46:
 920              		.loc 1 513 25 view .LVU229
 921 0082 001B     		subs	r0, r0, r4
 922              		.loc 1 513 9 view .LVU230
 923 0084 0228     		cmp	r0, #2
 924 0086 F5D9     		bls	.L82
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 925              		.loc 1 515 16 view .LVU231
 926 0088 0320     		movs	r0, #3
 927 008a 12E0     		b	.L79
 928              	.L92:
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       } 
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     /* Get Start Tick */
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     tickstart = HAL_GetTick();
 929              		.loc 1 520 5 is_stmt 1 view .LVU232
 930              		.loc 1 520 17 is_stmt 0 view .LVU233
 931 008c FFF7FEFF 		bl	HAL_GetTick
 932              	.LVL47:
 933 0090 0446     		mov	r4, r0
 934              	.LVL48:
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     while((__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY) == RESET))
 935              		.loc 1 521 5 is_stmt 1 view .LVU234
 936              	.L84:
 937              		.loc 1 521 48 view .LVU235
 938              		.loc 1 521 12 is_stmt 0 view .LVU236
 939 0092 0A4B     		ldr	r3, .L94+4
 940 0094 5B68     		ldr	r3, [r3, #4]
 941              		.loc 1 521 48 view .LVU237
 942 0096 13F4804F 		tst	r3, #16384
 943 009a 07D1     		bne	.L93
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     {
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       if((HAL_GetTick() - tickstart ) > PWR_VOSRDY_TIMEOUT_VALUE)
 944              		.loc 1 523 7 is_stmt 1 view .LVU238
 945              		.loc 1 523 11 is_stmt 0 view .LVU239
 946 009c FFF7FEFF 		bl	HAL_GetTick
 947              	.LVL49:
 948              		.loc 1 523 25 view .LVU240
 949 00a0 001B     		subs	r0, r0, r4
 950              		.loc 1 523 9 view .LVU241
 951 00a2 B0F57A7F 		cmp	r0, #1000
 952 00a6 F4D9     		bls	.L84
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       {
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 953              		.loc 1 525 16 view .LVU242
 954 00a8 0320     		movs	r0, #3
 955 00aa 02E0     		b	.L79
 956              	.L93:
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****       } 
ARM GAS  /tmp/ccV7GXjs.s 			page 27


 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     }
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   else
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   {
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****     return HAL_ERROR;
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   return HAL_OK;
 957              		.loc 1 533 10 view .LVU243
 958 00ac 0020     		movs	r0, #0
 959 00ae 00E0     		b	.L79
 960              	.LVL50:
 961              	.L86:
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c ****   }
 962              		.loc 1 531 12 view .LVU244
 963 00b0 0120     		movs	r0, #1
 964              	.LVL51:
 965              	.L79:
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c **** }
 966              		.loc 1 534 1 view .LVU245
 967 00b2 03B0     		add	sp, sp, #12
 968              	.LCFI16:
 969              		.cfi_def_cfa_offset 12
 970              		@ sp needed
 971 00b4 30BD     		pop	{r4, r5, pc}
 972              	.L95:
 973 00b6 00BF     		.align	2
 974              	.L94:
 975 00b8 00380240 		.word	1073887232
 976 00bc 00700040 		.word	1073770496
 977              		.cfi_endproc
 978              	.LFE153:
 980              		.text
 981              	.Letext0:
 982              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 983              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 984              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 985              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 986              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 987              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccV7GXjs.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_pwr_ex.c
     /tmp/ccV7GXjs.s:21     .text.HAL_PWREx_EnableBkUpReg:00000000 $t
     /tmp/ccV7GXjs.s:27     .text.HAL_PWREx_EnableBkUpReg:00000000 HAL_PWREx_EnableBkUpReg
     /tmp/ccV7GXjs.s:91     .text.HAL_PWREx_EnableBkUpReg:00000038 $d
     /tmp/ccV7GXjs.s:96     .text.HAL_PWREx_DisableBkUpReg:00000000 $t
     /tmp/ccV7GXjs.s:102    .text.HAL_PWREx_DisableBkUpReg:00000000 HAL_PWREx_DisableBkUpReg
     /tmp/ccV7GXjs.s:166    .text.HAL_PWREx_DisableBkUpReg:00000038 $d
     /tmp/ccV7GXjs.s:171    .text.HAL_PWREx_EnableFlashPowerDown:00000000 $t
     /tmp/ccV7GXjs.s:177    .text.HAL_PWREx_EnableFlashPowerDown:00000000 HAL_PWREx_EnableFlashPowerDown
     /tmp/ccV7GXjs.s:196    .text.HAL_PWREx_EnableFlashPowerDown:0000000c $d
     /tmp/ccV7GXjs.s:201    .text.HAL_PWREx_DisableFlashPowerDown:00000000 $t
     /tmp/ccV7GXjs.s:207    .text.HAL_PWREx_DisableFlashPowerDown:00000000 HAL_PWREx_DisableFlashPowerDown
     /tmp/ccV7GXjs.s:226    .text.HAL_PWREx_DisableFlashPowerDown:0000000c $d
     /tmp/ccV7GXjs.s:231    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:00000000 $t
     /tmp/ccV7GXjs.s:237    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:00000000 HAL_PWREx_EnableMainRegulatorLowVoltage
     /tmp/ccV7GXjs.s:256    .text.HAL_PWREx_EnableMainRegulatorLowVoltage:0000000c $d
     /tmp/ccV7GXjs.s:261    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:00000000 $t
     /tmp/ccV7GXjs.s:267    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:00000000 HAL_PWREx_DisableMainRegulatorLowVoltage
     /tmp/ccV7GXjs.s:286    .text.HAL_PWREx_DisableMainRegulatorLowVoltage:0000000c $d
     /tmp/ccV7GXjs.s:291    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:00000000 $t
     /tmp/ccV7GXjs.s:297    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:00000000 HAL_PWREx_EnableLowRegulatorLowVoltage
     /tmp/ccV7GXjs.s:316    .text.HAL_PWREx_EnableLowRegulatorLowVoltage:0000000c $d
     /tmp/ccV7GXjs.s:321    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:00000000 $t
     /tmp/ccV7GXjs.s:327    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:00000000 HAL_PWREx_DisableLowRegulatorLowVoltage
     /tmp/ccV7GXjs.s:346    .text.HAL_PWREx_DisableLowRegulatorLowVoltage:0000000c $d
     /tmp/ccV7GXjs.s:351    .text.HAL_PWREx_EnableOverDrive:00000000 $t
     /tmp/ccV7GXjs.s:357    .text.HAL_PWREx_EnableOverDrive:00000000 HAL_PWREx_EnableOverDrive
     /tmp/ccV7GXjs.s:471    .text.HAL_PWREx_EnableOverDrive:00000074 $d
     /tmp/ccV7GXjs.s:477    .text.HAL_PWREx_DisableOverDrive:00000000 $t
     /tmp/ccV7GXjs.s:483    .text.HAL_PWREx_DisableOverDrive:00000000 HAL_PWREx_DisableOverDrive
     /tmp/ccV7GXjs.s:593    .text.HAL_PWREx_DisableOverDrive:00000074 $d
     /tmp/ccV7GXjs.s:599    .text.HAL_PWREx_EnterUnderDriveSTOPMode:00000000 $t
     /tmp/ccV7GXjs.s:605    .text.HAL_PWREx_EnterUnderDriveSTOPMode:00000000 HAL_PWREx_EnterUnderDriveSTOPMode
     /tmp/ccV7GXjs.s:758    .text.HAL_PWREx_EnterUnderDriveSTOPMode:00000084 $d
     /tmp/ccV7GXjs.s:767    .text.HAL_PWREx_GetVoltageRange:00000000 $t
     /tmp/ccV7GXjs.s:773    .text.HAL_PWREx_GetVoltageRange:00000000 HAL_PWREx_GetVoltageRange
     /tmp/ccV7GXjs.s:790    .text.HAL_PWREx_GetVoltageRange:0000000c $d
     /tmp/ccV7GXjs.s:795    .text.HAL_PWREx_ControlVoltageScaling:00000000 $t
     /tmp/ccV7GXjs.s:801    .text.HAL_PWREx_ControlVoltageScaling:00000000 HAL_PWREx_ControlVoltageScaling
     /tmp/ccV7GXjs.s:975    .text.HAL_PWREx_ControlVoltageScaling:000000b8 $d

UNDEFINED SYMBOLS
HAL_GetTick
